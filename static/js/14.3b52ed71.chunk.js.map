{"version":3,"sources":["components/Column/index.tsx","components/CardNav/index.tsx","pages/Launchpad/styled.ts","pages/styled.ts","pages/Launchpad/components/LaunchCard.tsx","pages/Launchpad/components/CardContainer.tsx","pages/Launchpad/index.tsx"],"names":["Column","styled","div","AboutColumn","gap","justify","StyledNav","theme","colors","primary","StyledButtonMenu","ButtonMenu","background","Nav","Button","textSubtle","activeIndex","useContext","ThemeContext","size","variant","fullWidth","id","style","height","isDark","color","text","href","as","Section","CardGroup","Container","Flex","SectionTitle","Heading","StatusColor","LaunchCard","project","category","address","buyingCoin","title","image","wallpaperBg","desc","ownSale","status","socMeds","useState","totalForSaleTokens","remainingForSale","totalSales","expectedSales","percentage","stats","setStats","account","useWeb3React","contract","useLaunchpadContract","srcs","process","srcsBg","useEffect","calculateLaunchpadStats","then","r","padding","src","alt","bold","fill","SvgIcon","width","Icon","MediumIcon","STATE","active","backgroundColor","upcoming","maxHeight","minHeight","marginBottom","completed","primaryStep","parseInt","justifyContent","symbol","flexDirection","StyledLink","to","CardContainer","props","ProjectList","pages","map","item","LaunchpadHome","ProjectsLS","useProject","data","ActiveProjects","useMemo","filter","UpcomingProjects","CompletedProjects","Page","CardNav","length"],"mappings":"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","file":"static/js/14.3b52ed71.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nconst Column = styled.div`\n    display: grid;\n`\n\nexport const AboutColumn = styled(Column)`\ngrid-template-columns: repeat(3, 1fr);\ngrid-template-rows: auto;\nwidth: 100%;\nmax-width: 1200px;\nheight: auto;\ntext-align: center;\njustify-content: center;\ncolumn-gap: 20px;\nrow-gap: 20px;\n@media (max-width: 600px){\n  grid-template-columns: repeat(1, 1fr);\n  width: 80%;\n}\n`\n\nexport const ColumnCenter = styled(Column)`\n  width: 100%;\n  align-items: center;\n  margin: auto;\n`\n\nexport const AutoColumn = styled.div<{\n  gap?: 'sm' | 'md' | 'lg' | string\n  justify?: 'stretch' | 'center' | 'start' | 'end' | 'flex-start' | 'flex-end' | 'space-between'\n}>`\n  display: grid;\n  grid-auto-rows: auto;\n  grid-row-gap: ${({ gap }) => (gap === 'sm' && '8px') || (gap === 'md' && '12px') || (gap === 'lg' && '24px') || gap};\n  justify-items: ${({ justify }) => justify && justify};\n\n`\n\nexport const StyledOptions = styled.div`\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  @media (max-width: 450px){\n    justify-content: flex-start;\n    flex-direction: column;\n  }\n`\n\nexport const StyledAutoColumn = styled(Column)`\n  flex-direction: row;\n  margin-bottom: 10px;\n  @media (max-width: 768px){\n    flex-direction: column;\n  }\n`\n\nexport const StyledInputContainer = styled.div`\n  width: 100%;\n`\n\n\nexport default Column;","import React, {useContext} from 'react'\nimport styled, {ThemeContext} from 'styled-components'\nimport { Link} from 'react-router-dom'\nimport { Button, ButtonMenu, ButtonMenuItem, useModal } from '@sparkpointio/sparkswap-uikit'\n\nconst StyledNav = styled.div`\n  display: flex;\n  height: 7vh;\n  width: 100%;\n  margin-top: 15px;\n  border-bottom: 3px solid ${({theme}) => theme.colors.primary};\n`\n\nconst StyledButtonMenu = styled(ButtonMenu)`\n  & {\n    width: 100%;\n    flex: 2;\n    background-color: ${({theme}) => theme.colors.background};\n  }\n`\nconst StyledButton = styled(Button)`\n  flex: 1;\n  background-color: ${({theme}) => theme.colors.background};\n  color: ${({theme}) => theme.colors.textSubtle};\n  height: 7vh;\n`\n\nconst Nav = ({ activeIndex = 0 }: { activeIndex?: number }) => {\n    const theme = useContext(ThemeContext)\n\n  \n    return (\n      <StyledNav>\n      <StyledButtonMenu size=\"md\" activeIndex={activeIndex}  variant='primary'>\n        <ButtonMenuItem fullWidth id=\"swap-nav-link\" style={{height: '7vh', ...theme.isDark && {color: `${theme.isDark && theme.colors.text}`}}} >\n          Projects\n        </ButtonMenuItem>\n        <ButtonMenuItem fullWidth id=\"pool-nav-link\" href=\"https://app.srk.finance/#/pool\" as=\"a\" style={{height: '7vh', ...theme.isDark && {color: `${theme.isDark && theme.colors.text}`} }}  >\n          Staking\n        </ButtonMenuItem>\n      </StyledButtonMenu>\n    </StyledNav>\n  )}\n  \n  export default Nav","import styled from 'styled-components';\nimport { Heading, Flex} from '@sparkpointio/sparkswap-uikit';\nimport Column from 'components/Column'\n\nconst Section = styled.div`\n    margin: 35px;\n    width: 100%;\n`\n\nexport const CardGroup = styled(Column)`\n    grid-template-columns: repeat(3, 1fr);\n    text-align: center;\n    row-gap: 35px;\n    column-gap: 35px;\n    margin-top: 20px;\n    @media (max-width: 1000px) {\n        grid-template-columns: repeat(2, 2fr);\n      }\n    @media (max-width: 500px) {\n        grid-template-columns: repeat(1, 1fr);\n      }\n`\n\nexport const Container = styled(Flex)`\n    flex-direction: column;\n    align-items: center;\n    padding: 20px;\n    max-width: 1200px;\n    width: 100%;\n    margin: 0 auto;\n`;\nexport const SectionTitle = styled(Heading)`\n    font-size: 24px;\n`;\n\nexport default Section;","export const StatusColor = {\n    live: '#32a31b',\n    upcoming: '#7a1ba3',\n    completed: '#8e98a5'\n}","import React, { useContext, useEffect, useState } from 'react';\nimport { Card, Flex, Progress, Text } from '@sparkpointio/sparkswap-uikit';\nimport { useWeb3React } from '@web3-react/core';\nimport { Globe, Send, Twitter } from 'react-feather';\nimport { ThemeContext } from 'styled-components';\nimport UnlockButton from 'components/ConnectWalletButton';\nimport SvgIcon from 'components/SvgIcon';\nimport { StatusColor } from 'pages/styled';\nimport { IProjects, STATE } from 'config/constants/type';\nimport { useLaunchpadContract } from 'hooks/useContracts';\nimport { calculateLaunchpadStats } from 'utils/contractHelpers';\nimport { ReactComponent as MediumIcon } from './icons/MediumIcon.svg';\nimport {\n    CardAction,\n    DataGroup,\n    Details,\n    Options,\n    ProgressGroup,\n    SocmedGroup,\n    StyledButton,\n    StyledCardBody,\n    StyledCardHeader,\n    StyledHeading,\n    StyledImage,\n} from './styled';\nimport Anchor, { StyledLink } from './StyledLink';\n\nconst LaunchCard: React.FC<IProjects> = (project) => {\n    const { category, address, buyingCoin, title, image, wallpaperBg, desc, ownSale, status, socMeds } = project;\n\n    const [stats, setStats] = useState({\n        totalForSaleTokens: '-',\n        remainingForSale: '-',\n        totalSales: '-',\n        expectedSales: '-',\n        percentage: '-',\n    });\n    const { account } = useWeb3React();\n    const contract = useLaunchpadContract(category);\n\n    const theme = useContext(ThemeContext);\n    const srcs = `${process.env.PUBLIC_URL}/images/icons/${image}`;\n    const srcsBg = `${process.env.PUBLIC_URL}/images/icons/${wallpaperBg}`;\n\n    useEffect(() => {\n        calculateLaunchpadStats(contract, project).then((r) => setStats(r));\n    }, [contract, project]);\n\n    return (\n        <Card style={{ padding: '5px' }}>\n            <StyledCardHeader src={srcsBg}>\n                <StyledImage src={srcs} alt=\"token-logo\" />\n                <StyledHeading bold>{title}</StyledHeading>\n            </StyledCardHeader>\n            <StyledCardBody>\n                <Options>\n                    <SocmedGroup>\n                        <Anchor href={socMeds?.[0]}>\n                            <Globe size=\"24px\" />\n                        </Anchor>\n                        <Anchor href={socMeds?.[1]}>\n                            <Twitter size=\"24px\" fill={theme.colors.text} />\n                        </Anchor>\n                        <Anchor href={socMeds?.[2]}>\n                            <Send size=\"24px\" fill={theme.colors.text} />\n                        </Anchor>\n                        <Anchor href={socMeds?.[3]}>\n                            <SvgIcon width={24} Icon={MediumIcon} />\n                        </Anchor>\n                    </SocmedGroup>\n                    {status === STATE.active ? (\n                        <StyledButton style={{ backgroundColor: StatusColor.live }}>LIVE NOW</StyledButton>\n                    ) : status === STATE.upcoming ? (\n                        <StyledButton style={{ backgroundColor: StatusColor.upcoming }}>UPCOMING</StyledButton>\n                    ) : (\n                        <StyledButton style={{ backgroundColor: StatusColor.completed }}>COMPLETED</StyledButton>\n                    )}\n                </Options>\n                <Details>\n                    <div style={{ height: '70px', maxHeight: '80px', minHeight: '70px', marginBottom: '10px' }}>\n                        <Text>{desc}</Text>\n                    </div>\n                    <ProgressGroup>\n                        {status === STATE.completed ? (\n                            <Text as=\"h1\">Sale Completion</Text>\n                        ) : status === STATE.upcoming ? (\n                            <Text as=\"h1\">Progress</Text>\n                        ) : (\n                            <Text as=\"h1\">Progress</Text>\n                        )}\n\n                        <Progress primaryStep={parseInt(stats.percentage)} variant=\"flat\" />\n                        <Flex justifyContent=\"space-between\">\n                            <Text color=\"textSubtle\">{stats.percentage}%</Text>\n                            <Text color=\"textSubtle\">\n                                {stats.totalSales} / {stats.expectedSales} {buyingCoin.symbol}\n                            </Text>\n                        </Flex>\n                    </ProgressGroup>\n                    <DataGroup flexDirection=\"column\">\n                        <Flex justifyContent=\"space-between\">\n                            <Text color=\"textSubtle\">Total Raised</Text>\n                            <Text>\n                                {stats.totalSales} {buyingCoin.symbol}\n                            </Text>\n                        </Flex>\n                        <Flex justifyContent=\"space-between\">\n                            {status === STATE.upcoming ? (\n                                <Text color=\"textSubtle\">Coming Soon For Sale </Text>\n                            ) : (\n                                <Text color=\"textSubtle\">OWN For Sale</Text>\n                            )}\n                            <Text>{ownSale === 0 ? '-' : stats.remainingForSale}</Text>\n                        </Flex>\n                        <Flex justifyContent=\"space-between\">\n                            <Text color=\"textSubtle\">Buying Coin</Text>\n                            <Text>{buyingCoin.symbol}</Text>\n                        </Flex>\n                    </DataGroup>\n                </Details>\n            </StyledCardBody>\n            {status === 'active' && (\n                <CardAction>\n                    {!account ? (\n                        <UnlockButton fullWidth />\n                    ) : (\n                        <StyledLink to={`/projects/${address}`}>\n                            <h1 style={{ color: 'white' }}>Participate</h1>\n                        </StyledLink>\n                    )}\n                </CardAction>\n            )}\n        </Card>\n    );\n};\n\nexport default LaunchCard;\n","import React from 'react';\nimport { CardGroup } from '../styled';\nimport Card from './LaunchCard';\nimport { IProjects } from '../../../config/constants/type';\nimport {useLaunchpadContract} from \"../../../hooks/useContracts\";\n\ninterface Props {\n    ProjectList?: Array<IProjects>\n}\n\nconst CardContainer: React.FC<Props> = (props) => {\n    const { ProjectList } = props;\n    const pages = ProjectList?.map((item) => {\n        return (\n            <Card\n            key={item.address}\n                {... item}\n            />\n        );\n    })\n    return (\n        <CardGroup>\n            {pages}\n        </CardGroup>\n    );\n};\n\nexport default CardContainer;\n","import React, { useMemo } from 'react';\nimport { useProject } from 'state/hooks';\nimport Page from 'components/layout/Page';\nimport CardNav from 'components/CardNav';\nimport { STATE } from 'config/constants/type';\nimport Section, { Container, SectionTitle } from './styled';\nimport CardContainer from './components/CardContainer';\n\n\nconst LaunchpadHome: React.FC = () => {\n    const { data: ProjectsLS } = useProject();\n    \n    const ActiveProjects = useMemo(() => ProjectsLS.filter((project) => project.status === STATE.active), [ProjectsLS]);\n    const UpcomingProjects = useMemo(() => ProjectsLS.filter((project) => project.status === STATE.upcoming), [ProjectsLS]);\n    const CompletedProjects = useMemo(\n        () => ProjectsLS.filter((project) => project.status === STATE.completed),\n        [ProjectsLS],\n    );\n\n    return (\n        <Page>\n            <Container>\n                <CardNav />\n                <Section>\n                    <SectionTitle>Ongoing Launches</SectionTitle>\n                    <CardContainer ProjectList={ActiveProjects} />\n                </Section>\n                {UpcomingProjects.length !== 0 && (\n                    <Section>\n                        <SectionTitle>Upcoming Launches</SectionTitle>\n                        <CardContainer ProjectList={UpcomingProjects} />\n                    </Section>\n                )}\n                {CompletedProjects.length !== 0 && (\n                    <Section>\n                        <SectionTitle>Completed Launches</SectionTitle>\n                        <CardContainer ProjectList={CompletedProjects} />\n                    </Section>\n                )}\n            </Container>\n        </Page>\n    );\n};\n\nexport default LaunchpadHome;\n"],"sourceRoot":""}