{"version":3,"sources":["components/SvgIcon/index.tsx","pages/styled.ts","pages/Launchpad/components/styled.ts","constants/contracts.js","utils/addressHelpers.ts","utils/contractHelpers.ts","constants/abis/erc20.ts","state/hooks.ts","config/constants/type.ts","hooks/useContracts.ts","hooks/useActiveWeb3React.ts","components/ConnectWalletButton/index.tsx","pages/Launchpad/components/icons/MediumIcon.svg","pages/Launchpad/components/StyledLink.tsx","utils/getRpcUrl.ts","utils/providers.ts"],"names":["SvgContainer","styled","div","props","fill","theme","colors","text","height","width","SvgIcon","Icon","StatusColor","active","upcoming","completed","StyledCardHeader","CardHeader","src","StyledHeading","Heading","StyledCardBody","CardBody","CardAction","Flex","Options","SocmedGroup","Details","ProgressGroup","DataGroup","StyledButton","Button","status","primary","TimerButton","StyledImage","img","size","SmallstyledImage","ownlyLaunchPad$1","ownlyLaunchPad$2","outRaceIDO$1","outRaceIDO$2","flashLoansIDO$1","flashLoansIDO$2","getAddress","address","process","ChainId","MAINNET","getContract","Interface","ERC20_ABI","ERC20_BYTES32_ABI","abi","signer","signerOrProvider","provider","connection","url","simpleRpcProvider","ethers","Contract","getLaunchpadContract","category","launchpadABI","addresses","getLaunchPadAddress","getTokenContract","contractAddress","getLaunchPadStats","contract","project","a","TokenAmount","buyingCoin","totalRaise","totalSales","totalRewardTokens","totalRewards","tokenRate","totalForSaleTokens","sellingCoin","expectedSales","multiply","soldAmount","totalSoldTokens","remainingForSaleTokens","subtract","totalParticipant","totalParticipants","percentage","divide","BigInt","calculateLaunchpadStats","contract1","contract2","c1Stats","category2","c2Stats","add","toString","toExact","remainingForSale","toSignificant","getEndedStatus","isFinished","call","checkEnded","round1","round2","getAccountDetailsLaunchPad","library","account","Error","getWhitelist","details","getBalance","toBigInt","_amount","_maxPayableAmount","_rewardedAmount","_redeemed","_whitelist","dets","balance","amount","maxPayableAmount","rewardedAmount","redeemed","whitelist","maxExpendable","expandValue","toFixed","getRedeem","redeemable","useAppSelector","useSelector","useProject","state","projects","useFindProject","selectedProject","useSetProject","dispatch","useDispatch","setProject","useFindProjectByAddress","data","filter","p","useAccountWhiteList","acc","accounts","find","prj","res","whiteList","ls","toLowerCase","useGetPoolsByAddress","pools","pl","projectAddress","STATE","useLaunchpadContract","useActiveWeb3React","useMemo","getSigner","useTokenContract","useWeb3React","chainId","web3React","refEth","useRef","useState","setprovider","useEffect","current","UnlockButton","activate","deactivate","onPresentConnectModal","useWalletModal","connectorId","walletconnect","bsc","injected","onClick","_path","_excluded","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgMediumIcon","_ref","svgRef","title","titleId","xmlns","viewBox","ref","id","d","ForwardRef","StyledLink","Link","Anchor","href","children","style","margin","nodes","RPC_URL","sample","getRpcUrl","providers","JsonRpcProvider"],"mappings":"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","file":"static/js/2.57156cf0.chunk.js","sourcesContent":["import React from \"react\"\r\nimport styled from 'styled-components';\r\n// import { SvgContainer } from \"./svgicon-styles\"\r\n\r\ninterface Props {\r\n    Icon: React.FunctionComponent<React.SVGProps<SVGSVGElement>>\r\n    width?: number\r\n    height?: number\r\n    fill?: string\r\n  }\r\n\r\n  export const SvgContainer = styled.div<{\r\n    height?: number\r\n    width?: number\r\n    fill?: string\r\n  }>`\r\n    height: \"auto\";\r\n    width: \"auto\";\r\n    display: inline-flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n  \r\n    & svg {\r\n      fill: ${props => (props.fill? props.fill: props.theme.colors.text)};\r\n      height: ${props => (props.height ? `${props.height}px` : \"100%\")};\r\n      width: ${props => (props.width ? `${props.width}px` : \"100%\")};\r\n    }\r\n  `\r\n\r\n\r\n  const SvgIcon: React.FC<Props> = props => {\r\n    const { Icon } = props\r\n    return (\r\n      <SvgContainer {...props}>\r\n        <Icon />\r\n      </SvgContainer>\r\n    )\r\n  }\r\n  \r\n  export default SvgIcon","export const StatusColor = {\r\n    active: '#32a31b',\r\n    upcoming: '#7a1ba3',\r\n    completed: '#8e98a5'\r\n}","import styled from 'styled-components';\r\nimport { CardHeader, CardBody, Flex, Button, Heading } from '@sparkpointio/sparkswap-uikit'\r\nimport { StatusColor } from 'pages/styled';\r\n\r\nexport const StyledCardHeader = styled(CardHeader)<{ src?: string }>`\r\n    display: flex;\r\n    padding: 20px;\r\n    align-items: center;\r\n    position: relative;\r\n    ${({ src }) => src && `\r\n        &:before {\r\n            content: ' ';\r\n            display: block;\r\n            position: absolute;\r\n            left: 0;\r\n            top: 0;\r\n            opacity: 0.3;\r\n            width: 100%;\r\n            height: 100%;\r\n            z-index: 1;\r\n            background-image: url(${src});\r\n            background-repeat: no-repeat;\r\n            // background-attachment: fixed;\r\n            background-position: center;\r\n            background-size: cover;\r\n        }\r\n    `}  \r\n`;\r\n\r\nexport const StyledHeading = styled(Heading)`\r\n    z-index: 2;\r\n    font-size: 24px;\r\n`\r\n\r\nexport const StyledCardBody = styled(CardBody)`\r\n    flex-direction: column;\r\n    text-align: left;\r\n    padding: 15px;\r\n`;\r\n\r\nexport const CardAction = styled(Flex)`\r\n    padding: 25px 15px;\r\n    & > * {\r\n        margin-bottom: 5px;\r\n    }\r\n`;\r\n\r\nexport const Options = styled(Flex)`\r\n    padding: 15px 0px;\r\n    justify-content: space-between;\r\n    width: 100%;\r\n    align-items: center;\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nexport const SocmedGroup = styled(Flex)`\r\n    flex: 0.5;\r\n    justify-content: space-evenly;\r\n`;\r\n\r\nexport const Details = styled(Flex)`\r\n    flex-direction: column;\r\n    min-height: 300px;\r\n    justify-content: space-between;\r\n`;\r\nexport const ProgressGroup = styled(Flex)`\r\n    flex-direction: column;\r\n    margin: 15px 0px;\r\n`;\r\n\r\nexport const DataGroup = styled(Flex)`\r\n    & > * {\r\n        margin: 5px 0px;\r\n    }\r\n`;\r\n\r\nexport const StyledButton = styled(Button)<{status?: string}>`\r\n    cursor: context-menu;\r\n    height: 35px;\r\n    border-radius: 5px;\r\n    background-color: ${({status, theme}) => status? StatusColor[status] : theme.colors.primary };\r\n`;\r\n\r\nexport const TimerButton = styled(Button)`\r\n    cursor: context-menu;\r\n    height: 35px;\r\n    border-radius: 5px;\r\n    background-color: green;\r\n    display: inline-flex;\r\n    width: 100%;\r\n    height: 7vh;\r\n    text-align:center;\r\n    overflow: hidden;\r\n    @media (max-width: 382px) {\r\n        text-align:center;\r\n        font-size: 94%;\r\n        height: 6vh;\r\n      }\r\n`;\r\n\r\nexport const StyledImage = styled.img<{size?: string}>`\r\n    border-radius: 50%;\r\n    height: ${({ size }) => !size? '60px': size};\r\n    width: ${({ size }) => !size? '60px' : size};\r\n    margin-right: 15px;\r\n    z-index: 2;\r\n`;\r\n\r\nexport const SmallstyledImage = styled.img<{size?: string}>`\r\n    border-radius: 50%;\r\n    height: ${({ size }) => !size? '30px': size};\r\n    width: ${({ size }) => !size? '30px' : size};\r\n    margin-right: 15px;\r\n    z-index: 2;\r\n`;\r\n","/*\r\n    ** Follow the naming conventions to identy the round of per contract\r\n    using Ownly contract as dummy for the IDOs that doesn't have contract yet ( Upcoming )\r\n    ROUND 1: 56: 0x75f5696c02978fd345Ad81AE89F81402aFc7342F\r\n    ROUND 2: 56: 0xf5dC1243Fd734A4A4583a651c3100A2347e1A2d5\r\n\r\n    Round-one OWNLY token sale: 0xf5dC1243Fd734A4A4583a651c3100A2347e1A2d5\r\n\r\n    Other contracts:\r\n     testLaunchPad: {\r\n        : 0x66bC605D68b471A3Fd8724137439D5857c3B1Caa -> Ended\r\n        : 0x66bC605D68b471A3Fd8724137439D5857c3B1Caa -> Ended\r\n        : 0x43f9cf50e547fd377F6199226DaC567D60FBEac9 -> Ended\r\n        R1: 0x1c1f9aC9E9A7df6713daCF4022A286Bc4C45Bf52 \r\n    },\r\n*/\r\n\r\nexport default {\r\n    ownlyLaunchPad$1: {\r\n        56: '0xf5dC1243Fd734A4A4583a651c3100A2347e1A2d5', \r\n        97: '0xe99646c31060991166c37220ce8ab5453e573dae',\r\n    },\r\n    ownlyLaunchPad$2: {\r\n        56: '0x75f5696c02978fd345Ad81AE89F81402aFc7342F',\r\n        97: '0x6171ef8577601bfebc36db044f53a5d874536d0e',\r\n    },\r\n    outRaceIDO$1: {\r\n        56: '0x75f5696c02978fd345Ad81AE89F81402aFc7342F',\r\n        97: '0xd4eb8D841BEFF2B7C30fbFF904D0C859Cc93d997',\r\n    },\r\n    outRaceIDO$2: {\r\n        56: '',\r\n        97: '0x827c12B440ddDcE11a9947768A7C081c0A724cE4'\r\n    },\r\n    flashLoansIDO$1: {\r\n        56: '0xDC9FA2D376F7abC807d8aDB0dD700e23a89549D0',\r\n        97: '0x1c1f9aC9E9A7df6713daCF4022A286Bc4C45Bf52'\r\n    },\r\n    flashLoansIDO$2: {\r\n        56: '0x3aacb04Df4B06264273e0B3f5a674e1ee761F47B',\r\n        97: '0xfa5D938CE588dC3C295372246080747009C85DDB',\r\n    },\r\n    /* Test Contracts */\r\n\r\n    // testLaunchPad$1: {\r\n    //     56: '',\r\n    //     97: '0x66bC605D68b471A3Fd8724137439D5857c3B1Caa',\r\n    // },\r\n    // testLaunchPad$2: {\r\n    //     56: '',\r\n    //     97: '0xBEc964910ee4Bfc7Cf98E4010108Aeef0fc5D4B5'\r\n    // }\r\n};\r\n","import { ChainId } from '@sparkpointio/sparkswap-sdk'\r\nimport addresses from '../constants/contracts'\r\nimport { Address } from '../constants/types'\r\n\r\nexport const getAddress = (address: Address): string => {\r\n    const chainId = process.env.REACT_APP_CHAIN_ID\r\n    return address[chainId] ? address[chainId] : address[ChainId.MAINNET]\r\n}\r\n\r\nexport const ownlyLaunchPad = () => {\r\n    return getAddress(addresses.ownlyLaunchPad$1)\r\n}\r\n\r\nexport const getLaunchPadAddress = (category) => {\r\n    return getAddress(addresses[category])\r\n}\r\n","import { ethers } from 'ethers';\r\nimport { simpleRpcProvider } from 'utils/providers';\r\nimport { TokenAmount } from '@sparkpointio/sparkswap-sdk';\r\n\r\n// Addresses\r\nimport { getLaunchPadAddress, ownlyLaunchPad } from 'utils/addressHelpers';\r\n\r\nimport launchpadABI from '../constants/abis/launchpad.json';\r\nimport { BNB, OWN, TORE } from '../config';\r\nimport { expandValue } from './index';\r\nimport { ERC20_ABI } from '../constants/abis/erc20';\r\n\r\nconst getContract = (abi: any, address: string, signer) => {\r\n    const signerOrProvider = signer.provider.connection.url === 'metamask' ? signer : simpleRpcProvider;\r\n\r\n    return new ethers.Contract(address, abi, signerOrProvider);\r\n};\r\n\r\nexport const getOwnlyLaunchpadContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n    return getContract(launchpadABI, ownlyLaunchPad(), signer);\r\n};\r\n\r\nexport const getLaunchpadContract = (signer?: ethers.Signer | ethers.providers.Provider, category?: string) => {\r\n    return getContract(launchpadABI, getLaunchPadAddress(category), signer);\r\n};\r\n\r\nexport const getTokenContract = (contractAddress, signer?: ethers.Signer | ethers.providers.Provider) => {\r\n    return getContract(ERC20_ABI, contractAddress, signer);\r\n};\r\n\r\nconst getLaunchPadStats = async (contract, project) => {\r\n    const totalSales = new TokenAmount(project.buyingCoin, await contract.totalRaise());\r\n    const totalRewards = await contract.totalRewardTokens();\r\n    const tokenRate = new TokenAmount(project.buyingCoin, await contract.tokenRate());\r\n    const totalForSaleTokens = new TokenAmount(project.sellingCoin, totalRewards);\r\n    const expectedSales = tokenRate.multiply(totalForSaleTokens);\r\n    const totalSoldTokens = new TokenAmount(project.sellingCoin, await contract.soldAmount());\r\n    const remainingForSaleTokens = totalForSaleTokens.subtract(totalSoldTokens);\r\n    const totalParticipants = await contract.totalParticipant();\r\n    const percentage = totalSales.divide(expectedSales).multiply(BigInt(100));\r\n\r\n    return {\r\n        totalParticipants,\r\n        totalForSaleTokens,\r\n        totalSoldTokens,\r\n        remainingForSaleTokens,\r\n        totalSales,\r\n        expectedSales,\r\n        percentage,\r\n        tokenRate,\r\n    };\r\n};\r\n\r\nexport const calculateLaunchpadStats = async (contract1, project, contract2 = null) => {\r\n    const c1Stats = await getLaunchPadStats(contract1, project);\r\n\r\n    let totalSales = c1Stats.totalSales;\r\n    let totalParticipants = c1Stats.totalParticipants;\r\n    const expectedSales = c1Stats.expectedSales;\r\n    let percentage = c1Stats.percentage;\r\n    let totalSoldTokens = c1Stats.totalSoldTokens;\r\n\r\n    if (project.category2 && contract2) {\r\n        const c2Stats = await getLaunchPadStats(contract2, project);\r\n\r\n        totalSales = totalSales.add(c2Stats.totalSales);\r\n        totalParticipants = totalParticipants.add(c2Stats.totalParticipants);\r\n        percentage = totalSales.divide(expectedSales).multiply(BigInt(100));\r\n        totalSoldTokens = totalSoldTokens.add(c2Stats.totalSoldTokens);\r\n    }\r\n\r\n    return {\r\n        totalParticipants: totalParticipants.toString(),\r\n        totalForSaleTokens: c1Stats.totalForSaleTokens.toExact(),\r\n        totalSoldTokens: totalSoldTokens.toExact(),\r\n        remainingForSale: c1Stats.remainingForSaleTokens.toExact(),\r\n        totalSales: totalSales.toExact(),\r\n        expectedSales: expectedSales.toSignificant(18),\r\n        percentage: percentage.toSignificant(18),\r\n        tokenRate: c1Stats.tokenRate.toExact(),\r\n    };\r\n};\r\n\r\nexport const getEndedStatus = async (contract) => {\r\n    return contract?.isFinished.call();\r\n};\r\n\r\nexport const checkEnded = async (contract1, contract2) => {\r\n    const round1 = await getEndedStatus(contract1);\r\n    let round2 = false;\r\n    if (contract1.address !== contract2.address) {\r\n        round2 = await getEndedStatus(contract2);\r\n    }\r\n    return {\r\n        'round1': round1,\r\n        'round2': round2,\r\n    };\r\n};\r\n\r\nexport const getAccountDetailsLaunchPad = async (contract, project, library, account) => {\r\n    if (!account) {\r\n        throw Error;\r\n    }\r\n\r\n    const { buyingCoin, sellingCoin } = project;\r\n    const details = await contract.getWhitelist(account);\r\n    const tokenRate = new TokenAmount(buyingCoin, await contract.tokenRate());\r\n    const dets = {\r\n        balance: new TokenAmount(buyingCoin, (await library.getBalance(account)).toBigInt()),\r\n        amount: new TokenAmount(sellingCoin, details._amount),\r\n        maxPayableAmount: new TokenAmount(sellingCoin, details._maxPayableAmount),\r\n        rewardedAmount: new TokenAmount(sellingCoin, details._rewardedAmount),\r\n        redeemed: details._redeemed,\r\n        whitelist: details._whitelist,\r\n    };\r\n    const maxExpendable = new TokenAmount(buyingCoin, expandValue(\r\n        (dets.maxPayableAmount).multiply(tokenRate).toFixed(18), buyingCoin),\r\n    );\r\n    return {\r\n        ...dets,\r\n        'maxExpendable': maxExpendable,\r\n    };\r\n};\r\n\r\nexport const getRedeem = async (contract, account) => {\r\n    if (!account) {\r\n        throw Error;\r\n    }\r\n\r\n    const details = await contract.getWhitelist(account);\r\n\r\n    return {\r\n        redeemable: (!details._redeemed && details._whitelist),\r\n        amount: details._rewardedAmount,\r\n    };\r\n};\r\n","import { Interface } from '@ethersproject/abi'\r\nimport ERC20_ABI from './erc20.json'\r\nimport ERC20_BYTES32_ABI from './erc20_bytes32.json'\r\n\r\nconst ERC20_INTERFACE = new Interface(ERC20_ABI)\r\n\r\nconst ERC20_BYTES32_INTERFACE = new Interface(ERC20_BYTES32_ABI)\r\n\r\nexport default ERC20_INTERFACE\r\nexport { ERC20_ABI, ERC20_BYTES32_INTERFACE, ERC20_BYTES32_ABI }\r\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\r\nimport { setProject } from './actions';\r\nimport { AppDispatch, AppState } from './index';\r\n\r\nexport const useAppSelector: TypedUseSelectorHook<AppState> = useSelector;\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\n\r\nexport const useProject = () => {\r\n    const projects = useAppSelector((state) => state.projects);\r\n    return projects;\r\n};\r\n\r\nexport const useFindProject = () => {\r\n    const data = useAppSelector((state) => state.projects.selectedProject);\r\n    return data;\r\n};\r\n\r\nexport const useSetProject = (address?: string | null) => {\r\n    const dispatch = useAppDispatch();\r\n    if (!address) {\r\n        return '';\r\n    }\r\n    dispatch(setProject(address));\r\n    return address;\r\n};\r\n\r\nexport const useFindProjectByAddress = (address?: string | null) => {\r\n    const project = useAppSelector((state) => state.projects.data.filter((p) => p.address === address));\r\n    return project[0];\r\n};\r\n\r\nexport const useAccount = () => {\r\n    const accounts = useAppSelector((state) => state.accounts.data);\r\n    return accounts;\r\n};\r\n\r\nexport const useAccountWhiteList = (acc: string | null, project: string | null) => {\r\n    const account = useAppSelector((state) => {\r\n\r\n        const data = state.accounts.data.find((prj) => {\r\n            return prj.project === project;\r\n        });\r\n        if (!data) {\r\n            throw new Error('Error');\r\n        }\r\n        const res = data.whiteList.find((ls) => ls.address.toLowerCase() === acc?.toLowerCase());\r\n        if (!res) {\r\n            return false;\r\n        }\r\n        return res;\r\n    });\r\n    \r\n    return account;\r\n};\r\n\r\n\r\nexport const usePools = () => {\r\n    const pools = useAppSelector((state) => state.pools);\r\n    return pools;\r\n};\r\n\r\nexport const useGetPoolsByAddress = (address?: string | null) => {\r\n    const pool = useAppSelector((state) => {\r\n        return state.pools.data.filter((pl) => pl.projectAddress === address);\r\n    });\r\n    return pool[0];\r\n};\r\n","import {Token} from \"@sparkpointio/sparkswap-sdk\";\r\n\r\n\r\nexport type Status = 'active' | 'upcoming' | 'completed' | null;\r\n\r\nexport const STATE:{active: Status; upcoming: Status; completed: Status} = {\r\n    active: 'active',\r\n    upcoming: 'upcoming',\r\n    completed: 'completed'\r\n}\r\n\r\nexport interface ITokens {\r\n    name: string;\r\n    symbol: string;\r\n    address: string;\r\n    chainId: number;\r\n    decimals: number;\r\n    logoURI: string;\r\n}\r\n\r\nexport interface IProjects {\r\n    category2?: string;\r\n    category?: string;\r\n    address?: string;\r\n    buyingCoin?: Token;\r\n    sellingCoin?:  Token;\r\n    title: string;\r\n    token?: Token ;\r\n    symbol: string;\r\n    image: string;\r\n    wallpaperBg?: string;\r\n    desc: string;\r\n    longDesc?: string;\r\n    longDesc2?: string | null\r\n    longDesc3?: string | null\r\n    ownSale: number;\r\n    status?: Status;\r\n    startDate?: Date;\r\n    endDate?: Date;\r\n    claimable?: boolean;\r\n    distributionType?: string;\r\n    socMeds?: string[]\r\n    hasDateEnded?: boolean\r\n}\r\n\r\nexport interface IUserAccount {\r\n    address: string;\r\n    allocation: string;\r\n    maxSwap: string;\r\n}\r\n\r\nexport interface IPoolInformation {\r\n    open: string;\r\n    close: string;\r\n    cap: number;\r\n    totalUserParticipated: number;\r\n    totalFundsSwapped?: number;\r\n    projectAddress: string;\r\n}\r\n\r\ninterface ListType {\r\n    address: string;\r\n}\r\n\r\nexport interface IAccountType {\r\n    project: string;\r\n    whiteList: ListType[];\r\n}\r\n\r\nexport interface ITransactionDetails {\r\n    hash: string\r\n    approval?: { tokenAddress: string; spender: string };\r\n    summary?: string;\r\n    lastCheckedBlockNumber?: number;\r\n    addedTime: number\r\n    confirmedTime?: number\r\n    from: string;\r\n}\r\n\r\nexport type PageMeta = {\r\n    title: string\r\n    description?: string\r\n    image?: string\r\n  }\r\n\r\n","import { useMemo } from 'react';\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React';\r\nimport { getLaunchpadContract, getOwnlyLaunchpadContract, getTokenContract } from 'utils/contractHelpers';\r\n\r\n// Imports below migrated from Exchange useContract.ts\r\n\r\n\r\n// export const useOwnlyLaunchpad = () => {\r\n//     const { library } = useActiveWeb3React()\r\n//     return useMemo(() => getOwnlyLaunchpadContract(library.getSigner()), [library])\r\n// }\r\n\r\nexport const useLaunchpadContract = (category) => {\r\n    const { library } = useActiveWeb3React()\r\n    return useMemo(() => getLaunchpadContract(library.getSigner(), category), [library, category])\r\n}\r\n\r\nexport const useTokenContract = (address) => {\r\n    const { library } = useActiveWeb3React()\r\n    return useMemo(() => getTokenContract(address, library.getSigner()), [address, library])\r\n}\r\n","import { useEffect, useState, useRef } from 'react'\r\nimport { ChainId } from '@sparkpointio/sparkswap-sdk'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Web3Provider } from '@ethersproject/providers'\r\nimport { simpleRpcProvider } from 'utils/providers'\r\n// eslint-disable-next-line import/no-unresolved\r\nimport { Web3ReactContextInterface } from '@web3-react/core/dist/types'\r\n\r\n/**\r\n * Provides a web3 provider with or without user's signer\r\n * Recreate web3 instance only if the provider change\r\n */\r\nconst useActiveWeb3React = (): Web3ReactContextInterface<Web3Provider> => {\r\n  const { library, chainId, ...web3React } = useWeb3React()\r\n  const refEth = useRef(library)\r\n  const [provider, setprovider] = useState(library || simpleRpcProvider)\r\n\r\n  useEffect(() => {\r\n    if (library !== refEth.current) {\r\n      setprovider(library || simpleRpcProvider)\r\n      refEth.current = library\r\n    }\r\n  }, [library])\r\n\r\n  return { library: provider, chainId: chainId ?? ChainId.MAINNET, ...web3React }\r\n}\r\n\r\nexport default useActiveWeb3React\r\n","import React from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Button, ButtonProps, ConnectorId, useWalletModal } from '@sparkpointio/sparkswap-uikit'\r\nimport { injected, walletconnect, bsc } from 'connectors'\r\n\r\nconst UnlockButton: React.FC<ButtonProps> = props => {\r\n    const { account, activate, deactivate } = useWeb3React()\r\n  \r\n    const handleLogin = (connectorId: ConnectorId) => {\r\n      if (connectorId === 'walletconnect') {\r\n        return activate(walletconnect)\r\n      }\r\n      if (connectorId === 'bsc') {\r\n        return activate(bsc)\r\n      }\r\n      return activate(injected)\r\n    }\r\n  \r\n    const { onPresentConnectModal } = useWalletModal(handleLogin, deactivate, account as string)\r\n  \r\n    return (\r\n      <Button onClick={onPresentConnectModal} {...props} >\r\n        Unlock Wallet\r\n      </Button>\r\n    )\r\n  }\r\n  \r\n  export default UnlockButton","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgMediumIcon(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    fill: \"#000000\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 50 50\",\n    width: \"50px\",\n    height: \"50px\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M 3 6 L 7 11.091797 L 7 35.285156 L 1 43 L 15 43 L 9 35.285156 L 9 13.75 L 22 43 L 21.998047 43.013672 L 34 13.544922 L 34 39 L 30 43 L 47 43 L 43 39 L 42.972656 10.503906 L 46.863281 6.0136719 L 34.845703 6.0136719 L 25.605469 28.744141 L 15.496094 6 L 3 6 z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgMediumIcon);\nexport default __webpack_public_path__ + \"static/media/MediumIcon.7b14fab6.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Anchor = ({href, children}: {href?: string; children: React.ReactNode}) => {\r\n    return (\r\n        <div style={{margin: '5px'}}>\r\n            <a href={`https://www.${href}`}>{children}</a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const StyledLink = styled(Link)`\r\n    background-color: #32a31b;\r\n    width: 100%;\r\n    padding: 15px 0px;\r\n`\r\n\r\nexport default Anchor;","import sample from 'lodash/sample'\r\n\r\n// Array of available nodes to connect to\r\nexport const nodes = [process.env.REACT_APP_NETWORK_URL]\r\n\r\nconst getNodeUrl = () => {\r\n  return sample(nodes)\r\n}\r\n\r\nexport default getNodeUrl\r\n","import { ethers } from 'ethers'\r\nimport getRpcUrl from 'utils/getRpcUrl'\r\n\r\nconst RPC_URL = getRpcUrl()\r\n\r\nexport const simpleRpcProvider = new ethers.providers.JsonRpcProvider(RPC_URL)\r\n\r\nexport default null\r\n"],"sourceRoot":""}