{"version":3,"sources":["components/SvgIcon/index.tsx","pages/Launchpad/components/styled.ts","constants/contracts.js","utils/addressHelpers.ts","utils/contractHelpers.ts","state/hooks.ts","hooks/useContracts.ts","hooks/useActiveWeb3React.ts","config/constants/type.ts","utils/index.ts","components/ConnectWalletButton/index.tsx","pages/Launchpad/components/icons/MediumIcon.svg","pages/Launchpad/components/StyledLink.tsx","utils/getRpcUrl.ts","utils/providers.ts"],"names":["SvgContainer","styled","div","props","fill","theme","colors","text","height","width","SvgIcon","Icon","StyledCardHeader","CardHeader","src","StyledHeading","Heading","StyledCardBody","CardBody","CardAction","Flex","Options","SocmedGroup","Details","ProgressGroup","DataGroup","StyledButton","Button","TimerButton","StyledImage","img","size","SmallstyledImage","ownlyLaunchPad","56","97","getAddress","address","process","ChainId","MAINNET","getLaunchPadAddress","category","addresses","getContract","abi","signer","signerOrProvider","provider","connection","url","simpleRpcProvider","ethers","Contract","getOwnlyLaunchpadContract","launchpadABI","getLaunchpadContract","calculateLaunchpadStats","contract","project","a","TokenAmount","sellingCoin","totalRewardTokens","totalForSaleTokens","soldAmount","totalSoldTokens","remainingForSaleTokens","subtract","totalParticipant","totalParticipants","buyingCoin","tokenRate","totalRaise","totalSales","expectedSales","multiply","percentage","divide","BigInt","toString","toExact","remainingForSale","toSignificant","getAccountDetailsLaunchPad","library","account","Error","getWhitelist","details","BNB","getBalance","toBigInt","OWN","_amount","_maxPayableAmount","_rewardedAmount","_redeemed","_whitelist","dets","balance","amount","maxPayableAmount","rewardedAmount","redeemed","whitelist","maxExpendable","expandValue","toFixed","useAppSelector","useSelector","useProject","state","projects","useFindProject","selectedProject","useSetProject","dispatch","useDispatch","setProject","useFindProjectByAddress","data","filter","p","useAccountWhiteList","acc","accounts","map","acs","whiteList","ls","toLowerCase","useGetPoolsByAddress","pools","pl","projectAddress","useOwnlyLaunchpad","useActiveWeb3React","useMemo","getSigner","useLaunchpadContract","useWeb3React","chainId","web3React","refEth","useRef","useState","setprovider","useEffect","current","STATE","active","upcoming","completed","escapeRegExp","string","replace","value","token","decimals","parseUnits","UnlockButton","activate","deactivate","onPresentConnectModal","useWalletModal","connectorId","walletconnect","bsc","injected","onClick","_path","_excluded","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgMediumIcon","_ref","svgRef","title","titleId","xmlns","viewBox","ref","id","d","ForwardRef","StyledLink","Link","Anchor","href","children","style","margin","nodes","RPC_URL","sample","getRpcUrl","providers","JsonRpcProvider"],"mappings":"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","file":"static/js/2.430df5f5.chunk.js","sourcesContent":["import React from \"react\"\nimport styled from 'styled-components';\n// import { SvgContainer } from \"./svgicon-styles\"\n\ninterface Props {\n    Icon: React.FunctionComponent<React.SVGProps<SVGSVGElement>>\n    width?: number\n    height?: number\n    fill?: string\n  }\n\n  export const SvgContainer = styled.div<{\n    height?: number\n    width?: number\n    fill?: string\n  }>`\n    height: \"auto\";\n    width: \"auto\";\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n  \n    & svg {\n      fill: ${props => (props.fill? props.fill: props.theme.colors.text)};\n      height: ${props => (props.height ? `${props.height}px` : \"100%\")};\n      width: ${props => (props.width ? `${props.width}px` : \"100%\")};\n    }\n  `\n\n\n  const SvgIcon: React.FC<Props> = props => {\n    const { Icon } = props\n    return (\n      <SvgContainer {...props}>\n        <Icon />\n      </SvgContainer>\n    )\n  }\n  \n  export default SvgIcon","import styled from 'styled-components';\nimport { CardHeader, CardBody, Flex, Button, Heading } from '@sparkpointio/sparkswap-uikit'\n\nexport const StyledCardHeader = styled(CardHeader)<{ src?: string }>`\n    display: flex;\n    padding: 20px;\n    align-items: center;\n    position: relative;\n    ${({ src }) => src && `\n        &:before {\n            content: ' ';\n            display: block;\n            position: absolute;\n            left: 0;\n            top: 0;\n            opacity: 0.3;\n            width: 100%;\n            height: 100%;\n            z-index: 1;\n            background-image: url(${src});\n            background-repeat: no-repeat;\n            // background-attachment: fixed;\n            background-position: center;\n            background-size: cover;\n        }\n    `}  \n`;\n\nexport const StyledHeading = styled(Heading)`\n    z-index: 2;\n    font-size: 24px;\n`\n\nexport const StyledCardBody = styled(CardBody)`\n    flex-direction: column;\n    text-align: left;\n    padding: 15px;\n`;\n\nexport const CardAction = styled(Flex)`\n    padding: 25px 15px;\n`;\n\nexport const Options = styled(Flex)`\n    padding: 15px 0px;\n    justify-content: space-between;\n    width: 100%;\n    align-items: center;\n    margin-bottom: 10px;\n`;\n\nexport const SocmedGroup = styled(Flex)`\n    flex: 0.5;\n    justify-content: space-evenly;\n`;\n\nexport const Details = styled(Flex)`\n    flex-direction: column;\n    min-height: 300px;\n    justify-content: space-between;\n`;\nexport const ProgressGroup = styled(Flex)`\n    flex-direction: column;\n    margin: 15px 0px;\n`;\n\nexport const DataGroup = styled(Flex)`\n    & > * {\n        margin: 5px 0px;\n    }\n`;\n\nexport const StyledButton = styled(Button)`\n    cursor: context-menu;\n    height: 35px;\n    border-radius: 5px;\n`;\n\nexport const TimerButton = styled(Button)`\n    cursor: context-menu;\n    height: 35px;\n    border-radius: 5px;\n    background-color: green;\n    display: inline-flex;\n    width: 100%;\n    height: 7vh;\n    text-align:center;\n    overflow: hidden;\n    @media (max-width: 382px) {\n        text-align:center;\n        font-size: 94%;\n        height: 6vh;\n      }\n`;\n\nexport const StyledImage = styled.img<{size?: string}>`\n    border-radius: 50%;\n    height: ${({ size }) => !size? '60px': size};\n    width: ${({ size }) => !size? '60px' : size};\n    margin-right: 15px;\n    z-index: 2;\n`;\n\nexport const SmallstyledImage = styled.img<{size?: string}>`\n    border-radius: 50%;\n    height: ${({ size }) => !size? '30px': size};\n    width: ${({ size }) => !size? '30px' : size};\n    margin-right: 15px;\n    z-index: 2;\n`;\n","export default {\n    ownlyLaunchPad: {\n        56: '0xf5dC1243Fd734A4A4583a651c3100A2347e1A2d5',\n        97: '0x2d7b9f7C66269AB72DD886495f2D42C79EB7752b',\n    }\n}\n","import { ChainId } from '@sparkpointio/sparkswap-sdk'\nimport addresses from '../constants/contracts'\nimport { Address } from '../constants/types'\n\nexport const getAddress = (address: Address): string => {\n    const chainId = process.env.REACT_APP_CHAIN_ID\n    return address[chainId] ? address[chainId] : address[ChainId.MAINNET]\n}\n\nexport const ownlyLaunchPad = () => {\n    return getAddress(addresses.ownlyLaunchPad)\n}\n\nexport const getLaunchPadAddress = (category) => {\n    return getAddress(addresses[category])\n}\n","import {ethers} from 'ethers'\nimport {simpleRpcProvider} from 'utils/providers'\nimport {TokenAmount} from \"@sparkpointio/sparkswap-sdk\";\n\n// Addresses\nimport {getLaunchPadAddress, ownlyLaunchPad} from 'utils/addressHelpers'\n\nimport launchpadABI from '../constants/abis/launchpad.json'\nimport {BNB, OWN} from \"../config\";\nimport {expandValue} from \"./index\";\n\nconst getContract = (abi: any, address: string, signer) => {\n    const signerOrProvider = signer.provider.connection.url === 'metamask' ? signer : simpleRpcProvider\n\n    return new ethers.Contract(address, abi, signerOrProvider)\n}\n\nexport const getOwnlyLaunchpadContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n    return getContract(launchpadABI, ownlyLaunchPad(), signer)\n}\n\nexport const getLaunchpadContract = (signer?: ethers.Signer | ethers.providers.Provider, category = 'ownlyLaunchPad') => {\n    return getContract(launchpadABI, getLaunchPadAddress(category), signer)\n}\n\nexport const calculateLaunchpadStats = async (contract, project) => {\n    const totalForSaleTokens = new TokenAmount(project.sellingCoin, await contract.totalRewardTokens());\n    const totalSoldTokens = new TokenAmount(project.sellingCoin, await contract.soldAmount());\n    const remainingForSaleTokens = totalForSaleTokens.subtract(totalSoldTokens);\n    const totalParticipants = await contract.totalParticipant();\n    const tokenRate = new TokenAmount(project.buyingCoin, await contract.tokenRate())\n    const totalSales = new TokenAmount(project.buyingCoin, await contract.totalRaise());\n    const expectedSales = tokenRate.multiply(totalForSaleTokens);\n    const percentage = totalSales.divide(expectedSales).multiply(BigInt(100));\n\n    return {\n        totalParticipants: totalParticipants.toString(),\n        totalForSaleTokens: totalForSaleTokens.toExact(),\n        totalSoldTokens: totalSoldTokens.toExact(),\n        remainingForSale: remainingForSaleTokens.toExact(),\n        totalSales: totalSales.toExact(),\n        expectedSales: expectedSales.toSignificant(18),\n        percentage: percentage.toSignificant(18),\n        tokenRate: tokenRate.toExact()\n    };\n}\n\nexport const getAccountDetailsLaunchPad = async (contract, project, library, account) => {\n    if (!account) {\n        throw Error;\n    }\n    const details = await contract.getWhitelist(account);\n    const tokenRate = new TokenAmount(project.buyingCoin, await contract.tokenRate())\n    const dets = {\n        balance: new TokenAmount(BNB, (await library.getBalance(account)).toBigInt()),\n        amount: new TokenAmount(OWN, details._amount),\n        maxPayableAmount: new TokenAmount(OWN, details._maxPayableAmount),\n        rewardedAmount: new TokenAmount(OWN, details._rewardedAmount),\n        redeemed: details._redeemed,\n        whitelist: details._whitelist,\n    }\n    const maxExpendable = new TokenAmount(project.buyingCoin, expandValue(\n        (dets.maxPayableAmount.subtract(dets.rewardedAmount)).multiply(tokenRate).toFixed(18), project.buyingCoin)\n    )\n    return {\n        ... dets,\n        'maxExpendable': maxExpendable,\n    };\n}\n\n","import { Field } from 'state/swap/action';\nimport { TypedUseSelectorHook, useSelector, useDispatch } from 'react-redux';\nimport { setProject } from './actions';\nimport { AppDispatch, AppState } from './index';\n\nexport const useAppSelector: TypedUseSelectorHook<AppState> = useSelector;\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\n\nexport const useProject = () => {\n    const projects = useAppSelector((state) => state.projects);\n    return projects;\n};\n\nexport const useFindProject = () => useAppSelector((state) => state.projects.selectedProject); \n\nexport const useSetProject = (address?: string | null) => {\n    const dispatch = useAppDispatch();\n    if (!address) {\n        return ''\n    }\n    dispatch(setProject(address))\n    return address;\n};\n\nexport const useFindProjectByAddress = (address?: string | null) => {\n    const project = useAppSelector((state) => state.projects.data.filter(p => p.address === address));\n    return project[0]\n}\n\nexport const useAccount = () => {\n    const accounts = useAppSelector((state) => state.accounts.data);\n    return accounts;\n};\n\nexport const useAccountWhiteList = (acc?: string | null) => {\n    const account = useAppSelector((state) =>\n        state.accounts.data.map((acs) => {\n            return acs.whiteList.filter((ls) => ls.address === acc?.toLowerCase());\n        }), \n    );\n    return account;\n};\n\nexport const usePools = () => {\n    const pools = useAppSelector((state) => state.pools);\n    return pools;\n};\n\nexport const useGetPoolsByAddress = (address?: string | null) => {\n    const pool = useAppSelector((state) => {\n        return state.pools.data.filter((pl) => pl.projectAddress === address);\n    })\n    return pool[0];\n}\n","import { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport {\n    getLaunchpadContract,\n    getOwnlyLaunchpadContract,\n} from 'utils/contractHelpers'\n\n// Imports below migrated from Exchange useContract.ts\nimport { Contract } from '@ethersproject/contracts'\nimport { ChainId, WETH } from '@sparkpointio/sparkswap-sdk'\n\n\nexport const useOwnlyLaunchpad = () => {\n    const { library } = useActiveWeb3React()\n    return useMemo(() => getOwnlyLaunchpadContract(library.getSigner()), [library])\n}\n\nexport const useLaunchpadContract = (category='ownlyLaunchPad') => {\n    const { library } = useActiveWeb3React()\n    return useMemo(() => getLaunchpadContract(library.getSigner(), category), [library, category])\n}\n","import { useEffect, useState, useRef } from 'react'\nimport { ChainId } from '@sparkpointio/sparkswap-sdk'\nimport { useWeb3React } from '@web3-react/core'\nimport { Web3Provider } from '@ethersproject/providers'\nimport { simpleRpcProvider } from 'utils/providers'\n// eslint-disable-next-line import/no-unresolved\nimport { Web3ReactContextInterface } from '@web3-react/core/dist/types'\n\n/**\n * Provides a web3 provider with or without user's signer\n * Recreate web3 instance only if the provider change\n */\nconst useActiveWeb3React = (): Web3ReactContextInterface<Web3Provider> => {\n  const { library, chainId, ...web3React } = useWeb3React()\n  const refEth = useRef(library)\n  const [provider, setprovider] = useState(library || simpleRpcProvider)\n\n  useEffect(() => {\n    if (library !== refEth.current) {\n      setprovider(library || simpleRpcProvider)\n      refEth.current = library\n    }\n  }, [library])\n\n  return { library: provider, chainId: chainId ?? ChainId.MAINNET, ...web3React }\n}\n\nexport default useActiveWeb3React\n","import {Token} from \"@sparkpointio/sparkswap-sdk\";\n\n\nexport type Status = 'active' | 'upcoming' | 'completed' | null;\n\nexport const STATE:{active: Status; upcoming: Status; completed: Status} = {\n    active: 'active',\n    upcoming: 'upcoming',\n    completed: 'completed'\n}\n\nexport interface ITokens {\n    name: string;\n    symbol: string;\n    address: string;\n    chainId: number;\n    decimals: number;\n    logoURI: string;\n}\n\nexport interface IProjects {\n    category?: string;\n    address?: string;\n    buyingCoin: Token;\n    sellingCoin: Token;\n    title: string;\n    symbol: string;\n    image: string;\n    wallpaperBg?: string;\n    desc: string;\n    longDesc: string;\n    longDesc2?: string | null\n    longDesc3?: string | null\n    price: number;\n    progress: number;\n    totalRaise: number;\n    ownSale: number;\n    status?: Status;\n    socMeds?: string[]\n}\n\nexport interface IUserAccount {\n    address: string;\n    allocation: string;\n    maxSwap: string;\n}\n\nexport interface IPoolInformation {\n    open: string;\n    close: string;\n    cap: number;\n    totalUserParticipated: number;\n    totalFundsSwapped?: number;\n    projectAddress: string;\n}\n\ninterface ListType {\n    address: string;\n}\n\nexport interface IAccountType {\n    whiteList: ListType[]\n}\n\nexport interface ITransactionDetails {\n    hash: string\n    approval?: { tokenAddress: string; spender: string };\n    summary?: string;\n    lastCheckedBlockNumber?: number;\n    addedTime: number\n    confirmedTime?: number\n    from: string;\n}\n\nexport type PageMeta = {\n    title: string\n    description?: string\n    image?: string\n  }\n\n","import {parseUnits} from \"@ethersproject/units\";\n\nexport function escapeRegExp(string: string): string {\n    return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') // $& means the whole matched string\n  }\n\nexport const expandValue = (value, token) => {\n    if (token.decimals === 0) {\n        throw Error\n    }\n    return value? parseUnits(value, token.decimals).toString() : BigInt(0);\n}\n","import React from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { Button, ButtonProps, ConnectorId, useWalletModal } from '@sparkpointio/sparkswap-uikit'\nimport { injected, walletconnect, bsc } from 'connectors'\n\nconst UnlockButton: React.FC<ButtonProps> = props => {\n    const { account, activate, deactivate } = useWeb3React()\n  \n    const handleLogin = (connectorId: ConnectorId) => {\n      if (connectorId === 'walletconnect') {\n        return activate(walletconnect)\n      }\n      if (connectorId === 'bsc') {\n        return activate(bsc)\n      }\n      return activate(injected)\n    }\n  \n    const { onPresentConnectModal } = useWalletModal(handleLogin, deactivate, account as string)\n  \n    return (\n      <Button onClick={onPresentConnectModal} {...props} >\n        Unlock Wallet\n      </Button>\n    )\n  }\n  \n  export default UnlockButton","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgMediumIcon(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    fill: \"#000000\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 50 50\",\n    width: \"50px\",\n    height: \"50px\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M 3 6 L 7 11.091797 L 7 35.285156 L 1 43 L 15 43 L 9 35.285156 L 9 13.75 L 22 43 L 21.998047 43.013672 L 34 13.544922 L 34 39 L 30 43 L 47 43 L 43 39 L 42.972656 10.503906 L 46.863281 6.0136719 L 34.845703 6.0136719 L 25.605469 28.744141 L 15.496094 6 L 3 6 z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgMediumIcon);\nexport default __webpack_public_path__ + \"static/media/MediumIcon.7b14fab6.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom'\n\nconst Anchor = ({href, children}: {href?: string; children: React.ReactNode}) => {\n    return (\n        <div style={{margin: '5px'}}>\n            <a href={`https://www.${href}`}>{children}</a>\n        </div>\n    )\n}\n\nexport const StyledLink = styled(Link)`\n    background-color: #32a31b;\n    width: 100%;\n    padding: 15px 0px;\n`\n\nexport default Anchor;","import sample from 'lodash/sample'\n\n// Array of available nodes to connect to\nexport const nodes = [process.env.REACT_APP_NETWORK_URL]\n\nconst getNodeUrl = () => {\n  return sample(nodes)\n}\n\nexport default getNodeUrl\n","import { ethers } from 'ethers'\nimport getRpcUrl from 'utils/getRpcUrl'\n\nconst RPC_URL = getRpcUrl()\n\nexport const simpleRpcProvider = new ethers.providers.JsonRpcProvider(RPC_URL)\n\nexport default null\n"],"sourceRoot":""}