{"version":3,"sources":["config/constants/meta.ts","assets/icons/Powered.svg","components/layout/Page.tsx","state/projects/index.ts","config/dummy-data/Projects.ts","state/swap/action.ts","style/Global.ts","components/SuspenseWithChunkError/index.tsx","components/PageLoader.tsx","config/localisation/languageCodes.ts","hooks/LanguageContext.ts","hooks/useTheme.ts","components/Menu/config.ts","components/Menu/index.tsx","routerHistory.ts","App.tsx","state/acounts/index.ts","config/dummy-data/Accounts.ts","state/pools/index.ts","config/dummy-data/Pool.ts","state/swap/index.ts","state/tokens/index.ts","config/dummy-data/Tokens.ts","state/index.ts","utils/getLibrary.ts","Providers.tsx","index.tsx","config/index.ts","connectors/Fortmatic.ts","connectors/NetworkConnector.ts","connectors/bsc/bscConnector.ts","connectors/index.ts","ThemeContext.tsx"],"names":["DEFAULT_META","title","description","image","customMeta","StyledPage","styled","div","theme","mediaQueries","sm","lg","StyledFooter","CustomLink","a","colors","text","StyledLink","primary","SocLink","socLink","children","href","PageFooter","useContext","ThemeContext","isMobile","useMedia","maxWidth","flexDirection","justifyContent","style","textAlign","src","Powered","alt","width","margin","size","color","PageMeta","pathname","useLocation","pageMeta","property","content","Page","props","initialState","selectedProject","data","category","address","sellingCoin","OWN","buyingCoin","BNB","symbol","desc","longDesc","longDesc2","longDesc3","price","progress","totalRaise","ownSale","wallpaperBg","status","socMeds","setProject","dispatch","selectProject","projectSlice","createSlice","name","reducers","state","action","payload","actions","Field","GlobalStyle","createGlobalStyle","background","SuspenseWithChunkError","hasError","error","isJsChunkLoadError","isCssChunkLoadError","code","isChunkLoadError","isRecoveringFromChunkError","window","history","nextState","replaceState","location","reload","this","fallback","React","Component","Wrapper","PageLoader","allLanguages","language","defaultLanguageState","selectedLanguage","setSelectedLanguage","translatedLanguage","setTranslatedLanguage","LanguageContext","createContext","useTheme","isDark","toggleTheme","StyledThemeCopntext","config","label","icon","Menu","useWeb3React","account","activate","deactivate","links","login","connectorId","walletconnect","bsc","injected","logout","currentLang","langs","setLang","createBrowserHistory","Home","lazy","Project","LaunchPad","App","path","exact","component","to","whiteList","accountSlice","projectAddress","open","close","cap","totalUserParticipated","totalFundsSwapped","poolSlice","typeInput","createAction","independentField","INPUT","typedValue","currencyId","OUTPUT","createReducer","builder","addCase","field","chainId","decimals","logoURI","tokenSlice","store","configureStore","devTools","process","reducer","projects","projectReducer","accounts","accountReducer","pools","poolReducer","swaps","swapReducer","tokens","tokenReducer","getLibrary","provider","library","Web3Provider","pollingInterval","Providers","ethereum","autoRefreshOnNetworkChange","ReactDOM","render","StrictMode","Global","document","getElementById","DAI","Token","ChainId","MAINNET","BUSD","USDT","EOS","DOT","ETH","WETH_ONLY","WETH","BSCTESTNET","CHAIN_ID_NETWORK_ARGUMENT","undefined","FortmaticConnector","fortmatic","Fortmatic","default","apiKey","Error","getProvider","pollForOverlayReady","Promise","resolve","interval","setInterval","overlayReady","clearInterval","emit","all","enable","then","FortmaticConnectorCore","RequestError","message","MiniRpcProvider","url","batchWaitTimeMs","isMetaMask","host","nextId","batchTimeoutId","batch","clearBatch","console","info","fetch","method","headers","accept","body","JSON","stringify","map","item","request","response","forEach","reject","ok","statusText","json","byKey","reduce","memo","current","id","result","sendAsync","callback","params","jsonrpc","catch","toString","promise","push","setTimeout","parsed","URL","NetworkConnector","urls","defaultChainId","invariant","Object","keys","length","supportedChainIds","k","Number","providers","currentChainId","accumulator","AbstractConnector","parseSendReturn","sendReturn","hasOwnProperty","NoBscProviderError","constructor","UserRejectedRequestError","BscConnector","kwargs","handleNetworkChanged","bind","handleChainChanged","handleAccountsChanged","handleClose","emitUpdate","BinanceChain","emitDeactivate","networkId","on","send","warning","isDapper","cachedResults","net_version","netVersion","networkVersion","_chainId","removeListener","NETWORK_URL","FORMATIC_KEY","REACT_APP_FORTMATIC_KEY","PORTIS_ID","REACT_APP_PORTIS_ID","NETWORK_CHAIN_ID","parseInt","InjectedConnector","WalletConnectConnector","rpc","bridge","qrcode","PortisConnector","dAppId","networks","WalletLinkConnector","appName","appLogoUrl","CACHE_KEY","customColorsCollections","customColors","BG1","BG2","light","card","ThemeContextProvider","useState","isDarkUserSetting","localStorage","getItem","parse","setIsDark","Provider","value","prevState","setItem","dark","CustomThemeContext","CustomThemeContextProvider"],"mappings":"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","file":"static/js/main.69d14d28.chunk.js","sourcesContent":["import { PageMeta } from './type'\n\nexport const DEFAULT_META: PageMeta = {\n  title: 'SparkDeFi',\n  description:\n    'Refuel your rocket with SFUEL and travel to the moon with SparkSwap, the prodigious decentralized exchange on Binance Smart Chain.',\n  image: 'https://sparkswap.finance//images/192x192_App_Icon.png',\n}\n\nexport const customMeta: { [key: string]: PageMeta } = {\n  '/': {\n    title: 'Home | SparkDeFi',\n  },\n  '/launch': {\n    title: 'Launch | SparkDeFi'\n  },\n  '/launch/projects': {\n    title: 'Projects | SparkDeFi',\n  },\n  '/launch/staking': {\n    title: 'Staking | SparkDeFi',\n  },\n}","export default __webpack_public_path__ + \"static/media/Powered.8626d943.svg\";","import React, { Children, useContext } from 'react';\nimport styled, { ThemeContext } from 'styled-components';\nimport { Text, Flex } from '@sparkpointio/sparkswap-uikit';\nimport useMedia from 'use-media';\nimport { Facebook, Twitter, Mail, Send } from 'react-feather';\nimport { Helmet } from 'react-helmet-async';\nimport { useLocation } from 'react-router';\nimport { customMeta, DEFAULT_META } from 'config/constants/meta';\nimport Powered from 'assets/icons/Powered.svg';\nimport './App.css';\n\nconst StyledPage = styled.div`\n    min-height: calc(100vh - 64px);\n    // padding-top: 16px;\n    padding-bottom: 16px;\n\n    ${({ theme }) => theme.mediaQueries.sm} {\n        // padding-top: 24px;\n        padding-bottom: 24px;\n    }\n    ${({ theme }) => theme.mediaQueries.lg} {\n        // padding-top: 32px;\n        padding-bottom: 32px;\n    }\n`;\n\nconst StyledFooter = styled.div`\n    height: auto;\n    min-height: 20vh;\n    background-color: #111122;\n    display: flex;\n    justify-content: space-around;\n    padding: 10px 10px 40px 35px;\n    width: 100%;\n`;\n\nconst CustomLink = styled.a`\n    color: ${({ theme }) => theme.colors.text};\n    margin: 5px;\n    \n`;\nconst StyledLink = styled(CustomLink)`\n    color: white;\n    @media (min-width: 500px) {\n        &:after {\n            content: '';\n            border-right: 2px solid ${({ theme }) => theme.colors.primary};\n            padding-right: 15px;\n        }\n        &:before {\n            content: '';\n            border-left: 2px solid ${({ theme }) => theme.colors.primary};\n            padding-left: 15px;\n        }\n    }\n\n`;\n \n\nconst SocLink = ({socLink, children}) => (\n    <a href={socLink}>{children}</a>\n)\n\nconst PageFooter = () => {\n    const theme = useContext(ThemeContext);\n    const isMobile = useMedia({maxWidth: 500});\n\n    return (\n        <StyledFooter>\n            <Flex flexDirection=\"column\" justifyContent=\"space-evenly\" style={{ textAlign: 'left' }}>\n                <img src={Powered} alt=\"powered-logo\" style={{ width: '60%', margin: '20px 0px' }} />\n                <Flex flexDirection={isMobile? \"column\" : \"row\"} justifyContent=\"space-evenly\" style={{ width: '100%' }}>\n                    <CustomLink href=\"https://sparkpointio.github.io/terms_and_conditions/sparkdefi-launchpad/\"><h5>Terms & Conditions</h5></CustomLink>\n                    <StyledLink href=\"https://sparkpointio.github.io/privacy_policies/sparkdefi-launchpad/\">Privacy Policy</StyledLink>\n                    <CustomLink href=\"https://srk.finance/#roadmap\"><h5>Sitemap</h5></CustomLink>\n                </Flex>\n            </Flex>\n            <Flex\n                flexDirection=\"column\"\n                justifyContent=\"space-evenly\"\n                style={{ maxWidth: '250px', width: '100%', textAlign: 'center' }}\n            >\n                <Flex justifyContent=\"space-evenly\" style={{margin: '20px' }}>\n                    <SocLink socLink=\"https://www.facebook.com/sparkpointio/\"><Facebook size=\"30\" color=\"#FFFFFF\" /></SocLink>\n                    <SocLink socLink=\"https://twitter.com/sparkpointio\"><Twitter size=\"30\" color=\"#FFFFFF\" />  </SocLink>\n                    <SocLink socLink=\"https://t.me/SparkPointOfficial\"><Send size=\"30\" color=\"#FFFFFF\" /></SocLink>\n                    <SocLink socLink=\"https://www.gmail.com\"><Mail size=\"30\" color=\"#FFFFFF\" /></SocLink>\n                </Flex>\n                <h5>© SparkLaunch 2021</h5>\n            </Flex>\n        </StyledFooter>\n    );\n};\n\nconst PageMeta = () => {\n    const { pathname } = useLocation();\n    const pageMeta = customMeta[pathname] || {};\n    const { title, description, image } = { ...DEFAULT_META, ...pageMeta };\n\n    return (\n        <Helmet>\n            <title>{title}</title>\n            <meta property=\"og:title\" content={title} />\n            <meta property=\"og:description\" content={description} />\n            <meta property=\"og:image\" content={image} />\n        </Helmet>\n    );\n};\n\nconst Page: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, ...props }) => {\n    return (\n        <>\n            <PageMeta />\n            <StyledPage {...props}>{children}</StyledPage>\n            <PageFooter />\n        </>\n    );\n};\n\nexport default Page;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { ProjectState, AppThunk } from 'state/type'\nimport ProjectList  from 'config/dummy-data/Projects';\n\n\nconst initialState: ProjectState = { \n    selectedProject: null,\n    data: ProjectList,\n}\n\n\nexport const setProject = (address: string): AppThunk => (dispatch) => {\n    dispatch(selectProject(address));\n}\n\nexport const projectSlice = createSlice({\n    name: 'Projects',\n    initialState,\n    reducers: {\n        selectProject:  (state, action: PayloadAction<string>) => {\n            state.selectedProject = action.payload\n        }\n    }\n})\n\n\nexport const { selectProject } = projectSlice.actions;\nexport default projectSlice.reducer","import { IProjects } from \"config/constants/type\";\nimport {BNB, OWN} from \"../index\";\n\n\nconst ProjectList: Array<IProjects> = [\n    {\n        category: 'ownlyLaunchPad',\n        address: '0x001',\n        sellingCoin: OWN,\n        buyingCoin: BNB,\n        title: 'Ownly',\n        symbol: 'OWNLY',\n        image: 'ownly.png',\n        desc: 'CryptoArt is still a foreign concept to many artists. The Combination of art and blockchain seems too complicated. However, we believe its rather simple.',\n        longDesc: 'Backed with over 2+ years of experience in the NFT and blockchain industry, Ownly is a governance token-based NFT-focused marketplace, curator, and a blockchain platform with an existing basket portfolio of NFT artworks that enable creators and collectors to optimize the authentic value of NFT assets.',\n        longDesc2: '$OWN Token is the native utility token of Ownly, users are able to buy, own, collect, and trade 1 of 1 edition crypto artworks by talented artists. Own the only true copy and there\\'s nothing else like that in the world -- as if it\\'s made just for you. ',\n        longDesc3: 'Ownly is created to be a meeting place of artworks and collectors in the crypto space. It offers a Decentralized NFT Marketplace, Staking, NFT launching & curation, and NFT-focused & energy-efficient blockchain platform in a seamless, transparent, secure, inclusive, and interoperable approach.',\n        price: 1,\n        progress: 100,\n        totalRaise: 150,\n        ownSale: 165000000.0,\n        wallpaperBg: 'ownlyBg.jpg',\n        status: \"active\",\n        socMeds: ['facebook.com', 'twitter.com', 'telegram.org', 'medium.com'],\n    },\n    {\n        category: 'ownlyLaunchPad',\n        address: '0x002',\n        sellingCoin: OWN,\n        buyingCoin: BNB,\n        title: 'Lonely Token',\n        symbol: 'LOWNLY',\n        image: 'ownly.png',\n        desc: 'CryptoArt is still a foreign concept to many artists. The Combination of art and blockchain seems too complicated. However, we believe its rather simple.',\n        longDesc: 'It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using content here, making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).',\n        price: 0.000092209,\n        progress: 324575,\n        totalRaise: 150,\n        ownSale: 165000000.0,\n        wallpaperBg: 'ownlyBg.jpg',\n        status: \"active\",\n        socMeds: ['facebook.com', 'twitter.com', 'telegram.org', 'medium.com'],\n    },\n    {\n        category: 'ownlyLaunchPad',\n        address: '0x003',\n        sellingCoin: OWN,\n        buyingCoin: BNB,\n        title: 'Sad Token',\n        symbol: 'SADLY',\n        image: 'ownly.png',\n        desc: 'CryptoArt is still a foreign concept to many artists. The Combination of art and blockchain seems too complicated. However, we believe its rather simple.',\n        longDesc: 'It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using content here, making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).',\n        price: 0.0000909,\n        progress: 75,\n        totalRaise: 150,\n        ownSale: 165000000.0,\n        wallpaperBg: 'ownlyBg.jpg',\n        status: \"active\",\n        socMeds: ['facebook.com', 'twitter.com', 'telegram.org', 'medium.com'],\n    },\n    {\n        category: 'ownlyLaunchPad',\n        address: '0x004',\n        sellingCoin: OWN,\n        buyingCoin: BNB,\n        title: 'Ownly',\n        symbol: 'OWNLY',\n        image: 'ownly.png',\n        desc: 'CryptoArt is still a foreign concept to many artists. The Combination of art and blockchain seems too complicated. However, we believe its rather simple.',\n        longDesc: 'It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using content here, making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).',\n        longDesc2: 'Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for will uncover many web sites still in their infancy.',\n        price: 0.0000909,\n        progress: 75,\n        totalRaise: 150,\n        ownSale: 165000000.0,\n        wallpaperBg: 'ownlyBg.jpg',\n        status: \"completed\",\n        socMeds: ['facebook.com', 'twitter.com', 'telegram.org', 'medium.com'],\n    },\n    {\n        category: 'ownlyLaunchPad',\n        address: '0x005',\n        sellingCoin: OWN,\n        buyingCoin: BNB,\n        title: 'Ownly',\n        symbol: 'OWNLY',\n        image: 'ownly.png',\n        desc: 'CryptoArt is still a foreign concept to many artists. The Combination of art and blockchain seems too complicated. However, we believe its rather simple.',\n        longDesc: 'It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using content here, making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).',\n        price: 0.0000909,\n        progress: 75,\n        totalRaise: 150,\n        ownSale: 165000000.0,\n        wallpaperBg: 'ownlyBg.jpg',\n        status: \"upcoming\",\n        socMeds: ['facebook.com', 'twitter.com', 'telegram.org', 'medium.com'],\n    },\n]\n\nexport default ProjectList;\n","import { createAction } from '@reduxjs/toolkit';\n\nexport enum Field {\n    INPUT = 'INPUT',\n    OUTPUT = 'OUTPUT'\n}\n\nexport const typeInput = createAction<{ field: Field; typedValue: string }>('swap/typeInput')\n","import { createGlobalStyle } from 'styled-components'\n// eslint-disable-next-line import/no-unresolved\nimport { SparkSwapTheme } from '@sparkpointio/sparkswap-uikit'\n\ndeclare module 'styled-components' {\n  /* eslint-disable @typescript-eslint/no-empty-interface */\n  export interface DefaultTheme extends SparkSwapTheme {}\n}\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    font-family: 'Kanit', sans-serif;\n  }\n  body {\n    background-color: ${({ theme }) => theme.colors.background};\n    img {\n      height: auto;\n      max-width: 100%;\n    }\n  }\n`\n\nexport default GlobalStyle","import React, { Suspense, SuspenseProps } from 'react'\n\ninterface State {\n  hasError: boolean\n}\n\nclass SuspenseWithChunkError extends React.Component<SuspenseProps, State> {\n  constructor(props) {\n    super(props)\n    this.state = { hasError: false }\n  }\n\n  static getDerivedStateFromError() {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true }\n  }\n\n  componentDidCatch(error) {\n    const isJsChunkLoadError = error.name === 'ChunkLoadError'\n    const isCssChunkLoadError = error.code === 'CSS_CHUNK_LOAD_FAILED'\n    const isChunkLoadError = isJsChunkLoadError || isCssChunkLoadError\n\n    // Save a flag on the window object indicating that we have already had a chunk error.\n    // This prevents infinite reloads\n    const isRecoveringFromChunkError = !!window.history.state?.isRecoveringFromChunkError\n\n    // If was a chunk load error, refresh the page\n    if (isChunkLoadError && !isRecoveringFromChunkError) {\n      const nextState = { ...window.history.state, isRecoveringFromChunkError: true }\n      window.history.replaceState(nextState, '')\n      window.location.reload()\n      return\n    }\n\n    throw error\n  }\n\n  render() {\n    const { hasError } = this.state\n    const { fallback } = this.props\n\n    if (hasError) {\n      return fallback\n    }\n\n    return <Suspense {...this.props} />\n  }\n}\n\nexport default SuspenseWithChunkError","import React from 'react'\nimport styled from 'styled-components'\nimport {Spinner}  from '@sparkpointio/sparkswap-uikit';\nimport Page from './layout/Page'\n\nconst Wrapper = styled(Page)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst PageLoader: React.FC = () => {\n  return (\n    <Wrapper>\n      <Spinner />\n    </Wrapper>\n  )\n}\n\nexport default PageLoader","export const EN = { code: 'en', language: 'English' }\nexport const AR = { code: 'ar', language: 'العربية' }\nexport const BN = { code: 'bn', language: 'বাংলা' }\nexport const ZHCN = { code: 'zh-CN', language: '简体中文' }\nexport const ZHTW = { code: 'zh-TW', language: '繁體中文' }\nexport const NL = { code: 'nl', language: 'Nederlands' }\nexport const FIL = { code: 'fil', language: 'Filipino' }\nexport const FI = { code: 'fi', language: 'Suomalainen' }\nexport const FR = { code: 'fr', language: 'Français' }\nexport const DE = { code: 'de', language: 'Deutsch' }\nexport const EL = { code: 'el', language: 'Ελληνικά' }\nexport const HI = { code: 'hi', language: 'हिंदी' }\nexport const HU = { code: 'hu', language: 'Magyar' }\nexport const ID = { code: 'id', language: 'Bahasa Indonesia' }\nexport const IT = { code: 'it', language: 'Italiano' }\nexport const JA = { code: 'ja', language: '日本語' }\nexport const KO = { code: 'ko', language: '한국어' }\nexport const PL = { code: 'pl', language: 'Polski' }\nexport const PTPT = { code: 'pt-PT', language: 'Português (Portugal)' }\nexport const PTBR = { code: 'pt-BR', language: 'Português (Brazil)' }\nexport const RO = { code: 'ro', language: 'Română' }\nexport const RU = { code: 'ru', language: 'Русский' }\nexport const ESES = { code: 'es-ES', language: 'Español' }\nexport const SVSE = { code: 'sv-SE', language: 'Svenska' }\nexport const TA = { code: 'ta', language: 'தமிழ்' }\nexport const TR = { code: 'tr', language: 'Türkçe' }\nexport const UK = { code: 'uk', language: 'Українська' }\nexport const VI = { code: 'vi', language: 'Tiếng Việt' }\n\nexport const allLanguages = [\n  EN,\n  AR,\n  BN,\n  ZHCN,\n  ZHTW,\n  NL,\n  FIL,\n  FI,\n  DE,\n  FR,\n  EL,\n  HI,\n  HU,\n  ID,\n  IT,\n  JA,\n  KO,\n  PL,\n  PTPT,\n  PTBR,\n  RO,\n  RU,\n  ESES,\n  SVSE,\n  TA,\n  TR,\n  UK,\n  VI,\n]","import React, { createContext } from 'react'\n\nexport interface LanguageObject {\n  code: string\n  language: string\n}\ninterface LanguageState {\n  selectedLanguage: LanguageObject\n  setSelectedLanguage: React.Dispatch<React.SetStateAction<LanguageObject>>\n  translatedLanguage: LanguageObject\n  setTranslatedLanguage: React.Dispatch<React.SetStateAction<LanguageObject>>\n}\n\nconst defaultLanguageState: LanguageState = {\n  selectedLanguage: { code: '', language: '' },\n  setSelectedLanguage: (): void => undefined,\n  translatedLanguage: { code: '', language: '' },\n  setTranslatedLanguage: (): void => undefined,\n}\n\nexport const LanguageContext = createContext(defaultLanguageState as LanguageState)\n","import { useContext } from 'react'\nimport { ThemeContext as StyledThemeCopntext } from 'styled-components'\nimport { ThemeContext } from '../ThemeContext'\n\nconst useTheme = () => {\n  const { isDark, toggleTheme } = useContext(ThemeContext)\n  const theme = useContext(StyledThemeCopntext)\n  return { isDark, toggleTheme, theme }\n}\n\nexport default useTheme","import { MenuEntry } from '@sparkpointio/sparkswap-uikit'\n\nconst config: MenuEntry[] = [\n  {\n    label: \"Swap\",\n    icon: \"TradeIcon\",\n    href: \"/swap\",\n  },\n  {\n    label: \"Farm\",\n    icon: \"FarmIcon\",\n    href: \"https://app.srk.finance/#/stake\",\n  },\n  {\n    label: \"Pool\",\n    icon: \"PoolIcon\",\n    href: \"https://app.srk.finance/#/pool\",\n  },\n  {\n    label: \"Bridge\",\n    icon: \"BridgeIcon\",\n    href: \"https://app.srk.finance/#/bridge\",\n  },\n  {\n    label: \"Launch\",\n    icon: \"LaunchIcon\",\n    href: \"/launch\"\n  },\n  {\n    label: \"Info\",\n    icon: \"InfoIcon\",\n    href: \"https://sparkswap.info/#/home\",\n  },\n  {\n    label: \"Airdrop\",\n    icon: \"AirdropIcon\",\n    href: \"https://app.srk.finance/#/airdrop\"\n  },\n  {\n    label: \"Help\",\n    icon: \"MoreIcon\",\n    href: \"https://medium.com/theecosystem/a-beginners-guide-to-sparkswap-79f92a2f7074\"\n  },\n  // {\n  //   label: 'Trade',\n  //   icon: 'TradeIcon',\n  //   initialOpenState: true,\n  //   items: [\n  //     {\n  //       label: 'Exchange',\n  //       href: '/swap'\n  //     },\n  //     {\n  //       label: 'Liquidity',\n  //       href: '/pool'\n  //     }\n  //   ]\n  // },\n  /*\n  {\n    label: \"Info\",\n    icon: \"InfoIcon\",\n    items: [\n      {\n        label: \"Overview\",\n        href: \"https://coinmarketcap.com/currencies/sparkpoint/\",\n      },\n      {\n        label: \"Trade SRK\",\n        href: \"https://srk.sh/trade\",\n      },\n    ],\n  },\n  {\n    label: \"More\",\n    icon: \"MoreIcon\",\n    items: [\n      {\n        label: \"SparkDeFi\",\n        href: \"https://srk.finance/\",\n      },\n      {\n        label: \"SparkPoint\",\n        href: \"https://sparkpoint.io/\",\n      },\n      {\n        label: \"Github\",\n        href: \"https://github.com/sparkpointio\",\n      },\n      {\n        label: \"White Paper\",\n        href: \"https://github.com/sparkpointio/sparkdefi-whitepaper/blob/main/WHITEPAPER.md\",\n      },\n      {\n        label: \"Blog\",\n        href: \"https://medium.com/theecosystem\",\n      },\n    ],\n  },\n  */\n]\n\nexport default config","import React, { useContext } from 'react'\nimport { Menu as UikitMenu, ConnectorId } from '@sparkpointio/sparkswap-uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { allLanguages } from 'config/localisation/languageCodes'\nimport { LanguageContext } from 'hooks/LanguageContext'\nimport useTheme from 'hooks/useTheme'\nimport useGetPriceData from 'hooks/useGetPriceData'\nimport { injected, bsc, walletconnect } from 'connectors'\nimport links from './config'\n\nconst Menu: React.FC = props => {\n  const { account, activate, deactivate } = useWeb3React()\n  const { selectedLanguage, setSelectedLanguage } = useContext(LanguageContext)\n  const { isDark, toggleTheme } = useTheme()\n\n  return (\n    <UikitMenu\n      links={links}\n      account={account as string}\n      login={(connectorId: ConnectorId) => {\n        if (connectorId === 'walletconnect') {\n          return activate(walletconnect)\n        }\n\n        if (connectorId === 'bsc') {\n          return activate(bsc)\n        }\n\n        return activate(injected)\n      }}\n      logout={deactivate}\n      isDark={isDark}\n      toggleTheme={toggleTheme}\n      currentLang={selectedLanguage?.code || ''}\n      langs={allLanguages}\n      setLang={setSelectedLanguage}\n \n      {...props}\n    />\n  )\n}\n\nexport default Menu","import { createBrowserHistory } from 'history'\n\n// Manually create the history object so we can access outside the Router e.g. in modals\nconst history = createBrowserHistory()\n\nexport default history","import React, {lazy} from 'react';\nimport { Router, Redirect, Route, Switch } from 'react-router-dom'\nimport SuspenseWithChunkError from 'components/SuspenseWithChunkError'\nimport PageLoader from 'components/PageLoader'\nimport Menu from 'components/Menu'\nimport history from './routerHistory'\n\nconst Home = lazy(() => import('./pages/Home'));\nconst Project = lazy(() => import('./pages/Launchpad/Project/Layout'));\nconst LaunchPad = lazy(() => import('./pages/Launchpad'));\n// const Staking = lazy(() => import('./pages/Staking'))\n\nconst App: React.FC = () => {\n  return (\n   <Router history={history}>\n    <Menu>\n        <SuspenseWithChunkError fallback={<PageLoader />}>\n          <Switch>\n            <Route path=\"/launch\" exact>\n                <Home />\n            </Route>\n            <Route path=\"/launch/projects\" exact>\n              <LaunchPad />\n            </Route>\n            <Route path=\"/launch/projects/:ProjectAddress\" component={Project} />\n\n            {/* <Route path=\"/launch/staking\" exact>\n              <Staking />\n            </Route> */}\n            {/* Redirects */}\n            <Route path=\"/\" exact>\n                <Redirect to=\"/launch\" />\n            </Route>\n            <Route><Redirect to=\"/launch\" /></Route>\n          </Switch>\n        </SuspenseWithChunkError>\n    </Menu>\n   </Router>\n  );\n}\n\nexport default App;\n","\nimport { createSlice } from '@reduxjs/toolkit';\nimport AccountList from 'config/dummy-data/Accounts';\nimport { AccountState } from '../type';\n\nconst initialState: AccountState = { \n    data: AccountList \n}\n\nexport const accountSlice = createSlice({\n    name: 'Accounts',\n    initialState,\n    reducers: {}\n});\n\nexport default accountSlice.reducer;","import { IAccountType } from \"config/constants/type\"\n\nconst AccountList: IAccountType[] = [\n    {\n        whiteList: [\n            {\n                address: '0x847dfF6a30f4e69FFs67E78aa37E4170EEae445a8',\n            },\n            {\n                address: '0x847dfF6a30f4e69FF67E78aa37E4170EEae445a8'\n            },\n            {\n                address: '0x8A672715e042f6e9d9B25C2ce9F84210e8206EF1'\n            },\n            {\n                address: '0xcE84500ad8411b14e5DA048adCdF46284660a0AA'\n            },\n            {\n                address: '0x10efd615825F77aa715D2C7EA4c02280d9dd76fe'\n            }\n        ],\n    },\n];\n\nexport default AccountList;\n","import { createSlice } from '@reduxjs/toolkit'\nimport PoolList from 'config/dummy-data/Pool';\nimport { PoolInformationState } from 'state/type';\n\n\nconst initialState:PoolInformationState = { data: PoolList};\n\nconst poolSlice = createSlice({\n    name: \"Pools\",\n    initialState,\n    reducers: {}\n})\n\nexport default poolSlice.reducer;","import { IPoolInformation } from \"config/constants/type\"\n\n const PoolList:IPoolInformation[] = [\n    {\n        projectAddress: '0x001',\n        open: '06/12/2021 7:00 UTC',\n        close: '06/31/2021 7:00 UTC',\n        cap: 45000,\n        totalUserParticipated: 123456789,\n        totalFundsSwapped: 0,\n    },\n    {\n        projectAddress: '0x002',\n        open: '06/12/2021 7:00 UTC',\n        close: '06/31/2021 7:00 UTC',\n        cap: 45000,\n        totalUserParticipated: 123456789,\n        totalFundsSwapped: 0,\n    },\n    {\n        projectAddress: '0x003',\n        open: '06/12/2021 7:00 UTC',\n        close: '06/31/2021 7:00 UTC',\n        cap: 45000,\n        totalUserParticipated: 123456789,\n        totalFundsSwapped: 0,\n    },\n]\n\nexport default PoolList;","import { createReducer } from '@reduxjs/toolkit';\nimport { SwapState } from '../type';\nimport { Field, typeInput } from './action';\n\nconst initialState: SwapState = {\n    independentField: Field.INPUT,\n    typedValue: '',\n    [Field.INPUT]: {\n      currencyId: '',\n    },\n    [Field.OUTPUT]: {\n      currencyId: '',\n    },\n  }\n\nexport default createReducer<SwapState>(initialState, (builder) => \n    builder\n        .addCase(typeInput, (state, { payload: { field, typedValue }}) => {\n            return {\n                ...state,\n                independentField: field,\n                typedValue\n            }\n        })\n)\n\n","import { createSlice } from '@reduxjs/toolkit';\nimport TokenList from 'config/dummy-data/Tokens';\nimport { TokenState } from 'state/type';\n\nconst initialState: TokenState = {\n    data: TokenList\n  }\n\nexport const tokenSlice = createSlice({\n    name: \"Tokens\",\n    initialState,\n    reducers: {},\n})\n\n// export const { } = tokenSlice.actions\nexport default tokenSlice.reducer;","import { ITokens } from \"config/constants/type\"\n\nconst TokenList:ITokens[] = [\n    {\n        name: \"WBNB Token\",\n        symbol: \"WBNB\",\n        address: \"0x1e33833a035069f42d68D1F53b341643De1C018D\",\n        chainId: 97,\n        decimals: 18,\n        logoURI: \"/images/coins/BUSD.png\"\n    },\n    {\n        name: \"SparkPoint Token\",\n        symbol: \"SRKb\",\n        address: \"0xe09B8661D80CF24dB230A167969d18B94a5a3266\",\n        chainId: 97,\n        decimals: 18,\n        logoURI: \"/images/coins/SRK.png\"\n      }\n]\n\nexport default TokenList","  \nimport { configureStore } from '@reduxjs/toolkit'\nimport projectReducer from './projects';\nimport accountReducer from './acounts';\nimport poolReducer from './pools';\nimport swapReducer from './swap';\nimport tokenReducer from './tokens';\n\nconst store = configureStore({\n    devTools: process.env.NODE_ENV !== 'production',\n    reducer: {\n        projects: projectReducer,\n        accounts: accountReducer,\n        pools: poolReducer,\n        swaps: swapReducer, \n        tokens: tokenReducer,\n    }\n})\n\nexport type AppDispatch = typeof store.dispatch\nexport type AppState = ReturnType<typeof store.getState>\n\nexport default store","import { Web3Provider } from '@ethersproject/providers'\n\nexport default function getLibrary(provider: any): Web3Provider {\n  const library = new Web3Provider(provider)\n  library.pollingInterval = 15000\n  return library\n}","import React from 'react';\nimport { Web3ReactProvider } from '@web3-react/core';\nimport { ModalProvider } from '@sparkpointio/sparkswap-uikit';\nimport { Provider } from 'react-redux';\nimport { HelmetProvider } from 'react-helmet-async';\nimport store from 'state';\n\nimport getLibrary from './utils/getLibrary';\nimport { CustomThemeContextProvider, ThemeContextProvider } from './ThemeContext';\n\nconst Providers: React.FC = ({ children }) => {\n    return (\n        <Web3ReactProvider getLibrary={getLibrary}>\n            <Provider store={store}>\n                <HelmetProvider>\n                    <ThemeContextProvider>\n                        <CustomThemeContextProvider>\n                            <ModalProvider>{children}</ModalProvider>\n                        </CustomThemeContextProvider>\n                    </ThemeContextProvider>\n                </HelmetProvider>\n            </Provider>\n        </Web3ReactProvider>\n    );\n};\n\nexport default Providers;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ResetCSS } from '@sparkpointio/sparkswap-uikit'\nimport GlobalStyle from './style/Global'\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\nimport Providers from './Providers'\nimport 'inter-ui'\n\n\nif ('ethereum' in window) {\n  (window.ethereum as any).autoRefreshOnNetworkChange = false\n}\n\n// window.addEventListener('error', () => {\n//    localStorage?.removeItem('redux_localstorage_simple_lists')\n// })\n\nReactDOM.render(\n  <React.StrictMode>\n    <Providers>\n      <ResetCSS />\n      <GlobalStyle />\n    <App />\n    </Providers>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n","import { ChainId, JSBI, Percent, Token, WETH } from '@sparkpointio/sparkswap-sdk'\nimport { AbstractConnector } from '@web3-react/abstract-connector'\n\n// import { bsc, fortmatic, injected, portis, walletconnect, walletlink } from '../connectors'\nimport { injected, bsc, walletconnect } from '../connectors'\n// TODO\nexport const ROUTER_ADDRESS = '0xeB98E6e5D34c94F56708133579abB8a6A2aC2F26'\n\n// a list of tokens by chain\ntype ChainTokenList = {\n  readonly [chainId in ChainId]: Token[]\n}\n\nexport const DAI = new Token(ChainId.MAINNET, '0x1af3f329e8be154074d8769d1ffa4ee058b1dbc3', 18, 'DAI', 'Dai Stablecoin')\nexport const BUSD = new Token(ChainId.MAINNET, '0xe9e7cea3dedca5984780bafc599bd69add087d56', 18, 'BUSD', 'Binance USD')\nexport const USDT = new Token(ChainId.MAINNET, '0x55d398326f99059ff775485246999027b3197955', 18, 'USDT', 'Tether USD')\nexport const EOS = new Token(ChainId.MAINNET, '0x56b6fb708fc5732dec1afc8d8556423a2edccbd6', 18, 'EOS', 'EOS Token')\nexport const DOT = new Token(ChainId.MAINNET, '0x7083609fce4d1d8dc0c979aab8c869ea2c873402', 18, 'DOT', 'Polkadot Token')\nexport const ETH = new Token(ChainId.MAINNET, '0x1e33833a035069f42d68D1F53b341643De1C018D', 18, 'ETH', 'Ethereum Token')\nexport const BNB = new Token(ChainId.MAINNET, '0x1e33833a035069f42d68D1F53b341643De1C018D', 18, 'BNB', 'Binance token')\nexport const OWN = new Token(ChainId.MAINNET, '0x2170ed0880ac9a755fd29b2688956bd959f933f8', 18, 'OWN', 'Ownly Token') // to update\n\nconst WETH_ONLY: ChainTokenList = {\n  [ChainId.MAINNET]: [WETH[ChainId.MAINNET]],\n  [ChainId.BSCTESTNET]: [WETH[ChainId.BSCTESTNET]]\n}\n// used to construct intermediary pairs for trading\nexport const BASES_TO_CHECK_TRADES_AGAINST: ChainTokenList = {\n  ...WETH_ONLY,\n  [ChainId.MAINNET]: [...WETH_ONLY[ChainId.MAINNET], DAI, BUSD, USDT, EOS, DOT]\n}\n\n/**\n * Some tokens can only be swapped via certain pairs, so we override the list of bases that are considered for these\n * tokens.\n */\nexport const CUSTOM_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\n  [ChainId.MAINNET]: {\n    [ETH.address]: [DAI, WETH[ChainId.MAINNET]]\n  }\n}\n\n// used for display in the default list when adding liquidity\nexport const SUGGESTED_BASES: ChainTokenList = {\n  ...WETH_ONLY,\n  [ChainId.MAINNET]: [...WETH_ONLY[ChainId.MAINNET], DAI, BUSD, USDT]\n}\n\n// used to construct the list of all pairs we consider by default in the frontend\nexport const BASES_TO_TRACK_LIQUIDITY_FOR: ChainTokenList = {\n  ...WETH_ONLY,\n  [ChainId.MAINNET]: [...WETH_ONLY[ChainId.MAINNET], DAI, BUSD, USDT]\n}\n\nexport const PINNED_PAIRS: { readonly [chainId in ChainId]?: [Token, Token][] } = {\n  [ChainId.MAINNET]: [\n    [\n      new Token(ChainId.MAINNET, '0xC3440c10c4F36f354eB591B19FafB4906d449B75', 18, 'SRKb', 'SparkPoint Token'),\n      new Token(ChainId.MAINNET, '0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c', 18, 'WBNB', 'Wrapped BNB')\n    ],\n    [BUSD, USDT],\n    [DAI, USDT]\n  ]\n}\n\nexport interface WalletInfo {\n  connector?: AbstractConnector\n  name: string\n  iconName: string\n  description: string\n  href: string | null\n  color: string\n  primary?: true\n  mobile?: true\n  mobileOnly?: true\n}\n\nexport const SUPPORTED_WALLETS: { [key: string]: WalletInfo } = {\n  BSC: {\n    connector: bsc,\n    name: 'Binance Chain Wallet',\n    iconName: 'binance.svg',\n    description: 'Easy-to-use browser extension.',\n    href: null,\n    color: '#E8831D'\n  },\n  INJECTED: {\n    connector: injected,\n    name: 'Injected',\n    iconName: 'arrow-right.svg',\n    description: 'Injected web3 provider.',\n    href: null,\n    color: '#010101',\n    primary: true\n  },\n  METAMASK: {\n    connector: injected,\n    name: 'MetaMask',\n    iconName: 'metamask.png',\n    description: 'Easy-to-use browser extension.',\n    href: null,\n    color: '#E8831D'\n  },\n  WALLET_CONNECT: {\n    connector: walletconnect,\n    name: 'WalletConnect',\n    iconName: 'walletConnectIcon.svg',\n    description: 'Connect to Trust Wallet, Rainbow Wallet and more...',\n    href: null,\n    color: '#4196FC',\n    mobile: true\n  },\n  // WALLET_LINK: {\n  //   connector: walletlink,\n  //   name: 'Coinbase Wallet',\n  //   iconName: 'coinbaseWalletIcon.svg',\n  //   description: 'Use Coinbase Wallet app on mobile device',\n  //   href: null,\n  //   color: '#315CF5'\n  // },\n  // COINBASE_LINK: {\n  //   name: 'Open in Coinbase Wallet',\n  //   iconName: 'coinbaseWalletIcon.svg',\n  //   description: 'Open in Coinbase Wallet app.',\n  //   href: 'https://go.cb-w.com/mtUDhEZPy1',\n  //   color: '#315CF5',\n  //   mobile: true,\n  //   mobileOnly: true\n  // },\n  // FORTMATIC: {\n  //   connector: fortmatic,\n  //   name: 'Fortmatic',\n  //   iconName: 'fortmaticIcon.png',\n  //   description: 'Login using Fortmatic hosted wallet',\n  //   href: null,\n  //   color: '#6748FF',\n  //   mobile: true\n  // },\n  // Portis: {\n  //   connector: portis,\n  //   name: 'Portis',\n  //   iconName: 'portisIcon.png',\n  //   description: 'Login using Portis hosted wallet',\n  //   href: null,\n  //   color: '#4A6C9B',\n  //   mobile: true\n  // }\n}\n\nexport const NetworkContextName = 'NETWORK'\n\n// default allowed slippage, in bips\n// export const INITIAL_ALLOWED_SLIPPAGE = 80\n// 20 minutes, denominated in seconds\n// export const DEFAULT_DEADLINE_FROM_NOW = 60 * 20\n\n// one basis point\n// export const ONE_BIPS = new Percent(JSBI.BigInt(1), JSBI.BigInt(10000))\n// export const BIPS_BASE = JSBI.BigInt(10000)\n// used for warning states\n// export const ALLOWED_PRICE_IMPACT_LOW: Percent = new Percent(JSBI.BigInt(100), BIPS_BASE) // 1%\n// export const ALLOWED_PRICE_IMPACT_MEDIUM: Percent = new Percent(JSBI.BigInt(300), BIPS_BASE) // 3%\n// export const ALLOWED_PRICE_IMPACT_HIGH: Percent = new Percent(JSBI.BigInt(500), BIPS_BASE) // 5%\n// // if the price slippage exceeds this number, force the user to type 'confirm' to execute\n// export const PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN: Percent = new Percent(JSBI.BigInt(1000), BIPS_BASE) // 10%\n// // for non expert mode disable swaps above this\n// export const BLOCKED_PRICE_IMPACT_NON_EXPERT: Percent = new Percent(JSBI.BigInt(1500), BIPS_BASE) // 15%\n\n// // used to ensure the user doesn't send so much ETH so they end up with <.01\n// export const MIN_ETH: JSBI = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(16)) // .01 ETH\n// export const BETTER_TRADE_LINK_THRESHOLD = new Percent(JSBI.BigInt(75), JSBI.BigInt(10000))\n","import { ChainId } from '@sparkpointio/sparkswap-sdk'\nimport { FortmaticConnector as FortmaticConnectorCore } from '@web3-react/fortmatic-connector'\n\nexport const OVERLAY_READY = 'OVERLAY_READY'\n\ntype FormaticSupportedChains = Extract<ChainId, ChainId.MAINNET | ChainId.BSCTESTNET>\n\nconst CHAIN_ID_NETWORK_ARGUMENT: { readonly [chainId in FormaticSupportedChains]: string | undefined } = {\n  [ChainId.MAINNET]: undefined,\n  [ChainId.BSCTESTNET]: 'Bsc-testnet'\n}\n\nexport class FortmaticConnector extends FortmaticConnectorCore {\n  async activate() {\n    if (!this.fortmatic) {\n      const { default: Fortmatic } = await import('fortmatic')\n\n      const { apiKey, chainId } = this as any\n      if (chainId in CHAIN_ID_NETWORK_ARGUMENT) {\n        this.fortmatic = new Fortmatic(apiKey, CHAIN_ID_NETWORK_ARGUMENT[chainId as FormaticSupportedChains])\n      } else {\n        throw new Error(`Unsupported network ID: ${chainId}`)\n      }\n    }\n\n    const provider = this.fortmatic.getProvider()\n\n    const pollForOverlayReady: Promise<void> = new Promise(resolve => {\n      const interval = setInterval(() => {\n        if (provider.overlayReady) {\n          clearInterval(interval)\n          this.emit(OVERLAY_READY)\n          resolve()\n        }\n      }, 200)\n    })\n\n    const [account] = await Promise.all([\n      provider.enable().then((accounts: string[]) => accounts[0]),\n      pollForOverlayReady\n    ])\n\n    return { provider: this.fortmatic.getProvider(), chainId: (this as any).chainId, account }\n  }\n}\n","import { ConnectorUpdate } from '@web3-react/types'\nimport { AbstractConnector } from '@web3-react/abstract-connector'\nimport invariant from 'tiny-invariant'\n\ninterface NetworkConnectorArguments {\n  urls: { [chainId: number]: string }\n  defaultChainId?: number\n}\n\n// taken from ethers.js, compatible interface with web3 provider\ntype AsyncSendable = {\n  isMetaMask?: boolean\n  host?: string\n  path?: string\n  sendAsync?: (request: any, callback: (error: any, response: any) => void) => void\n  send?: (request: any, callback: (error: any, response: any) => void) => void\n}\n\nclass RequestError extends Error {\n  constructor(message: string, public code: number, public data?: unknown) {\n    super(message)\n  }\n}\n\ninterface BatchItem {\n  request: { jsonrpc: '2.0'; id: number; method: string; params: unknown }\n  resolve: (result: any) => void\n  reject: (error: Error) => void\n}\n\nclass MiniRpcProvider implements AsyncSendable {\n  public readonly isMetaMask: false = false\n\n  public readonly chainId: number\n\n  public readonly url: string\n\n  public readonly host: string\n\n  public readonly path: string\n\n  public readonly batchWaitTimeMs: number\n\n  private nextId = 1\n\n  private batchTimeoutId: ReturnType<typeof setTimeout> | null = null\n\n  private batch: BatchItem[] = []\n\n  constructor(chainId: number, url: string, batchWaitTimeMs?: number) {\n    this.chainId = chainId\n    this.url = url\n    const parsed = new URL(url)\n    this.host = parsed.host\n    this.path = parsed.pathname\n    // how long to wait to batch calls\n    this.batchWaitTimeMs = batchWaitTimeMs ?? 50\n  }\n\n  public readonly clearBatch = async () => {\n    console.info('Clearing batch', this.batch)\n    const { batch } = this\n    this.batch = []\n    this.batchTimeoutId = null\n    let response: Response\n    try {\n      response = await fetch(this.url, {\n        method: 'POST',\n        headers: { 'content-type': 'application/json', accept: 'application/json' },\n        body: JSON.stringify(batch.map((item) => item.request)),\n      })\n    } catch (error) {\n      batch.forEach(({ reject }) => reject(new Error('Failed to send batch call')))\n      return\n    }\n\n    if (!response.ok) {\n      batch.forEach(({ reject }) => reject(new RequestError(`${response.status}: ${response.statusText}`, -32000)))\n      return\n    }\n\n    let json\n    try {\n      json = await response.json()\n    } catch (error) {\n      batch.forEach(({ reject }) => reject(new Error('Failed to parse JSON response')))\n      return\n    }\n    const byKey = batch.reduce<{ [id: number]: BatchItem }>((memo, current) => {\n      memo[current.request.id] = current\n      return memo\n    }, {})\n    // eslint-disable-next-line no-restricted-syntax\n    for (const result of json) {\n      const {\n        resolve,\n        reject,\n        request: { method },\n      } = byKey[result.id]\n      if (resolve) {\n        if ('error' in result) {\n          reject(new RequestError(result?.error?.message, result?.error?.code, result?.error?.data))\n        } else if ('result' in result) {\n          resolve(result.result)\n        } else {\n          reject(new RequestError(`Received unexpected JSON-RPC response to ${method} request.`, -32000, result))\n        }\n      }\n    }\n  }\n\n  public readonly sendAsync = (\n    request: { jsonrpc: '2.0'; id: number | string | null; method: string; params?: any },\n    callback: (error: any, response: any) => void\n  ): void => {\n    this.request(request.method, request.params)\n      .then((result) => callback(null, { jsonrpc: '2.0', id: request.id, result }))\n      .catch((error) => callback(error, null))\n  }\n\n  public readonly request = async (\n    method: string | { method: string; params: unknown[] },\n    params?: any\n  ): Promise<unknown> => {\n    if (typeof method !== 'string') {\n      return this.request(method.method, method.params)\n    }\n    if (method === 'eth_chainId') {\n      return `0x${this.chainId.toString(16)}`\n    }\n    const promise = new Promise((resolve, reject) => {\n      this.batch.push({\n        request: {\n          jsonrpc: '2.0',\n          id: this.nextId++,\n          method,\n          params,\n        },\n        resolve,\n        reject,\n      })\n    })\n    this.batchTimeoutId = this.batchTimeoutId ?? setTimeout(this.clearBatch, this.batchWaitTimeMs)\n    return promise\n  }\n}\n\nexport class NetworkConnector extends AbstractConnector {\n  private readonly providers: { [chainId: number]: MiniRpcProvider }\n\n  private currentChainId: number\n\n  constructor({ urls, defaultChainId }: NetworkConnectorArguments) {\n    invariant(defaultChainId || Object.keys(urls).length === 1, 'defaultChainId is a required argument with >1 url')\n    super({ supportedChainIds: Object.keys(urls).map((k): number => Number(k)) })\n\n    this.currentChainId = defaultChainId || Number(Object.keys(urls)[0])\n    this.providers = Object.keys(urls).reduce<{ [chainId: number]: MiniRpcProvider }>((accumulator, chainId) => {\n      accumulator[Number(chainId)] = new MiniRpcProvider(Number(chainId), urls[Number(chainId)])\n      return accumulator\n    }, {})\n  }\n\n  public get provider(): MiniRpcProvider {\n    return this.providers[this.currentChainId]\n  }\n\n  public async activate(): Promise<ConnectorUpdate> {\n    return { provider: this.providers[this.currentChainId], chainId: this.currentChainId, account: null }\n  }\n\n  public async getProvider(): Promise<MiniRpcProvider> {\n    return this.providers[this.currentChainId]\n  }\n\n  public async getChainId(): Promise<number> {\n    return this.currentChainId\n  }\n\n  public async getAccount(): Promise<null> {\n    return null\n  }\n\n  public deactivate() {\n    return null\n  }\n}\n\nexport default NetworkConnector\n","import { AbstractConnectorArguments, ConnectorUpdate } from '@web3-react/types'\nimport { AbstractConnector } from '@web3-react/abstract-connector'\nimport warning from 'tiny-warning'\n\nimport { SendReturnResult, SendReturn, Send, SendOld } from './types'\n\nfunction parseSendReturn(sendReturn: SendReturnResult | SendReturn): any {\n  // eslint-disable-next-line no-prototype-builtins\n  return sendReturn.hasOwnProperty('result') ? sendReturn.result : sendReturn\n}\n\nexport class NoBscProviderError extends Error {\n  public constructor() {\n    super()\n    this.name = this.constructor.name\n    this.message = 'No BSC provider was found on window.BinanceChain.'\n  }\n}\n\nexport class UserRejectedRequestError extends Error {\n  public constructor() {\n    super()\n    this.name = this.constructor.name\n    this.message = 'The user rejected the request.'\n  }\n}\n\nexport class BscConnector extends AbstractConnector {\n  constructor(kwargs: AbstractConnectorArguments) {\n    super(kwargs)\n\n    this.handleNetworkChanged = this.handleNetworkChanged.bind(this)\n    this.handleChainChanged = this.handleChainChanged.bind(this)\n    this.handleAccountsChanged = this.handleAccountsChanged.bind(this)\n    this.handleClose = this.handleClose.bind(this)\n  }\n\n  private handleChainChanged(chainId: string | number): void {\n    this.emitUpdate({ chainId, provider: window.BinanceChain })\n  }\n\n  private handleAccountsChanged(accounts: string[]): void {\n    if (accounts.length === 0) {\n      this.emitDeactivate()\n    } else {\n      this.emitUpdate({ account: accounts[0] })\n    }\n  }\n\n  private handleClose(): void {\n    this.emitDeactivate()\n  }\n\n  private handleNetworkChanged(networkId: string | number): void {\n    this.emitUpdate({ chainId: networkId, provider: window.BinanceChain })\n  }\n\n  public async activate(): Promise<ConnectorUpdate> {\n    if (!window.BinanceChain) {\n      throw new NoBscProviderError()\n    }\n\n    if (window.BinanceChain.on) {\n      window.BinanceChain.on('chainChanged', this.handleChainChanged)\n      window.BinanceChain.on('accountsChanged', this.handleAccountsChanged)\n      window.BinanceChain.on('close', this.handleClose)\n      window.BinanceChain.on('networkChanged', this.handleNetworkChanged)\n    }\n\n    if ((window.BinanceChain as any).isMetaMask) {\n      (window.BinanceChain as any).autoRefreshOnNetworkChange = false\n    }\n\n    // try to activate + get account via eth_requestAccounts\n    let account\n    try {\n      account = await (window.BinanceChain.send as Send)('eth_requestAccounts').then(\n        (sendReturn) => parseSendReturn(sendReturn)[0]\n      )\n    } catch (error) {\n      if ((error as any).code === 4001) {\n        throw new UserRejectedRequestError()\n      }\n      warning(false, 'eth_requestAccounts was unsuccessful, falling back to enable')\n    }\n\n    // if unsuccessful, try enable\n    if (!account) {\n      // if enable is successful but doesn't return accounts, fall back to getAccount (not happy i have to do this...)\n      account = await window.BinanceChain.enable().then((sendReturn) => sendReturn && parseSendReturn(sendReturn)[0])\n    }\n\n    return { provider: window.BinanceChain, ...(account ? { account } : {}) }\n  }\n\n  public async getProvider(): Promise<any> {\n    return window.BinanceChain\n  }\n\n  public async getChainId(): Promise<number | string> {\n    if (!window.BinanceChain) {\n      throw new NoBscProviderError()\n    }\n\n    let chainId\n    try {\n      chainId = await (window.BinanceChain.send as Send)('eth_chainId').then(parseSendReturn)\n    } catch {\n      warning(false, 'eth_chainId was unsuccessful, falling back to net_version')\n    }\n\n    if (!chainId) {\n      try {\n        chainId = await (window.BinanceChain.send as Send)('net_version').then(parseSendReturn)\n      } catch {\n        warning(false, 'net_version was unsuccessful, falling back to net version v2')\n      }\n    }\n\n    if (!chainId) {\n      try {\n        chainId = parseSendReturn((window.BinanceChain.send as SendOld)({ method: 'net_version' }))\n      } catch {\n        warning(false, 'net_version v2 was unsuccessful, falling back to manual matches and static properties')\n      }\n    }\n\n    if (!chainId) {\n      if ((window.BinanceChain as any).isDapper) {\n        chainId = parseSendReturn((window.BinanceChain as any).cachedResults.net_version)\n      } else {\n        chainId =\n          (window.BinanceChain as any).chainId ||\n          (window.BinanceChain as any).netVersion ||\n          (window.BinanceChain as any).networkVersion ||\n          (window.BinanceChain as any)._chainId\n      }\n    }\n\n    return chainId\n  }\n\n  public async getAccount(): Promise<null | string> {\n    if (!window.BinanceChain) {\n      throw new NoBscProviderError()\n    }\n\n    let account\n    try {\n      account = await (window.BinanceChain.send as Send)('eth_accounts').then(\n        (sendReturn) => parseSendReturn(sendReturn)[0]\n      )\n    } catch {\n      warning(false, 'eth_accounts was unsuccessful, falling back to enable')\n    }\n\n    if (!account) {\n      try {\n        account = await window.BinanceChain.enable().then((sendReturn) => parseSendReturn(sendReturn)[0])\n      } catch {\n        warning(false, 'enable was unsuccessful, falling back to eth_accounts v2')\n      }\n    }\n\n    if (!account) {\n      account = parseSendReturn((window.BinanceChain.send as SendOld)({ method: 'eth_accounts' }))[0]\n    }\n\n    return account\n  }\n\n  public deactivate() {\n    if (window.BinanceChain && window.BinanceChain.removeListener) {\n      window.BinanceChain.removeListener('chainChanged', this.handleChainChanged)\n      window.BinanceChain.removeListener('accountsChanged', this.handleAccountsChanged)\n      window.BinanceChain.removeListener('close', this.handleClose)\n      window.BinanceChain.removeListener('networkChanged', this.handleNetworkChanged)\n    }\n  }\n\n  public async isAuthorized(): Promise<boolean> {\n    if (!window.BinanceChain) {\n      return false\n    }\n\n    try {\n      return await (window.BinanceChain.send as Send)('eth_accounts').then((sendReturn) => {\n        if (parseSendReturn(sendReturn).length > 0) {\n          return true\n        }\n        return false\n      })\n    } catch {\n      return false\n    }\n  }\n}\n","import { Web3Provider } from '@ethersproject/providers'\nimport { InjectedConnector } from '@web3-react/injected-connector'\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\nimport { WalletLinkConnector } from '@web3-react/walletlink-connector'\nimport { PortisConnector } from '@web3-react/portis-connector'\n\nimport { FortmaticConnector } from './Fortmatic'\nimport { NetworkConnector } from './NetworkConnector'\nimport { BscConnector } from './bsc/bscConnector'\n\nconst NETWORK_URL = process.env.REACT_APP_NETWORK_URL\nconst FORMATIC_KEY = process.env.REACT_APP_FORTMATIC_KEY\nconst PORTIS_ID = process.env.REACT_APP_PORTIS_ID\n\nexport const NETWORK_CHAIN_ID: number = parseInt(process.env.REACT_APP_CHAIN_ID ?? '1')\n\nif (typeof NETWORK_URL === 'undefined') {\n  throw new Error(`REACT_APP_NETWORK_URL must be a defined environment variable`)\n}\n\nexport const network = new NetworkConnector({\n  urls: { [NETWORK_CHAIN_ID]: NETWORK_URL },\n})\n\nlet networkLibrary: Web3Provider | undefined\nexport function getNetworkLibrary(): Web3Provider {\n  // eslint-disable-next-line no-return-assign\n  return (networkLibrary = networkLibrary ?? new Web3Provider(network.provider as any))\n}\n\nexport const injected = new InjectedConnector({\n  supportedChainIds: [56, 97],\n})\n\nexport const bsc = new BscConnector({ supportedChainIds: [56, 97] })\n\n// mainnet only\nexport const walletconnect = new WalletConnectConnector({\n  rpc: { [NETWORK_CHAIN_ID]: NETWORK_URL },\n  bridge: 'https://bridge.walletconnect.org',\n  qrcode: true,\n  pollingInterval: 15000,\n})\n\n// mainnet only\nexport const fortmatic = new FortmaticConnector({\n  apiKey: FORMATIC_KEY ?? '',\n  chainId: 1,\n})\n\n// mainnet only\nexport const portis = new PortisConnector({\n  dAppId: PORTIS_ID ?? '',\n  networks: [1],\n})\n\n// mainnet only\nexport const walletlink = new WalletLinkConnector({\n  url: NETWORK_URL,\n  appName: 'Uniswap',\n  appLogoUrl:\n    'https://mpng.pngfly.com/20181202/bex/kisspng-emoji-domain-unicorn-pin-badges-sticker-unicorn-tumblr-emoji-unicorn-iphoneemoji-5c046729264a77.5671679315437924251569.jpg',\n})\n","import React, { useState } from 'react'\nimport { ThemeProvider as SCThemeProvider } from 'styled-components'\nimport { light, dark } from '@sparkpointio/sparkswap-uikit'\n\nconst CACHE_KEY = 'IS_DARK'\n\nexport interface ThemeContextType {\n  isDark: boolean;\n  toggleTheme: () => void;\n}\n\nconst ThemeContext = React.createContext<ThemeContextType>({ isDark: true, toggleTheme: () => null })\n\nconst customColorsCollections = { \n  customColors: {\n    BG1: '#00071e',\n    BG2: light.colors.card\n  }\n}\nconst ThemeContextProvider: React.FC = ({ children }) => {\n  const [isDark, setIsDark] = useState(() => {\n    const isDarkUserSetting = localStorage.getItem(CACHE_KEY)\n    return isDarkUserSetting ? JSON.parse(isDarkUserSetting) : true\n  })\n\n  const toggleTheme = () => {\n    setIsDark((prevState: any) => {\n      localStorage.setItem(CACHE_KEY, JSON.stringify(!prevState))\n      return !prevState\n    })\n  }\n\n  return (\n    <ThemeContext.Provider value={{ isDark, toggleTheme }}>\n      <SCThemeProvider theme={isDark ? dark : light}>\n          {children}\n      </SCThemeProvider>\n    </ThemeContext.Provider>\n  )\n}\n\ninterface CustomColorsType {\n  BG1: string\n  BG2: string\n}\n\ninterface CustomThemeType {\n  customColors?: CustomColorsType;\n}\nexport const CustomThemeContext = React.createContext<CustomThemeType>({})\n\nconst CustomThemeContextProvider: React.FC = ({ children }) => {\n  const [isDark, setIsDark] = useState(() => {\n    const isDarkUserSetting = localStorage.getItem(CACHE_KEY)\n    return isDarkUserSetting ? JSON.parse(isDarkUserSetting) : true\n  })\n\n  const toggleTheme = () => {\n    setIsDark((prevState: any) => {\n      localStorage.setItem(CACHE_KEY, JSON.stringify(!prevState))\n      return !prevState\n    })\n  }\n\n  return (\n    <CustomThemeContext.Provider value={customColorsCollections}>\n      {children}\n    </CustomThemeContext.Provider>\n  )\n}\n\nexport { ThemeContext, ThemeContextProvider, CustomThemeContextProvider }"],"sourceRoot":""}