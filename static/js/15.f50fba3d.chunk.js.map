{"version":3,"sources":["components/NumericalInput/index.tsx","components/Row/index.tsx","components/CurrencyInputPanel/index.tsx","hooks/Priceperbnb.ts","components/Modals/PurchaseModal.tsx","state/tokens/hooks.ts","pages/Launchpad/Project/styled.ts","pages/Launchpad/Project/FooterDetails.tsx","pages/Launchpad/Project/ProjectComponent.tsx","pages/Launchpad/Project/Layout.tsx"],"names":["StyledInput","styled","input","error","theme","colors","failure","text","align","textSubtle","inputRegex","RegExp","Input","React","memo","value","onUserInput","placeholder","rest","onChange","event","nextUserInput","target","replace","test","escapeRegExp","inputMode","title","autoComplete","autoCorrect","type","pattern","minLength","maxLength","spellCheck","Row","Box","padding","border","borderRadius","RowBetween","InputRow","div","gap","justify","Aligner","button","selected","darken","span","InputPanel","hideInput","background","Container","shadows","inset","CurrencyInputPanel","onMax","showMaxButton","label","currency","remainingSupply","hideBalance","id","showCommonBases","useState","setModalOpen","account","useWeb3React","useContext","ThemeContext","useCallback","fontSize","style","src","process","symbol","toLowerCase","size","length","slice","className","onClick","variant","maxWidth","width","display","cursor","Priceperbnb","data","setData","loading","setLoading","err","setError","useEffect","a","axios","get","res","conversions","bnb","usd","console","log","ToastTitle","Text","StyledHeading","ActionDiv","Flex","PurchaseModal","onDismiss","address","library","useActiveWeb3React","contract","useOwnlyLaunchpad","project","useFindProjectByAddress","token","useAppSelector","state","tokens","find","t","useSelectToken","buyingCoin","setInput","output","setOutput","balance","TokenAmount","BNB","BigInt","amount","OWN","maxPayableAmount","rewardedAmount","redeemed","whitelist","accountDetails","setAccountDetails","tokenRate","setTokenRate","remainingExpendable","setRemainingExpendable","remainingPurchasable","setRemainingPurchasable","calculateInput","tokenAmount","calculatedInput","expandValue","multiply","toFixed","toExact","calculateOutput","calculatedOutput","divide","validateInput","greaterThan","validateOutput","SuccessMessage","tx","hash","link","alignItems","flexDirection","href","textDecoration","color","primary","handleBuy","buyTokens","toast","success","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","getAccountDetailsLaunchPad","then","r","code","message","position","getWhitelist","details","_maxPayableAmount","_rewardedAmount","subtract","getRemainingPurchasable","remainingP","match","marginBottom","marginTop","bold","maxInput","maxOutput","fullWidth","CCont","Card","CHeader","CardHeader","TokenImage","img","SmalltokenImage","CBody","CardBody","StyledButton","Button","CustomDataGroup","DataGroup","CFooter","TableDiv","TBHeader","TBBody","TextDescription","NavOptions","activeIndex","FooterNav","handleClick","CustomThemeContext","margin","AllocationSection","justifyContent","FooterDetails","pool","customTheme","setActive","open","close","cap","totalUserParticipated","totalFundsSwapped","i","useLaunchpadContract","category","totalForSaleTokens","totalSoldTokens","remainingForSale","totalSales","expectedSales","percentage","totalParticipants","stats","setStats","calculateLaunchpadStats","parseFloat","backgroundColor","isDark","customColors","BG1","BG2","borderBottom","flex","marginRight","marginLeft","ownSale","toLocaleString","Allocations","tokenImage","allocation","srcs","alt","ActionCard","whiteListed","Paddress","useFindProject","useModal","onPurchaseModal","sellingCoin","maxExpendable","catch","progress","as","name","primaryStep","image","ProjectComponent","setWhiteList","acc","useAccountWhiteList","useGetPoolsByAddress","longDesc","longDesc2","longDesc3","socMeds","wallpaperBg","status","history","useHistory","STATE","active","push","srcsBg","fill","SvgIcon","Icon","MediumIcon","upcoming","BackButton","Link","Layout","ProjectAddress","params","setProject","projects","p","Page","minHeight","to"],"mappings":"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","file":"static/js/15.f50fba3d.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { escapeRegExp } from '../../utils'\n\nconst StyledInput = styled.input<{ error?: boolean; fontSize?: string; align?: string }>`\n  color: ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.text)};\n  width: 0;\n  position: relative;\n  font-weight: 500;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  background-color: transparent;\n  font-size: 16px;\n  text-align: ${({ align }) => align && align};\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  padding: 0px;\n  -webkit-appearance: textfield;\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n  [type='number'] {\n    -moz-appearance: textfield;\n  }\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textSubtle};\n  }\n`\n\nconst inputRegex = RegExp(`^\\\\d*(?:\\\\\\\\[.])?\\\\d*$`) // match escaped \".\" characters via in a non-capturing group\n\nexport const Input = React.memo(function InnerInput({\n  value,\n  onUserInput,\n  placeholder,\n  ...rest\n}: {\n  value: string | number\n  onUserInput: (input: string) => void\n  error?: boolean\n  fontSize?: string\n  align?: 'right' | 'left'\n} & Omit<React.HTMLProps<HTMLInputElement>, 'ref' | 'onChange' | 'as'>) {\n  const enforcer = (nextUserInput: string) => {\n    if (nextUserInput === '' || inputRegex.test(escapeRegExp(nextUserInput))) {\n      onUserInput(nextUserInput)\n    }\n  }\n\n  return (\n    <StyledInput\n      {...rest}\n      value={value}\n      onChange={event => {\n        // replace commas with periods, because uniswap exclusively uses period as the decimal separator\n        enforcer(event.target.value.replace(/,/g, '.'))\n      }}\n      // universal input options\n      inputMode=\"decimal\"\n      title=\"Token Amount\"\n      autoComplete=\"off\"\n      autoCorrect=\"off\"\n      // text-specific options\n      type=\"text\"\n      pattern=\"^[0-9]*[.,]?[0-9]*$\"\n      placeholder={placeholder || '0.0'}\n      minLength={1}\n      maxLength={79}\n      spellCheck=\"false\"\n    />\n  )\n})\n\nexport default Input\n","import styled from 'styled-components'\nimport { Box } from 'rebass/styled-components'\n\nconst Row = styled(Box)<{ align?: string; padding?: string; border?: string; borderRadius?: string }>`\n  width: 100%;\n  display: flex;\n  padding: 0;\n  align-items: ${({ align }) => (align || 'center')};\n  padding: ${({ padding }) => padding};\n  border: ${({ border }) => border};\n  border-radius: ${({ borderRadius }) => borderRadius};\n`\n\nexport const RowBetween = styled(Row)`\n  justify-content: space-between;\n  margin: 4px 0 4px 0;\n`\nexport const RowFlat = styled.div`\n  display: flex;\n  align-items: flex-end;\n`\n\nexport const AutoRow = styled(Row)<{ gap?: string; justify?: string }>`\n  flex-wrap: wrap;\n  margin: ${({ gap }) => gap && `-${gap}`};\n  justify-content: ${({ justify }) => justify && justify};\n  & > * {\n    margin: ${({ gap }) => gap} !important;\n  }\n`\n\nexport const RowFixed = styled(Row)<{ gap?: string; justify?: string }>`\n  width: fit-content;\n  margin: ${({ gap }) => gap && `-${gap}`};\n`\n\nexport default Row\n","import React, { useState, useCallback, useContext } from 'react'\nimport { Button, ChevronDownIcon, Dropdown, Text } from '@sparkpointio/sparkswap-uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport styled, { ThemeContext } from 'styled-components'\nimport { darken } from 'polished'\nimport { IProjects, ITokens } from 'config/constants/type'\nimport { StyledImage } from 'pages/Launchpad/components/styled'\nimport { Currency } from 'components/types'\nimport { Input as NumericalInput } from '../NumericalInput'\nimport { RowBetween } from '../Row'\nimport CurrencyLogo from '../CurrencyLogo'\n\nimport useActiveWeb3React from '../../hooks/useActiveWeb3React'\n\nconst InputRow = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  padding: 0.75rem 0.75rem 0.75rem 1rem;\n`\nconst CurrencySelect = styled.button<{ selected: boolean }>`\n  align-items: center;\n  height: 34px;\n  font-size: 16px;\n  font-weight: 500;\n  background-color: transparent;\n  color: ${({ selected, theme }) => (selected ? theme.colors.text : '#FFFFFF')};\n  border-radius: 12px;\n  outline: none;\n  cursor: pointer;\n  user-select: none;\n  border: none;\n  padding: 0 0.5rem;\n  :focus,\n  :hover {\n    background-color: ${({ theme }) => darken(0.05, theme.colors.input)};\n  }\n`\n\nconst LabelRow = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  color: ${({ theme }) => theme.colors.text};\n  font-size: 0.75rem;\n  line-height: 1rem;\n  padding: 0.75rem 1rem 0 1rem;\n  span:hover {\n    cursor: pointer;\n    color: ${({ theme }) => darken(0.2, theme.colors.textSubtle)};\n  }\n`\n\nconst Aligner = styled.span`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`\n\nconst InputPanel = styled.div<{ hideInput?: boolean }>`\n  display: flex;\n  flex-flow: column nowrap;\n  position: relative;\n  // border-radius: ${({ hideInput }) => (hideInput ? '8px' : '20px')};\n  // background-color: ${({ theme }) => theme.colors.background};\n  z-index: 1;\n`\n\nconst Container = styled.div<{ hideInput: boolean }>`\n  // border-radius: 16px;\n  background-color: ${({ theme }) => theme.colors.input};\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n`\n\n\ninterface CurrencyInputPanelProps {\n  value: string\n  onUserInput: (value: string) => void\n  onMax?: () => void\n  showMaxButton: boolean\n  label?: string\n  currency?: Currency | null\n  hideInput?: boolean\n  hideBalance?: boolean\n  remainingSupply?: string\n  id: string\n  showCommonBases?: boolean\n}\n\nexport default function CurrencyInputPanel({\n    value,\n    onUserInput,\n    onMax,\n    showMaxButton,\n    label,\n    currency,\n    remainingSupply = '',\n    hideBalance = false,\n    hideInput = false,\n    id,\n    showCommonBases,\n  }: CurrencyInputPanelProps) {\n    const [modalOpen, setModalOpen] = useState(false)\n    const { account } = useWeb3React()\n    // const selectedCurrencyBalance = useCurrencyBalance(account ?? undefined, currency ?? undefined)\n    const selectedCurrencyBalance = 22222\n    const theme = useContext(ThemeContext)\n    const handleDismissSearch = useCallback(() => {\n      setModalOpen(false)\n    }, [setModalOpen])\n\n    return (\n      <InputPanel id={id}>\n        <Text fontSize=\"14px\">{label}</Text>\n        <Container hideInput={hideInput}>\n          <InputRow style={hideInput ? { padding: '0', borderRadius: '8px' } : {}} >\n          <Aligner>\n                {/* <CurrencyLogo currency={currency} size=\"24px\" style={{ marginRight: '8px' }} /> */}\n                <StyledImage src={`${process.env.PUBLIC_URL}/images/icons/${currency?.symbol?.toLowerCase()}.png`} size=\"24px\" />\n                <Text>\n                {(currency && currency.symbol && currency.symbol.length > 20\n                    ? `${currency.symbol.slice(0, 4)}...${currency.symbol.slice(\n                        currency.symbol.length - 5,\n                        currency.symbol.length\n                      )}`\n                    : currency?.symbol)}\n                    &nbsp;\n                </Text>\n            </Aligner>\n            {!hideInput && (\n              <>\n                <NumericalInput\n                  className=\"token-amount-input\"\n                  value={value}\n                  onUserInput={onUserInput}\n                />\n                {account && currency && showMaxButton && (\n                  <Button onClick={onMax} size=\"sm\" variant=\"primary\" style={{maxWidth: '50px', width: '20%', fontSize: '14px'}}>\n                    MAX\n                  </Button>\n                )}\n              </>\n            )}\n          </InputRow>\n        </Container>\n        {!hideInput && (\n\n          <RowBetween>\n              {account && (\n                <Text onClick={onMax} fontSize=\"14px\" style={{ display: 'inline', cursor: 'pointer' }}>\n                  {!hideBalance && !!currency\n                    ? `Remaining: ${remainingSupply} ${currency.symbol}`\n                    : ' -'}\n\n                </Text>\n              )}\n          </RowBetween>\n\n        )}\n      </InputPanel>\n    )\n  }\n","import React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\n\nexport default function Priceperbnb() {\n    const [data, setData] = useState(null);\n    const [loading, setLoading] = useState(true);\n    const [err, setError] = useState(false)\n    useEffect(() => {\n        // fetch(\"https://wallet.sparkpoint.io/api/v2/wallet/conversionRates\")\n        //     .then((response) => {\n        //         if (response.ok) {\n        //             return response.json();\n        //         }\n        //         throw response;\n        //     })\n        (async () => {\n            try {\n                setLoading(true);\n                const res = await axios.get('https://wallet.sparkpoint.io/api/v2/wallet/conversionRates');\n                setData(res.data.conversions.bnb.usd)\n                setLoading(false)\n            }\n            catch(e){\n                setError(true);\n                console.log(e)\n            }\n        })()\n        \n    }, []);\n    if (loading) return \"Loading...\";\n    if (err) return \"Error...\";\n\n    return data;\n}\n\n","import React, { useCallback, useContext, useEffect, useState } from 'react';\nimport { useWeb3React } from '@web3-react/core';\nimport { TokenAmount } from '@sparkpointio/sparkswap-sdk';\nimport { ExternalLink } from 'react-feather';\nimport { parseUnits } from '@ethersproject/units';\nimport { toast } from 'react-toastify';\nimport { useFindProjectByAddress } from 'state/hooks';\nimport { useSelectToken } from 'state/tokens/hooks';\nimport CurrencyInputPanel from 'components/CurrencyInputPanel';\nimport { Button, Flex, Heading, Modal, Text } from '@sparkpointio/sparkswap-uikit';\nimport styled, { ThemeContext } from 'styled-components';\nimport { SmallstyledImage } from 'pages/Launchpad/components/styled';\nimport Priceperbnb from 'hooks/Priceperbnb';\nimport { useOwnlyLaunchpad } from '../../hooks/useContracts';\nimport { BNB, OWN } from '../../config';\nimport useActiveWeb3React from '../../hooks/useActiveWeb3React';\nimport { expandValue } from '../../utils';\nimport { getAccountDetailsLaunchPad } from '../../utils/contractHelpers';\n\n\n\n\ninterface AppProps {\n    onDismiss?: () => void;\n    address: string | null | undefined;\n}\n\nconst ToastTitle = styled(Text)`\n    color: #EAE2FC;\n    margin-bottom: 4px;\n`\nconst StyledHeading = styled(Text)`\n    color: ${({ theme }) => theme.colors.textSubtle};\n`;\nconst ActionDiv = styled(Flex)`\n    margin-top: 24px;\n    display: flex;\n    flex-direction: column;\n`;\n\nconst PurchaseModal: React.FC<AppProps> = ({ onDismiss, address }) => {\n    const { library } = useActiveWeb3React();\n    const { account } = useWeb3React();\n    const contract = useOwnlyLaunchpad();\n\n    const project = useFindProjectByAddress(address);\n    const token = useSelectToken(project.buyingCoin.address);\n\n    const [input, setInput] = useState('');\n    const [output, setOutput] = useState('');\n    const [accountDetails, setAccountDetails] = useState({\n        balance: new TokenAmount(BNB, BigInt(0)),\n        amount: new TokenAmount(OWN, BigInt(0)),\n        maxPayableAmount: new TokenAmount(OWN, BigInt(0)),\n        rewardedAmount: new TokenAmount(OWN, BigInt(0)),\n        redeemed: false,\n        whitelist: false\n    });\n\n    const [tokenRate, setTokenRate] = useState(new TokenAmount(OWN, BigInt(0)));\n    const [remainingExpendable, setRemainingExpendable] = useState(new TokenAmount(OWN, BigInt(0)));\n    const [remainingPurchasable, setRemainingPurchasable] = useState(new TokenAmount(OWN, BigInt(0)));\n\n    /**\n     * Sets the input amount and calculates the output\n     * @param value\n     */\n    const handleTypeInput = (value: string) => {\n        setInput(value);\n        let tokenAmount = new TokenAmount(BNB, expandValue(value, BNB));\n        tokenAmount = validateInput(tokenAmount);\n        calculateOutput(tokenAmount);\n    };\n\n    /**\n     * Sets the output amount and calculates the input\n     * @param value\n     */\n    const handleTypeOutput = (value: string) => {\n        setOutput(value);\n        let tokenAmount = new TokenAmount(OWN, expandValue(value, OWN));\n        tokenAmount = validateOutput(tokenAmount);\n        calculateInput(tokenAmount);\n    };\n\n    /**\n     * Calculates the input based on the output\n     * @param tokenAmount\n     */\n    const calculateInput = (tokenAmount) => {\n        const calculatedInput = new TokenAmount(BNB, expandValue(tokenAmount.multiply(tokenRate).toFixed(18), BNB));\n        setInput(calculatedInput.toExact());\n\n        return calculatedInput;\n    };\n\n    /**\n     * Calculates the output based on the input\n     * @param tokenAmount\n     */\n    const calculateOutput = (tokenAmount) => {\n        const calculatedOutput = new TokenAmount(BNB, expandValue(tokenAmount.divide(tokenRate).toFixed(18), OWN));\n        setOutput(calculatedOutput.toExact());\n\n        return calculatedOutput;\n    };\n\n    /**\n     * Validates if the input does not exceed remainingExpandable and equivalent output does not exceed remainingPurchasable\n     * @param tokenAmount\n     */\n    const validateInput = (tokenAmount) => {\n        const equivalentOutput = calculateOutput(tokenAmount);\n\n        if (equivalentOutput.greaterThan(remainingPurchasable)) {\n            tokenAmount = calculateInput(remainingPurchasable);\n            calculateOutput(tokenAmount)\n        }\n\n        return tokenAmount;\n    };\n\n    /**\n     * Validates if the output does not exceed remainingPurchasable and equivalent input does not exceed remainingExpandable\n     * @param tokenAmount\n     */\n    const validateOutput = (tokenAmount) => {\n        const equivalentInput = calculateInput(tokenAmount);\n\n        if (equivalentInput.greaterThan(remainingExpendable)) {\n            tokenAmount = calculateOutput(remainingExpendable);\n            calculateInput(tokenAmount);\n        }\n\n        return tokenAmount;\n    };\n\n    /**\n     * Sets and checks the max input\n     */\n    const handleMaxInput = () => {\n        let maxInput = remainingExpendable;\n\n        maxInput = validateInput(maxInput);\n\n        setInput(maxInput.toExact());\n    };\n\n    /**\n     * Sets and checks the max output\n     */\n    const handleMaxOutput = () => {\n        let maxOutput = remainingPurchasable;\n\n        maxOutput = validateOutput(maxOutput);\n\n        setOutput(maxOutput.toExact());\n    };\n\n    /**\n     * Initiates buy token\n     */\n\n    const SuccessMessage = ({tx, value, symbol}) => {\n        const theme = useContext(ThemeContext);\n        const { hash } = tx\n        const link = `https://testnet.bscscan.com/tx/${hash}`\n        return (\n            <Flex alignItems=\"center\" flexDirection=\"column\">\n                <ToastTitle>{`Successfully bought ~ ${value} ${symbol} tokens!`}</ToastTitle>\n                <a href={link} style={{fontSize:'12px', textDecoration: 'underline', color: theme.colors.primary}}>View on BscScan <ExternalLink size=\"12px\"/></a>\n            </Flex>\n        )\n    }\n\n    const handleBuy = async() => {\n        try {\n            const tx = await contract.buyTokens({value: expandValue(input, BNB)})\n            \n            toast.success(<SuccessMessage tx={tx} value={input} symbol={project.symbol}/>, {\n                autoClose: 5000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n            })\n            getAccountDetailsLaunchPad(contract, project, library, account).then((r) => setAccountDetails(r));\n        }\n        catch(e) {\n            const code = e.code;\n            const message = e.data ? e.data.message : e.message;\n            toast.error(`${code} ${message}`, {\n                position: 'top-right',\n                autoClose: 5000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n            });\n        }\n        // console.log(tx);\n        // console.log(`Buying successful ${tx}`)\n    };\n\n    useEffect(() => {\n        async function getRemainingPurchasable() {\n            const details = await contract.getWhitelist(account);\n            const maxPayableAmount = new TokenAmount(OWN, details._maxPayableAmount);\n            const rewardedAmount = new TokenAmount(OWN, details._rewardedAmount);\n            return maxPayableAmount.subtract(rewardedAmount);\n        }\n\n        const calc = (num) => {\n            return num.match(/^-?\\d+(?:\\.\\d{0,18})?/)[0]\n        }\n        \n\n        const calculateMaxExpendable = (remainingP) => {\n            return new TokenAmount(BNB, expandValue( calc(remainingP.multiply(tokenRate).toFixed(19)), OWN));\n        };\n\n        getAccountDetailsLaunchPad(contract, project, library, account).then((r) => setAccountDetails(r));\n        contract.tokenRate().then((r) => setTokenRate(new TokenAmount(OWN, r)));\n        getRemainingPurchasable().then((r) => {\n            setRemainingPurchasable(r);\n            setRemainingExpendable(calculateMaxExpendable(r));\n        });\n    }, [account, contract, library, input, output, tokenRate, project]);\n\n    return (\n        <Modal title=\"\" onDismiss={onDismiss}>\n            <div style={{ width: '400px', padding: '0px 24px 24px 24px' }}>\n                <div style={{ marginBottom: '24px', marginTop: '-24px' }}>\n                    <Heading bold fontSize=\"21px\">\n                        Swap Coins\n                    </Heading>\n                    <StyledHeading>{`Max. Allocation is ${accountDetails.maxPayableAmount.toExact()} ${project.symbol}`}</StyledHeading>\n                </div>\n                <CurrencyInputPanel\n                    label=\"From\"\n                    id=\"swap-input\"\n                    value={input}\n                    onUserInput={handleTypeInput}\n                    currency={token}\n                    showMaxButton\n                    onMax={handleMaxInput}\n                    remainingSupply={remainingExpendable.toExact()}\n                />\n                <CurrencyInputPanel\n                    showMaxButton\n                    onMax={handleMaxOutput}\n                    label=\"To\"\n                    id=\"swap-input\"\n                    value={output}\n                    onUserInput={handleTypeOutput}\n                    currency={project}\n                    remainingSupply={remainingPurchasable.toExact()}\n                />\n                {/* <Text>Price per BNB: {pricePerBnb}</Text> */}\n                {/* {fetchData.} */}\n                <Text>Price per BNB: <Priceperbnb/> USD</Text>\n\n                <ActionDiv>\n                    <Button onClick={handleBuy} fullWidth>\n                        Swap\n                    </Button>\n                </ActionDiv>\n                <ActionDiv>\n                    <Text>My Allocations</Text>\n                    <Flex alignItems=\"center\" marginTop=\"12px\">\n                        <SmallstyledImage src={`${process.env.PUBLIC_URL}/images/icons/${project?.symbol?.toLowerCase()}.png`} />\n                        <Text color=\"textSubtle\">{`${accountDetails.rewardedAmount.toExact()} ${project.symbol}`}</Text>\n                    </Flex>\n                </ActionDiv>\n            </div>\n        </Modal>\n    );\n};\n\nexport default PurchaseModal;\n","import { useAppSelector, useAppDispatch } from \"state/hooks\";\n\n\nexport const useAllTokens = () => useAppSelector((state) => state.tokens.data);\nexport const useSelectToken = (address: string | undefined) => useAppSelector((state) => state.tokens.data.find(t => t.address === address));","import styled from 'styled-components'\nimport { Card, CardHeader, CardBody, Button, Flex, Text} from '@sparkpointio/sparkswap-uikit';\nimport { SocmedGroup, ProgressGroup, DataGroup } from '../components/styled';\n\nexport const CCont = styled(Card)`\n    width: 100%;\n`;\nexport const CHeader = styled(CardHeader)<{ src?: string }>`\n    \n    display: flex;\n    align-items: center;\n    height: auto;\n    min-height: 10vh;\n    max-height: 15vh;\n    ${({ src }) => src &&`\n      background-image: url(${src});\n      background-repeat: no-repeat;\n      background-attachment: scroll;\n      background-position: 95% 15%;\n      background-size: cover;\n    `}\n`;\n\nexport const TokenImage = styled.img`\n    border-radius: 50%;\n    width: 60px;\n    height: 60px;\n    margin: 10px 15px;\n`;\n\nexport const SmalltokenImage = styled.img`\n    border-radius: 50%;\n    width: 30px;\n    height: 30px;\n    margin: 10px 15px;\n`;\n\nexport const CBody = styled(CardBody)`\n    padding: 20px;\n`;\n\nexport const StyledButton = styled(Button)`\n    cursor: context-menu;\n    height: 35px;\n    border-radius: 5px;\n`;\n\nexport const CustomDataGroup = styled(DataGroup)`\n    &:before {\n        content: '';\n        border-top: 5px solid ${({ theme }) => theme.colors.primary};\n        padding-top: 10px;\n        margin-bottom: 10px;\n    }\n    &:after {\n        content: '';\n        border-bottom: 5px solid ${({ theme }) => theme.colors.primary};\n        padding-bottom: 10px;\n        margin-top: 10px;\n    }\n`;\n\nexport const CFooter = styled(Flex)`\n    width: 100%;\n    min-height: 20vh;\n    height: auto;\n    padding: 25px;\n`;\n\nconst TableDiv = styled(Flex)`\n    width: 100%;\n    max-width: 720px;\n`\n\nexport const TBHeader = styled(TableDiv)``;\nexport const TBBody = styled(TableDiv)`\n    margin-top: 10px;\n`;\n\nexport const TextDescription = styled(Text)`\n    margin: 10px 5px\n`\n","import { Flex, Button, Heading, Text } from '@sparkpointio/sparkswap-uikit';\nimport { useWeb3React } from '@web3-react/core';\nimport { IPoolInformation, IProjects, ITokens } from 'config/constants/type';\nimport React, { useContext, useState, useCallback, useEffect } from 'react';\nimport styled, { ThemeContext } from 'styled-components';\nimport { CustomThemeContext } from 'ThemeContext';\nimport useActiveWeb3React from \"hooks/useActiveWeb3React\";\nimport {useLaunchpadContract} from \"hooks/useContracts\";\nimport {calculateLaunchpadStats, getAccountDetailsLaunchPad} from \"utils/contractHelpers\";\nimport { TBHeader, TBBody } from './styled';\n\n\nconst Container = styled(Flex)`\n    margin: 10px;\n    width: 100%;\n    height: auto;\n`;\n\nconst NavOptions = styled(Button)<{ activeIndex: boolean }>`\n    background-color: transparent;\n    color: ${({ theme, activeIndex }) => (activeIndex ? theme.colors.text : theme.colors.textSubtle)};\n    border-bottom: ${({ theme, activeIndex }) => activeIndex && `3px solid ${theme.colors.primary}`};\n`;\n\ninterface Stats { \n    totalForSaleTokens: string;\n    totalSoldTokens: string;\n    remainingForSale: string;\n    totalSales: string;\n    expectedSales: string;\n    percentage: string;\n    tokenRate: string;\n    totalParticipants: string;\n}\n\ntype AppProps = {\n    pool: IPoolInformation;\n    project: IProjects;\n    buyingToken?: ITokens;\n}\n\nconst FooterNav = ({ activeIndex = 0, handleClick}: { activeIndex?: number; handleClick: (i:number) => void }) => {\n    const theme = useContext(ThemeContext);\n    const customTheme = useContext(CustomThemeContext);\n    return (\n        <Flex alignItems=\"center\" style={{ margin: '10px 10px 0px 10px', padding: '20px 20px 0px 20px' }}>\n            <NavOptions activeIndex={activeIndex === 0} onClick={() => handleClick(0)}>Project Details</NavOptions>\n            {/* <NavOptions activeIndex={activeIndex === 1} onClick={() => handleClick(1)}>Schedule</NavOptions>\n            <NavOptions activeIndex={activeIndex === 2} onClick={() => handleClick(2)}>Your Allocation</NavOptions> */}\n        </Flex>\n    );\n};\n\nconst AllocationSection = () => {\n    return (\n        <Flex margin=\"20px\" padding=\"20px\" flexDirection=\"column\">\n            <TBHeader justifyContent=\"space-between\" >\n                <Text bold>No.</Text>\n                <Text bold>Token Allocation</Text>\n                <Text bold>Date</Text>\n                <Text bold>Token(s) claimed</Text>\n                <Text bold>Action</Text>\n            </TBHeader>\n            <TBBody justifyContent=\"space-between\" >\n                <Text color=\"textSubtle\">001</Text>\n                <Text color=\"textSubtle\">159662.6 OWN</Text>\n                <Text color=\"textSubtle\">06/24/2021</Text>\n                <Text color=\"textSubtle\">OWNLY</Text>\n                <Text color=\"textSubtle\">SWAP</Text>\n            </TBBody>\n        </Flex>\n    )\n}\n\nconst FooterDetails: React.FC<AppProps> = ({pool, project}) => {\n    const theme = useContext(ThemeContext);\n    const { account } = useWeb3React();\n    const customTheme = useContext(CustomThemeContext);\n    const [ activeIndex , setActive ] = useState<number>(0);\n    const { open, close, cap, totalUserParticipated, totalFundsSwapped } = pool;\n    const handleClick = useCallback((i) => {\n        setActive(i)\n    }, [])\n\n    const {library} = useActiveWeb3React();\n    const contract = useLaunchpadContract(project.category)\n    const [stats, setStats] = useState({\n        totalForSaleTokens: '-',\n        totalSoldTokens: '-',\n        remainingForSale: '-',\n        totalSales: '-',\n        expectedSales: '-',\n        percentage: '00.00',\n        tokenRate: '-',\n        totalParticipants: '-'\n    })\n\n    useEffect(() => {\n        calculateLaunchpadStats(contract, project).then(r => setStats(r));\n        // getAccountDetailsLaunchPad(contract, project, library, account).then(r => setAccountDetails(r)).catch(console.log)\n    }, [contract, project, account, library])\n    const totalSales = parseFloat(stats.totalSales).toFixed(4)\n    return (\n        <Container\n            style={{ backgroundColor: theme.isDark ? customTheme.customColors?.BG1 : customTheme.customColors?.BG2 }}\n            flexDirection=\"column\"\n        >\n            <div style={{ marginBottom: '10px', borderBottom: `1px solid ${theme.colors.primary}` }}>\n                <FooterNav handleClick={handleClick} activeIndex={activeIndex} />\n            </div>\n            { activeIndex === 0 && <Flex padding=\"20px\" margin=\"20px\" justifyContent=\"space-between\">\n                <Flex flex=\"1\" flexDirection=\"column\" marginRight=\"10px\">\n                    <Heading margin=\"10px 0px 30px 0\" bold>\n                        Pool Information\n                    </Heading>\n                    <Flex justifyContent=\"space-between\">\n                        <Text>Opens</Text>\n                        <Text color=\"textSubtle\">{open}</Text>\n                    </Flex>\n                    <Flex justifyContent=\"space-between\">\n                        <Text>Closes</Text>\n                        <Text color=\"textSubtle\">{close}</Text>\n                    </Flex>\n                    <Flex justifyContent=\"space-between\">\n                        <Text>Cap</Text>\n                        <Text color=\"textSubtle\">{stats.expectedSales} {project.buyingCoin.symbol}</Text>\n                    </Flex>\n                    <Flex justifyContent=\"space-between\">\n                        <Text>Total Users Participated</Text>\n                        <Text color=\"textSubtle\">{stats.totalParticipants}</Text>\n                    </Flex>\n                    <Flex justifyContent=\"space-between\">\n                        <Text>Total Funds Swapped</Text>\n                        <Text color=\"textSubtle\">{totalSales} {project.buyingCoin.symbol}</Text>\n                    </Flex>\n                </Flex>\n                <Flex flex=\"1\" marginLeft=\"10px\" flexDirection=\"column\">\n                    <Heading margin=\"10px 0px 30px 0px\" bold>\n                        Token Information\n                    </Heading>\n                    <Flex justifyContent=\"space-between\">\n                        <Text>Name</Text>\n                        <Text color=\"textSubtle\">{project.title}</Text>\n                    </Flex>\n                    <Flex justifyContent=\"space-between\">\n                        <Text>Token Symbol</Text>\n                        <Text color=\"textSubtle\">{project.symbol}</Text>\n                    </Flex>\n                    <Flex justifyContent=\"space-between\">\n                        <Text>Total Supply</Text>\n                        <Text color=\"textSubtle\">{project.ownSale.toLocaleString()}</Text>\n                    </Flex>\n                </Flex>\n            </Flex>\n            }\n            {\n                account && activeIndex === 2 && (\n                    <AllocationSection />\n                )\n            }\n        </Container>\n    );\n};\n\nexport default FooterDetails;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { useWeb3React } from '@web3-react/core';\nimport {TokenAmount} from \"@sparkpointio/sparkswap-sdk\";\nimport styled, { ThemeContext } from 'styled-components';\nimport { Globe, Twitter, Send } from 'react-feather';\nimport { useHistory } from 'react-router-dom';\nimport {\n    Card,\n    Flex,\n    Heading,\n    Button,\n    CardBody,\n    CardHeader,\n    Text,\n    Progress,\n    CardFooter,\n    useModal,\n} from '@sparkpointio/sparkswap-uikit';\nimport { useAccountWhiteList, useFindProjectByAddress, useGetPoolsByAddress, useFindProject } from 'state/hooks';\nimport { IProjects, ITokens, STATE } from 'config/constants/type';\nimport SvgIcon from 'components/SvgIcon';\nimport UnlockButton from 'components/ConnectWalletButton';\nimport { StyledHr2 as Divider } from 'components/Divider';\nimport PurchaseModal from 'components/Modals/PurchaseModal';\nimport { CustomThemeContext } from 'ThemeContext';\nimport { SocmedGroup, ProgressGroup } from '../components/styled';\nimport { ReactComponent as MediumIcon } from '../components/icons/MediumIcon.svg';\nimport Anchor from '../components/StyledLink';\nimport FooterDetails from './FooterDetails';\nimport { CCont, CHeader, TokenImage, SmalltokenImage, CBody, StyledButton, CustomDataGroup, CFooter, TextDescription } from './styled'\nimport {calculateLaunchpadStats, getAccountDetailsLaunchPad} from \"../../../utils/contractHelpers\";\nimport {useLaunchpadContract} from \"../../../hooks/useContracts\";\nimport useActiveWeb3React from \"../../../hooks/useActiveWeb3React\";\nimport {BNB, OWN} from \"../../../config\";\n\n\n\n\ntype AppProps = {\n    project: IProjects\n}\ntype ActionProps = AppProps & {account?: string | null; whiteListed?: boolean}\n\nconst Allocations: React.FC<{tokenImage:string; symbol: string; allocation:string}> = ({tokenImage, symbol, allocation}) => {\n    const srcs = `${process.env.PUBLIC_URL}/images/icons/${tokenImage}`;\n    return (\n        <div style={{ marginTop: '20px' }}>\n            <Text>My Allocations</Text>\n            <div style={{ display: 'flex', alignItems: 'center' }}>\n                <SmalltokenImage src={srcs} alt=\"token-logo\" />\n                <Text bold>{allocation} {symbol}</Text>\n            </div>\n        </div>\n    );\n};\n\nconst ActionCard: React.FC<ActionProps> = ({ account, whiteListed, project}) => {\n    const theme = useContext(ThemeContext);\n    const customTheme = useContext(CustomThemeContext);\n    const Paddress = useFindProject();\n    const [ onPurchaseModal ] = useModal(<PurchaseModal address={Paddress} />)\n    const [stats, setStats] = useState({\n        totalForSaleTokens: '-',\n        totalSoldTokens: '-',\n        remainingForSale: '-',\n        totalSales: '-',\n        expectedSales: '-',\n        percentage: '00.00',\n        tokenRate: '-',\n        totalParticipants: '-'\n    })\n    const [accountDetails, setAccountDetails] = useState({\n        balance: new TokenAmount(project.buyingCoin, BigInt(0)),\n        amount: new TokenAmount(project.sellingCoin, BigInt(0)),\n        maxPayableAmount: new TokenAmount(project.sellingCoin, BigInt(0)),\n        maxExpendable: new TokenAmount(project.buyingCoin, BigInt(0)),\n        rewardedAmount: new TokenAmount(project.sellingCoin, BigInt(0)),\n        redeemed: false,\n        whitelist: false,\n    })\n    const {library} = useActiveWeb3React();\n\n    const contract = useLaunchpadContract(project.category)\n    \n    useEffect(() => {\n        calculateLaunchpadStats(contract, project).then(r => setStats(r));\n        getAccountDetailsLaunchPad(contract, project, library, account).then(r => setAccountDetails(r)).catch(console.log)\n    }, [contract, project, account, library])\n\n    const tokenReport = {\n        title: `${project.progress} ${project.symbol}`,\n    }\n    const percentage = parseFloat(stats.percentage).toFixed(4)\n    const totalSoldTokens = parseFloat(stats.totalSoldTokens).toFixed(4)\n    const totalSales = parseFloat(stats.totalSales).toFixed(4)\n    const expectedSales = parseFloat(stats.expectedSales).toFixed(2)\n    return (\n        <CardBody\n            style={{\n                width: '100%',\n                backgroundColor: theme.isDark ? customTheme.customColors?.BG1 : customTheme.customColors?.BG2,\n                display: 'flex',\n                flexDirection: 'column',\n                justifyContent: 'space-around',\n            }}\n        >\n            <ProgressGroup>\n                <Text bold as=\"h1\" fontSize=\"24px\">\n                    {totalSoldTokens} <span style={{color: theme.colors.textSubtle}}>{project.sellingCoin.name} Sold</span>\n                </Text>\n                <Progress primaryStep={parseFloat(percentage)} variant=\"flat\" />\n                <Flex justifyContent=\"space-between\">\n                    <Text color=\"textSubtle\">{percentage}%</Text>\n                    <Text color=\"textSubtle\">\n                        {totalSales} / {expectedSales} {project.buyingCoin.symbol}\n                    </Text>\n                </Flex>\n            </ProgressGroup>\n            <CustomDataGroup flexDirection=\"column\">\n                <Flex justifyContent=\"space-between\">\n                    <Text color=\"textSubtle\">OWNLY Price</Text>\n                    <Text>{stats.tokenRate} {project.buyingCoin.symbol}</Text>\n                </Flex>\n                <Flex justifyContent=\"space-between\">\n                    <Text color=\"textSubtle\">OWNLY Sold</Text>\n                    <Text>{stats.totalSoldTokens} {project.sellingCoin.symbol}</Text>\n                </Flex>\n                <Flex justifyContent=\"space-between\">\n                    <Text color=\"textSubtle\">Total Raised</Text>\n                    <Text>{stats.totalSales} {project.buyingCoin.symbol}</Text>\n                </Flex>\n                <Flex justifyContent=\"space-between\">\n                    <Text color=\"primary\">Max Allocation</Text>\n                    <Text>{accountDetails.maxPayableAmount.toExact()} {project.sellingCoin.symbol}</Text>\n                </Flex>\n                <Flex justifyContent=\"space-between\">\n                    <Text color=\"primary\">Max BNB</Text>\n                    <Text>{accountDetails.maxExpendable.toExact()} BNB</Text>\n                </Flex>\n            </CustomDataGroup>\n            {!account ? (\n                <div style={{ marginTop: '15px', padding: '10px 0px' }}>\n                    <UnlockButton fullWidth />\n                </div>\n            ) : !whiteListed ? (\n                <Allocations tokenImage={project.image} symbol={project.symbol} allocation={accountDetails.rewardedAmount.toExact()}/>\n            ) : (\n                <>\n                <Allocations tokenImage={project.image} symbol={project.symbol} allocation={accountDetails.rewardedAmount.toExact()} />\n                <Button onClick={onPurchaseModal} fullWidth style={{marginTop: '10px'}}>Purchase {project.symbol}</Button>\n                </>\n            )}\n        </CardBody>\n    );\n};\n\n\nconst ProjectComponent: React.FC = () => {\n    const { account } = useWeb3React();\n    const [whiteListed, setWhiteList] = useState(false);\n    const Paddress = useFindProject();\n    const project = useFindProjectByAddress(Paddress);\n    const acc = useAccountWhiteList(account);\n    const pool = useGetPoolsByAddress(Paddress);\n    const { title, image, longDesc, longDesc2, longDesc3, buyingCoin, socMeds, wallpaperBg, status } = project;\n    const srcs = `${process.env.PUBLIC_URL}/images/icons/${image}`;\n    const history = useHistory();\n\n    useEffect(() => {\n        if (status !== STATE.active){\n            history.push('/projects');\n        }\n    }, [history, status])\n\n    useEffect(() => {\n        if (acc[0][0]) {\n            setWhiteList(true);\n        } else setWhiteList(false);\n    }, [acc]);\n\n    const theme = useContext(ThemeContext);\n    const srcsBg = `${process.env.PUBLIC_URL}/images/icons/${wallpaperBg}`;\n    return (\n        <CCont>\n            <CHeader src={srcsBg}>\n                <TokenImage src={srcs} alt=\"token-image\" />\n                <Heading bold fontSize=\"24px\">\n                    {title}\n                </Heading>\n            </CHeader>\n            <CBody>\n                <Flex justifyContent=\"space-between\">\n                    <Flex flex=\"1\" flexDirection=\"column\" padding=\"10px\">\n                        <Flex alignItems=\"center\" justifyContent=\"space-between\" marginTop=\"-20px\" marginBottom=\"10px\" padding=\"10px 0px\">\n                            <SocmedGroup>\n                                <Anchor href={socMeds?.[0]}>\n                                    <Globe />\n                                </Anchor>\n                                <Anchor href={socMeds?.[1]}>\n                                    <Twitter fill={theme.colors.text} />\n                                </Anchor>\n                                <Anchor href={socMeds?.[2]}>\n                                    <Send fill={theme.colors.text} />\n                                </Anchor>\n                                <Anchor href={socMeds?.[3]}>\n                                    <SvgIcon width={24} Icon={MediumIcon} />\n                                </Anchor>\n                            </SocmedGroup>\n                            {status === STATE.active ? (\n                                <StyledButton style={{ backgroundColor: '#32a31b' }}>LIVE NOW</StyledButton>\n                            ) : status === STATE.upcoming ? (\n                                <StyledButton style={{ backgroundColor: '#7a1ba3' }}>UPCOMING</StyledButton>\n                            ) : (\n                                <StyledButton style={{ backgroundColor: '#8e98a5' }}>COMPLETED</StyledButton>\n                            )}\n                        </Flex>\n                        <Flex flexDirection=\"column\" justifyContent=\"space-between\">\n                        <TextDescription color=\"textSubtle\" as=\"p\">\n                            {longDesc}\n                        </TextDescription>\n                        <TextDescription color=\"textSubtle\" as=\"p\">\n                            {longDesc2}\n                        </TextDescription>\n                        <TextDescription color=\"textSubtle\" as=\"p\">\n                            {longDesc3}\n                        </TextDescription>\n                        </Flex>\n                    </Flex>\n                    <Flex flex=\"1\">\n                        <ActionCard\n                        account={account}\n                        whiteListed={whiteListed}\n                        project={project}\n                        \n                        />\n                    </Flex>\n                </Flex>\n            </CBody>\n            <CFooter>\n                <FooterDetails pool={pool} project={project} />\n            </CFooter>\n        </CCont>\n    );\n};\n\nexport default ProjectComponent;\n","import React, { useCallback, useEffect, useMemo, useState } from 'react'\nimport { RouteComponentProps, Link } from 'react-router-dom';\nimport { ArrowRight, ChevronLeft } from 'react-feather';\nimport { Heading, Flex, Text, Breadcrumbs, Button } from '@sparkpointio/sparkswap-uikit'\nimport { useAppSelector, useFindProject as findProject, useFindProjectByAddress as findProjectByAddress, useSetProject as setProject } from 'state/hooks'\nimport styled from 'styled-components';\nimport Page from 'components/layout/Page';\nimport ProjectComponent from './ProjectComponent';\n\nconst Container = styled(Flex)`\n    flex-direction: column;\n    align-items: center;\n    padding: 20px;\n    max-width: 1200px;\n    width: 100%;\n    margin: 0 auto;\n`\nconst BackButton = styled(Link)`\n    display: flex;\n    align-items: center;\n    color: ${({theme}) => theme.colors.text};\n`\n\nconst Layout: React.FC <RouteComponentProps<{ProjectAddress?: string}>> = ({ match: {params: { ProjectAddress }}})  => {\n    const data = setProject(ProjectAddress)\n    const project = useAppSelector((state) => state.projects.data.find(p => p.address === data));\n\n\n    return (\n        <Page>\n            <Container>\n                <Flex style={{width: '100%', minHeight: '10vh'}} flexDirection=\"column\"  justifyContent=\"space-between\" marginTop=\"20px\" padding=\"5px 0px\">\n                <Heading fontSize=\"24px\" bold> SparkLaunch </Heading>\n                {/* <Flex justifyContent=\"flex-end\" style={{width: '100%'}}></Flex> */}\n                <Flex justifyContent=\"space-between\" marginBottom=\"3px\">\n                <Breadcrumbs>\n                    <Text>SparkLaunch</Text>\n                    <Text>On Going</Text>\n                    <Text>{project?.symbol}</Text>\n                </Breadcrumbs>\n                    <BackButton to='/projects'><ChevronLeft /> PROJECTS </BackButton>\n                </Flex>\n\n                </Flex>\n                <ProjectComponent />\n            </Container>\n        </Page>\n    )\n}\n\nexport default Layout;\n"],"sourceRoot":""}