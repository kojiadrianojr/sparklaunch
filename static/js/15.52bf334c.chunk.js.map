{"version":3,"sources":["components/NumericalInput/index.tsx","components/Row/index.tsx","components/CurrencyInputPanel/index.tsx","components/Modals/PurchaseModal.tsx","state/tokens/hooks.ts","pages/Launchpad/Project/styled.ts","pages/Launchpad/Project/FooterDetails.tsx","pages/Launchpad/Project/ProjectComponent.tsx","pages/Launchpad/Project/Layout.tsx"],"names":["StyledInput","styled","input","error","theme","colors","failure","text","align","textSubtle","inputRegex","RegExp","Input","React","memo","value","onUserInput","placeholder","rest","onChange","event","nextUserInput","target","replace","test","escapeRegExp","inputMode","title","autoComplete","autoCorrect","type","pattern","minLength","maxLength","spellCheck","Row","Box","padding","border","borderRadius","RowBetween","InputRow","div","gap","justify","Aligner","button","selected","darken","span","InputPanel","hideInput","background","Container","shadows","inset","CurrencyInputPanel","onMax","showMaxButton","label","currency","remainingSupply","hideBalance","id","showCommonBases","useState","setModalOpen","account","useWeb3React","useContext","ThemeContext","useCallback","fontSize","style","src","process","symbol","size","length","slice","className","onClick","variant","maxWidth","width","display","cursor","StyledHeading","Text","ActionDiv","Flex","PurchaseModal","onDismiss","address","library","useActiveWeb3React","contract","useOwnlyLaunchpad","project","useFindProjectByAddress","token","useAppSelector","state","tokens","data","find","t","useSelectToken","buyingCoin","setInput","output","setOutput","balance","TokenAmount","BNB","BigInt","amount","OWN","maxPayableAmount","rewardedAmount","redeemed","whitelist","setAccountDetails","tokenRate","setTokenRate","remainingExpendable","setRemainingExpendable","remainingPurchasable","setRemainingPurchasable","calculateInput","tokenAmount","calculatedInput","expandValue","multiply","toFixed","toExact","calculateOutput","calculatedOutput","divide","validateInput","greaterThan","validateOutput","equivalentInput","handleBuy","a","buyTokens","tx","console","log","useEffect","getWhitelist","details","getBalance","toBigInt","_amount","_maxPayableAmount","_rewardedAmount","_redeemed","_whitelist","subtract","getAccountDetails","then","r","getRemainingPurchasable","remainingP","marginBottom","marginTop","bold","maxInput","maxOutput","fullWidth","alignItems","color","CCont","Card","CHeader","CardHeader","TokenImage","img","SmalltokenImage","CBody","CardBody","StyledButton","Button","CustomDataGroup","DataGroup","primary","CFooter","TableDiv","TBHeader","TBBody","TextDescription","NavOptions","activeIndex","FooterNav","handleClick","CustomThemeContext","margin","AllocationSection","flexDirection","justifyContent","FooterDetails","pool","customTheme","setActive","open","close","cap","totalUserParticipated","totalFundsSwapped","i","backgroundColor","isDark","customColors","BG1","BG2","borderBottom","flex","marginRight","marginLeft","ownSale","Allocations","tokenImage","allocation","srcs","alt","ActionCard","whiteListed","Paddress","useFindProject","useModal","onPurchaseModal","totalForSaleTokens","totalSoldTokens","remainingForSale","totalSales","expectedSales","percentage","stats","setStats","sellingCoin","maxExpendable","accountDetails","useLaunchpadContract","category","calculateLaunchpadStats","getAccountDetailsLaunchPad","catch","progress","as","name","primaryStep","parseInt","image","ProjectComponent","setWhiteList","acc","useAccountWhiteList","useGetPoolsByAddress","longDesc","longDesc2","longDesc3","socMeds","wallpaperBg","status","srcsBg","href","fill","SvgIcon","Icon","MediumIcon","BackButton","Link","Layout","ProjectAddress","match","params","setProject","projects","p","Page","minHeight","to"],"mappings":"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","file":"static/js/15.52bf334c.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { escapeRegExp } from '../../utils'\n\nconst StyledInput = styled.input<{ error?: boolean; fontSize?: string; align?: string }>`\n  color: ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.text)};\n  width: 0;\n  position: relative;\n  font-weight: 500;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  background-color: transparent;\n  font-size: 16px;\n  text-align: ${({ align }) => align && align};\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  padding: 0px;\n  -webkit-appearance: textfield;\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n  [type='number'] {\n    -moz-appearance: textfield;\n  }\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textSubtle};\n  }\n`\n\nconst inputRegex = RegExp(`^\\\\d*(?:\\\\\\\\[.])?\\\\d*$`) // match escaped \".\" characters via in a non-capturing group\n\nexport const Input = React.memo(function InnerInput({\n  value,\n  onUserInput,\n  placeholder,\n  ...rest\n}: {\n  value: string | number\n  onUserInput: (input: string) => void\n  error?: boolean\n  fontSize?: string\n  align?: 'right' | 'left'\n} & Omit<React.HTMLProps<HTMLInputElement>, 'ref' | 'onChange' | 'as'>) {\n  const enforcer = (nextUserInput: string) => {\n    if (nextUserInput === '' || inputRegex.test(escapeRegExp(nextUserInput))) {\n      onUserInput(nextUserInput)\n    }\n  }\n\n  return (\n    <StyledInput\n      {...rest}\n      value={value}\n      onChange={event => {\n        // replace commas with periods, because uniswap exclusively uses period as the decimal separator\n        enforcer(event.target.value.replace(/,/g, '.'))\n      }}\n      // universal input options\n      inputMode=\"decimal\"\n      title=\"Token Amount\"\n      autoComplete=\"off\"\n      autoCorrect=\"off\"\n      // text-specific options\n      type=\"text\"\n      pattern=\"^[0-9]*[.,]?[0-9]*$\"\n      placeholder={placeholder || '0.0'}\n      minLength={1}\n      maxLength={79}\n      spellCheck=\"false\"\n    />\n  )\n})\n\nexport default Input\n","import styled from 'styled-components'\nimport { Box } from 'rebass/styled-components'\n\nconst Row = styled(Box)<{ align?: string; padding?: string; border?: string; borderRadius?: string }>`\n  width: 100%;\n  display: flex;\n  padding: 0;\n  align-items: ${({ align }) => (align || 'center')};\n  padding: ${({ padding }) => padding};\n  border: ${({ border }) => border};\n  border-radius: ${({ borderRadius }) => borderRadius};\n`\n\nexport const RowBetween = styled(Row)`\n  justify-content: space-between;\n  margin: 4px 0 4px 0;\n`\nexport const RowFlat = styled.div`\n  display: flex;\n  align-items: flex-end;\n`\n\nexport const AutoRow = styled(Row)<{ gap?: string; justify?: string }>`\n  flex-wrap: wrap;\n  margin: ${({ gap }) => gap && `-${gap}`};\n  justify-content: ${({ justify }) => justify && justify};\n  & > * {\n    margin: ${({ gap }) => gap} !important;\n  }\n`\n\nexport const RowFixed = styled(Row)<{ gap?: string; justify?: string }>`\n  width: fit-content;\n  margin: ${({ gap }) => gap && `-${gap}`};\n`\n\nexport default Row\n","import React, { useState, useCallback, useContext } from 'react'\nimport { Button, ChevronDownIcon, Dropdown, Text } from '@sparkpointio/sparkswap-uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport styled, { ThemeContext } from 'styled-components'\nimport { darken } from 'polished'\nimport { IProjects, ITokens } from 'config/constants/type'\nimport { StyledImage } from 'pages/Launchpad/components/styled'\nimport { Currency } from 'components/types'\nimport { Input as NumericalInput } from '../NumericalInput'\nimport { RowBetween } from '../Row'\nimport CurrencyLogo from '../CurrencyLogo'\n\nimport useActiveWeb3React from '../../hooks/useActiveWeb3React'\n\nconst InputRow = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  padding: 0.75rem 0.75rem 0.75rem 1rem;\n`\nconst CurrencySelect = styled.button<{ selected: boolean }>`\n  align-items: center;\n  height: 34px;\n  font-size: 16px;\n  font-weight: 500;\n  background-color: transparent;\n  color: ${({ selected, theme }) => (selected ? theme.colors.text : '#FFFFFF')};\n  border-radius: 12px;\n  outline: none;\n  cursor: pointer;\n  user-select: none;\n  border: none;\n  padding: 0 0.5rem;\n  :focus,\n  :hover {\n    background-color: ${({ theme }) => darken(0.05, theme.colors.input)};\n  }\n`\n\nconst LabelRow = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  color: ${({ theme }) => theme.colors.text};\n  font-size: 0.75rem;\n  line-height: 1rem;\n  padding: 0.75rem 1rem 0 1rem;\n  span:hover {\n    cursor: pointer;\n    color: ${({ theme }) => darken(0.2, theme.colors.textSubtle)};\n  }\n`\n\nconst Aligner = styled.span`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`\n\nconst InputPanel = styled.div<{ hideInput?: boolean }>`\n  display: flex;\n  flex-flow: column nowrap;\n  position: relative;\n  // border-radius: ${({ hideInput }) => (hideInput ? '8px' : '20px')};\n  // background-color: ${({ theme }) => theme.colors.background};\n  z-index: 1;\n`\n\nconst Container = styled.div<{ hideInput: boolean }>`\n  // border-radius: 16px;\n  background-color: ${({ theme }) => theme.colors.input};\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n`\n\n\ninterface CurrencyInputPanelProps {\n  value: string\n  onUserInput: (value: string) => void\n  onMax?: () => void\n  showMaxButton: boolean\n  label?: string\n  currency?: Currency | null\n  hideInput?: boolean\n  hideBalance?: boolean\n  remainingSupply?: string\n  id: string\n  showCommonBases?: boolean\n}\n\nexport default function CurrencyInputPanel({\n    value,\n    onUserInput,\n    onMax,\n    showMaxButton,\n    label,\n    currency,\n    remainingSupply = '',\n    hideBalance = false,\n    hideInput = false,\n    id,\n    showCommonBases,\n  }: CurrencyInputPanelProps) {\n    const [modalOpen, setModalOpen] = useState(false)\n    const { account } = useWeb3React()\n    // const selectedCurrencyBalance = useCurrencyBalance(account ?? undefined, currency ?? undefined)\n    const selectedCurrencyBalance = 22222\n    const theme = useContext(ThemeContext)\n    const handleDismissSearch = useCallback(() => {\n      setModalOpen(false)\n    }, [setModalOpen])\n\n    return (\n      <InputPanel id={id}>\n        <Text fontSize=\"14px\">{label}</Text>\n        <Container hideInput={hideInput}>\n          <InputRow style={hideInput ? { padding: '0', borderRadius: '8px' } : {}} >\n          <Aligner>\n                {/* <CurrencyLogo currency={currency} size=\"24px\" style={{ marginRight: '8px' }} /> */}\n                <StyledImage src={`${process.env.PUBLIC_URL}/images/icons/${currency?.symbol}.png`} size=\"24px\" />\n                <Text>\n                {(currency && currency.symbol && currency.symbol.length > 20\n                    ? `${currency.symbol.slice(0, 4)}...${currency.symbol.slice(\n                        currency.symbol.length - 5,\n                        currency.symbol.length\n                      )}`\n                    : currency?.symbol)}\n                    &nbsp;\n                </Text>\n            </Aligner>\n            {!hideInput && (\n              <>\n                <NumericalInput\n                  className=\"token-amount-input\"\n                  value={value}\n                  onUserInput={onUserInput}\n                />\n                {account && currency && showMaxButton && (\n                  <Button onClick={onMax} size=\"sm\" variant=\"primary\" style={{maxWidth: '50px', width: '20%', fontSize: '14px'}}>\n                    MAX\n                  </Button>\n                )}\n              </>\n            )}\n          </InputRow>\n        </Container>\n        {!hideInput && (\n\n          <RowBetween>\n              {account && (\n                <Text onClick={onMax} fontSize=\"14px\" style={{ display: 'inline', cursor: 'pointer' }}>\n                  {!hideBalance && !!currency\n                    ? `Remaining:${remainingSupply} ${currency.symbol}`\n                    : ' -'}\n\n                </Text>\n              )}\n          </RowBetween>\n\n        )}\n      </InputPanel>\n    )\n  }\n","import React, {useCallback, useEffect, useState} from \"react\";\nimport {useWeb3React} from \"@web3-react/core\";\nimport {TokenAmount} from \"@sparkpointio/sparkswap-sdk\";\nimport {parseUnits} from \"@ethersproject/units\";\nimport {useFindProjectByAddress} from \"state/hooks\";\nimport {useSelectToken} from \"state/tokens/hooks\";\nimport CurrencyInputPanel from \"components/CurrencyInputPanel\";\nimport {Button, Flex, Heading, Modal, Text} from \"@sparkpointio/sparkswap-uikit\";\nimport styled from \"styled-components\";\nimport {SmallstyledImage} from 'pages/Launchpad/components/styled';\nimport {useOwnlyLaunchpad} from '../../hooks/useContracts'\nimport {BNB, OWN} from \"../../config\";\nimport useActiveWeb3React from \"../../hooks/useActiveWeb3React\";\nimport {expandValue} from \"../../utils\";\n\n\ninterface AppProps {\n    onDismiss?: () => void\n    address: string | null | undefined\n}\n\nconst StyledHeading = styled(Text)`\n    color: ${({theme}) => theme.colors.textSubtle};\n`\nconst ActionDiv = styled(Flex)`\n    margin-top: 24px;\n    display: flex;\n    flex-direction: column;\n`\n\nconst PurchaseModal: React.FC<AppProps> = ({onDismiss, address}) => {\n    const {library} = useActiveWeb3React()\n    const {account} = useWeb3React()\n    const contract = useOwnlyLaunchpad()\n\n    const project = useFindProjectByAddress(address);\n    const token = useSelectToken(project.buyingCoin.address);\n\n    const [input, setInput] = useState('')\n    const [output, setOutput] = useState('')\n    const [accountDetails, setAccountDetails] = useState({\n        balance: new TokenAmount(BNB, BigInt(0)),\n        amount: new TokenAmount(OWN, BigInt(0)),\n        maxPayableAmount: new TokenAmount(OWN, BigInt(0)),\n        rewardedAmount: new TokenAmount(OWN, BigInt(0)),\n        redeemed: false,\n        whitelist: false,\n    })\n\n    const [tokenRate, setTokenRate] = useState(new TokenAmount(OWN, BigInt(0)))\n    const [remainingExpendable, setRemainingExpendable] = useState(new TokenAmount(OWN, BigInt(0)))\n    const [remainingPurchasable, setRemainingPurchasable] = useState(new TokenAmount(OWN, BigInt(0)))\n\n    /**\n     * Sets the input amount and calculates the output\n     * @param value\n     */\n    const handleTypeInput = (value: string) => {\n        setInput(value)\n        let tokenAmount = new TokenAmount(BNB, expandValue(value, BNB));\n        tokenAmount = validateInput(tokenAmount)\n        calculateOutput(tokenAmount);\n    }\n\n    /**\n     * Sets the output amount and calculates the input\n     * @param value\n     */\n    const handleTypeOutput = (value: string) => {\n        setOutput(value)\n        let tokenAmount = new TokenAmount(OWN, expandValue(value, OWN));\n        tokenAmount = validateOutput(tokenAmount)\n        calculateInput(tokenAmount)\n\n    }\n\n    /**\n     * Calculates the input based on the output\n     * @param tokenAmount\n     */\n    const calculateInput = (tokenAmount) => {\n        const calculatedInput = new TokenAmount(BNB, expandValue(tokenAmount.multiply(tokenRate).toFixed(18), BNB));\n        setInput(calculatedInput.toExact());\n\n        return calculatedInput;\n    }\n\n    /**\n     * Calculates the output based on the input\n     * @param tokenAmount\n     */\n    const calculateOutput = (tokenAmount) => {\n        const calculatedOutput = new TokenAmount(BNB, expandValue(tokenAmount.divide(tokenRate).toFixed(18), OWN));\n        setOutput(calculatedOutput.toExact());\n\n        return calculatedOutput;\n    }\n\n    /**\n     * Validates if the input does not exceed maxPayable and equivalent output does not exceed remainingSupply\n     * @param tokenAmount\n     */\n     const validateInput = (tokenAmount) => {\n\n        if (calculateOutput(tokenAmount).greaterThan(remainingPurchasable)) {\n            tokenAmount = calculateInput(remainingPurchasable)\n            calculateOutput(tokenAmount)\n        }\n\n        return tokenAmount;\n    }\n\n    /**\n     * Validates if the output does not exceed maxPayable and equivalent output does not exceed remainingSupply\n     * @param tokenAmount\n     */\n    const validateOutput = (tokenAmount) => {\n        let equivalentInput = calculateInput(tokenAmount);\n\n        if (equivalentInput.greaterThan(remainingExpendable)) {\n            equivalentInput = validateInput(equivalentInput)\n            tokenAmount = calculateOutput(equivalentInput)\n        }\n\n        return tokenAmount;\n    }\n\n    /**\n     * Sets and checks the max input\n     */\n    const handleMaxInput = () => {\n        let maxInput = remainingExpendable;\n\n        maxInput = validateInput(maxInput);\n\n        setInput(maxInput.toExact());\n    }\n\n    /**\n     * Sets and checks the max output\n     */\n    const handleMaxOutput = () => {\n        let maxOutput = remainingPurchasable;\n\n        maxOutput = validateOutput(maxOutput);\n\n        setOutput(maxOutput.toExact());\n    }\n\n    /**\n     * Initiates buy token\n     */\n    const handleBuy = async () => {\n        const tx = await contract.buyTokens({value: expandValue(input, BNB)})\n        console.log(tx);\n        console.log(`Buying successful ${tx}`)\n    }\n\n    useEffect(() => {\n        async function getRemainingTokens() {\n            let totalTokens = await contract.getTotalToken();\n            let soldAmount = await contract.soldAmount();\n            totalTokens = new TokenAmount(OWN, totalTokens)\n            soldAmount = new TokenAmount(OWN, soldAmount)\n            return totalTokens.subtract(soldAmount)\n        }\n\n        async function getAccountDetails() {\n            const details = await contract.getWhitelist(account)\n            return {\n                balance: new TokenAmount(BNB, (await library.getBalance(account)).toBigInt()),\n                amount: new TokenAmount(OWN, details._amount),\n                maxPayableAmount: new TokenAmount(OWN, details._maxPayableAmount),\n                rewardedAmount: new TokenAmount(OWN, details._rewardedAmount),\n                redeemed: details._redeemed,\n                whitelist: details._whitelist,\n            };\n        }\n\n        async function getRemainingPurchasable() {\n            const details = await contract.getWhitelist(account);\n            const maxPayableAmount = new TokenAmount(OWN, details._maxPayableAmount)\n            const rewardedAmount = new TokenAmount(OWN, details._rewardedAmount)\n            return maxPayableAmount.subtract(rewardedAmount)\n        }\n\n        const calculateMaxExpendable = (remainingP) => {\n            return new TokenAmount(BNB, expandValue(remainingP.multiply(tokenRate).toFixed(18), OWN));\n        }\n\n\n        getAccountDetails().then(r => setAccountDetails(r))\n        contract.tokenRate().then(r => setTokenRate(new TokenAmount(OWN, r)))\n        getRemainingPurchasable().then(r => {\n            setRemainingPurchasable(r)\n            setRemainingExpendable(calculateMaxExpendable(r))\n        })\n    }, [account, contract, library, input, output, tokenRate]);\n\n    return (\n        <Modal title=\"\" onDismiss={onDismiss}>\n            <div style={{width: '400px', padding: '0px 24px 24px 24px'}}>\n                <div style={{marginBottom: '24px', marginTop: '-24px'}}>\n                    <Heading bold fontSize=\"21px\">Swap Coins</Heading>\n                    <StyledHeading>Max. Allocation is {project.symbol}</StyledHeading>\n                </div>\n                <CurrencyInputPanel\n                    label=\"From\"\n                    id=\"swap-input\"\n                    value={input}\n                    onUserInput={handleTypeInput}\n                    currency={token}\n                    showMaxButton\n                    onMax={handleMaxInput}\n                    remainingSupply={remainingExpendable.toExact()}\n                />\n                <CurrencyInputPanel\n                    showMaxButton\n                    onMax={handleMaxOutput}\n                    label=\"To\"\n                    id=\"swap-input\"\n                    value={output}\n                    onUserInput={handleTypeOutput}\n                    currency={project}\n                    remainingSupply={remainingPurchasable.toExact()}\n                />\n                <ActionDiv>\n                    <Button onClick={handleBuy} fullWidth>Swap</Button>\n                </ActionDiv>\n                <ActionDiv>\n                    <Text>My Allocations</Text>\n                    <Flex alignItems=\"center\" marginTop=\"12px\">\n                        <SmallstyledImage src={`${process.env.PUBLIC_URL}/images/icons/${project?.symbol}.png`}/>\n                        <Text color=\"textSubtle\">0.0 {project.symbol}</Text>\n                    </Flex>\n                </ActionDiv>\n            </div>\n        </Modal>\n    )\n}\n\nexport default PurchaseModal;\n","import { useAppSelector, useAppDispatch } from \"state/hooks\";\n\n\nexport const useAllTokens = () => useAppSelector((state) => state.tokens.data);\nexport const useSelectToken = (address: string | undefined) => useAppSelector((state) => state.tokens.data.find(t => t.address === address));","import styled from 'styled-components'\nimport { Card, CardHeader, CardBody, Button, Flex, Text} from '@sparkpointio/sparkswap-uikit';\nimport { SocmedGroup, ProgressGroup, DataGroup } from '../components/styled';\n\nexport const CCont = styled(Card)`\n    width: 100%;\n`;\nexport const CHeader = styled(CardHeader)<{ src?: string }>`\n    \n    display: flex;\n    align-items: center;\n    height: auto;\n    min-height: 10vh;\n    max-height: 15vh;\n    ${({ src }) => src &&`\n      background-image: url(${src});\n      background-repeat: no-repeat;\n      background-attachment: scroll;\n      background-position: 95% 15%;\n      background-size: cover;\n    `}\n`;\n\nexport const TokenImage = styled.img`\n    border-radius: 50%;\n    width: 60px;\n    height: 60px;\n    margin: 10px 15px;\n`;\n\nexport const SmalltokenImage = styled.img`\n    border-radius: 50%;\n    width: 30px;\n    height: 30px;\n    margin: 10px 15px;\n`;\n\nexport const CBody = styled(CardBody)`\n    padding: 20px;\n`;\n\nexport const StyledButton = styled(Button)`\n    cursor: context-menu;\n    height: 35px;\n    border-radius: 5px;\n`;\n\nexport const CustomDataGroup = styled(DataGroup)`\n    &:before {\n        content: '';\n        border-top: 5px solid ${({ theme }) => theme.colors.primary};\n        padding-top: 10px;\n        margin-bottom: 10px;\n    }\n    &:after {\n        content: '';\n        border-bottom: 5px solid ${({ theme }) => theme.colors.primary};\n        padding-bottom: 10px;\n        margin-top: 10px;\n    }\n`;\n\nexport const CFooter = styled(Flex)`\n    width: 100%;\n    min-height: 20vh;\n    height: auto;\n    padding: 25px;\n`;\n\nconst TableDiv = styled(Flex)`\n    width: 100%;\n    max-width: 720px;\n`\n\nexport const TBHeader = styled(TableDiv)``;\nexport const TBBody = styled(TableDiv)`\n    margin-top: 10px;\n`;\n\nexport const TextDescription = styled(Text)`\n    margin: 10px 5px\n`\n","import { Flex, Button, Heading, Text } from '@sparkpointio/sparkswap-uikit';\nimport { useWeb3React } from '@web3-react/core';\nimport { IPoolInformation, IProjects, ITokens } from 'config/constants/type';\nimport React, { useContext, useState, useCallback } from 'react';\nimport styled, { ThemeContext } from 'styled-components';\nimport { CustomThemeContext } from 'ThemeContext';\nimport { TBHeader, TBBody } from './styled';\n\nconst Container = styled(Flex)`\n    margin: 10px;\n    width: 100%;\n    height: auto;\n`;\n\nconst NavOptions = styled(Button)<{ activeIndex: boolean }>`\n    background-color: transparent;\n    color: ${({ theme, activeIndex }) => (activeIndex ? theme.colors.text : theme.colors.textSubtle)};\n    border-bottom: ${({ theme, activeIndex }) => activeIndex && `3px solid ${theme.colors.primary}`};\n`;\n\ntype AppProps = {\n    pool: IPoolInformation;\n    project: IProjects;\n    buyingToken?: ITokens;\n}\n\nconst FooterNav = ({ activeIndex = 0, handleClick}: { activeIndex?: number; handleClick: (i:number) => void }) => {\n    const theme = useContext(ThemeContext);\n    const customTheme = useContext(CustomThemeContext);\n    return (\n        <Flex alignItems=\"center\" style={{ margin: '10px 10px 0px 10px', padding: '20px 20px 0px 20px' }}>\n            <NavOptions activeIndex={activeIndex === 0} onClick={() => handleClick(0)}>Project Details</NavOptions>\n            <NavOptions activeIndex={activeIndex === 1} onClick={() => handleClick(1)}>Schedule</NavOptions>\n            <NavOptions activeIndex={activeIndex === 2} onClick={() => handleClick(2)}>Your Allocation</NavOptions>\n        </Flex>\n    );\n};\n\nconst AllocationSection = () => {\n    return (\n        <Flex margin=\"20px\" padding=\"20px\" flexDirection=\"column\">\n            <TBHeader justifyContent=\"space-between\" >\n                <Text bold>No.</Text>\n                <Text bold>Token Allocation</Text>\n                <Text bold>Date</Text>\n                <Text bold>Token(s) claimed</Text>\n                <Text bold>Action</Text>\n            </TBHeader>\n            <TBBody justifyContent=\"space-between\" >\n                <Text color=\"textSubtle\">001</Text>\n                <Text color=\"textSubtle\">159662.6 OWN</Text>\n                <Text color=\"textSubtle\">06/24/2021</Text>\n                <Text color=\"textSubtle\">OWNLY</Text>\n                <Text color=\"textSubtle\">SWAP</Text>\n            </TBBody>\n        </Flex>\n    )\n}\n\nconst FooterDetails: React.FC<AppProps> = ({pool, project}) => {\n    const theme = useContext(ThemeContext);\n    const { account } = useWeb3React();\n    const customTheme = useContext(CustomThemeContext);\n    const [ activeIndex , setActive ] = useState<number>(0);\n    const { open, close, cap, totalUserParticipated, totalFundsSwapped } = pool;\n    const handleClick = useCallback((i) => {\n        setActive(i)\n    }, [])\n\n\n    return (\n        <Container\n            style={{ backgroundColor: theme.isDark ? customTheme.customColors?.BG1 : customTheme.customColors?.BG2 }}\n            flexDirection=\"column\"\n        >\n            <div style={{ marginBottom: '10px', borderBottom: `1px solid ${theme.colors.primary}` }}>\n                <FooterNav handleClick={handleClick} activeIndex={activeIndex} />\n            </div>\n            { activeIndex === 0 && <Flex padding=\"20px\" margin=\"20px\" justifyContent=\"space-between\">\n                <Flex flex=\"1\" flexDirection=\"column\" marginRight=\"10px\">\n                    <Heading margin=\"10px 0px 30px 0\" bold>\n                        Pool Information\n                    </Heading>\n                    <Flex justifyContent=\"space-between\">\n                        <Text>Opens</Text>\n                        <Text color=\"textSubtle\">{open}</Text>\n                    </Flex>\n                    <Flex justifyContent=\"space-between\">\n                        <Text>Closes</Text>\n                        <Text color=\"textSubtle\">{close}</Text>\n                    </Flex>\n                    <Flex justifyContent=\"space-between\">\n                        <Text>Cap</Text>\n                        <Text color=\"textSubtle\">{cap} {project.buyingCoin.symbol}</Text>\n                    </Flex>\n                    <Flex justifyContent=\"space-between\">\n                        <Text>Total Users Participated</Text>\n                        <Text color=\"textSubtle\">{totalUserParticipated}</Text>\n                    </Flex>\n                    <Flex justifyContent=\"space-between\">\n                        <Text>Total Funds Swapped</Text>\n                        <Text color=\"textSubtle\">{totalFundsSwapped} {project.buyingCoin.symbol}</Text>\n                    </Flex>\n                </Flex>\n                <Flex flex=\"1\" marginLeft=\"10px\" flexDirection=\"column\">\n                    <Heading margin=\"10px 0px 30px 0px\" bold>\n\n                        Token Information\n                    </Heading>\n                    <Flex justifyContent=\"space-between\">\n                        <Text>Name</Text>\n                        <Text color=\"textSubtle\">{project.title}</Text>\n                    </Flex>\n                    <Flex justifyContent=\"space-between\">\n                        <Text>Token Symbol</Text>\n                        <Text color=\"textSubtle\">{project.symbol}</Text>\n                    </Flex>\n                    <Flex justifyContent=\"space-between\">\n                        <Text>Total Supply</Text>\n                        <Text color=\"textSubtle\">{project.ownSale}</Text>\n                    </Flex>\n                </Flex>\n            </Flex>\n            }\n            {\n                account && activeIndex === 2 && (\n                    <AllocationSection />\n                )\n            }\n        </Container>\n    );\n};\n\nexport default FooterDetails;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { useWeb3React } from '@web3-react/core';\nimport {TokenAmount} from \"@sparkpointio/sparkswap-sdk\";\nimport styled, { ThemeContext } from 'styled-components';\nimport { Globe, Twitter, Send } from 'react-feather';\nimport {\n    Card,\n    Flex,\n    Heading,\n    Button,\n    CardBody,\n    CardHeader,\n    Text,\n    Progress,\n    CardFooter,\n    useModal,\n} from '@sparkpointio/sparkswap-uikit';\nimport { useAccountWhiteList, useFindProjectByAddress, useGetPoolsByAddress, useFindProject } from 'state/hooks';\nimport { IProjects, ITokens } from 'config/constants/type';\nimport { useSelectToken } from 'state/tokens/hooks';\nimport SvgIcon from 'components/SvgIcon';\nimport UnlockButton from 'components/ConnectWalletButton';\nimport { StyledHr2 as Divider } from 'components/Divider';\nimport PurchaseModal from 'components/Modals/PurchaseModal';\nimport { CustomThemeContext } from 'ThemeContext';\nimport { SocmedGroup, ProgressGroup } from '../components/styled';\nimport { ReactComponent as MediumIcon } from '../components/icons/MediumIcon.svg';\nimport Anchor from '../components/StyledLink';\nimport FooterDetails from './FooterDetails';\nimport { CCont, CHeader, TokenImage, SmalltokenImage, CBody, StyledButton, CustomDataGroup, CFooter, TextDescription } from './styled'\nimport {calculateLaunchpadStats, getAccountDetailsLaunchPad} from \"../../../utils/contractHelpers\";\nimport {useLaunchpadContract} from \"../../../hooks/useContracts\";\nimport useActiveWeb3React from \"../../../hooks/useActiveWeb3React\";\n\nimport {BNB, OWN} from \"../../../config\";\n\n\ntype AppProps = {\n    project: IProjects\n}\ntype ActionProps = AppProps & {account?: string | null; whiteListed?: boolean}\n\nconst Allocations: React.FC<{tokenImage:string; symbol: string; allocation:string}> = ({tokenImage, symbol, allocation}) => {\n    const srcs = `${process.env.PUBLIC_URL}/images/icons/${tokenImage}`;\n    return (\n        <div style={{ marginTop: '20px' }}>\n            <Text>My Allocations</Text>\n            <div style={{ display: 'flex', alignItems: 'center' }}>\n                <SmalltokenImage src={srcs} alt=\"token-logo\" />\n                <Text bold>{allocation} {symbol}</Text>\n            </div>\n        </div>\n    );\n};\n\nconst ActionCard: React.FC<ActionProps> = ({ account, whiteListed, project}) => {\n    const theme = useContext(ThemeContext);\n    const customTheme = useContext(CustomThemeContext);\n    const Paddress = useFindProject();\n    const [ onPurchaseModal ] = useModal(<PurchaseModal address={Paddress} />)\n    const [stats, setStats] = useState({\n        totalForSaleTokens: '-',\n        totalSoldTokens: '-',\n        remainingForSale: '-',\n        totalSales: '-',\n        expectedSales: '-',\n        percentage: '-',\n        tokenRate: '-'\n    })\n    const [accountDetails, setAccountDetails] = useState({\n        balance: new TokenAmount(project.buyingCoin, BigInt(0)),\n        amount: new TokenAmount(project.sellingCoin, BigInt(0)),\n        maxPayableAmount: new TokenAmount(project.sellingCoin, BigInt(0)),\n        maxExpendable: new TokenAmount(project.buyingCoin, BigInt(0)),\n        rewardedAmount: new TokenAmount(project.sellingCoin, BigInt(0)),\n        redeemed: false,\n        whitelist: false,\n    })\n    const {library} = useActiveWeb3React();\n\n    const contract = useLaunchpadContract(project.category)\n\n    useEffect(() => {\n        calculateLaunchpadStats(contract, project).then(r => setStats(r));\n        getAccountDetailsLaunchPad(contract, project, library, account).then(r => setAccountDetails(r)).catch(console.log)\n    }, [contract, project, account, library])\n\n    const tokenReport = {\n        title: `${project.progress} ${project.symbol}`,\n    }\n\n    return (\n        <CardBody\n            style={{\n                width: '100%',\n                backgroundColor: theme.isDark ? customTheme.customColors?.BG1 : customTheme.customColors?.BG2,\n                display: 'flex',\n                flexDirection: 'column',\n                justifyContent: 'space-around',\n            }}\n        >\n            <ProgressGroup>\n                <Text bold as=\"h1\" fontSize=\"24px\">\n                    {stats.totalSoldTokens} {project.sellingCoin.name} Sold\n                </Text>\n                <Progress primaryStep={parseInt(stats.percentage)} variant=\"flat\" />\n                <Flex justifyContent=\"space-between\">\n                    <Text color=\"textSubtle\">{stats.percentage}%</Text>\n                    <Text color=\"textSubtle\">\n                        {stats.totalSales} / {stats.expectedSales} {project.buyingCoin.symbol}\n                    </Text>\n                </Flex>\n            </ProgressGroup>\n            <CustomDataGroup flexDirection=\"column\">\n                <Flex justifyContent=\"space-between\">\n                    <Text color=\"textSubtle\">OWNLY Price</Text>\n                    <Text>{stats.tokenRate}</Text>\n                </Flex>\n                <Flex justifyContent=\"space-between\">\n                    <Text color=\"textSubtle\">OWNLY Sold</Text>\n                    <Text>{stats.totalSoldTokens}</Text>\n                </Flex>\n                <Flex justifyContent=\"space-between\">\n                    <Text color=\"textSubtle\">Total Raised</Text>\n                    <Text>{stats.totalSales} {project.buyingCoin.symbol}</Text>\n                </Flex>\n                <Flex justifyContent=\"space-between\">\n                    <Text color=\"primary\">My Allocation</Text>\n                    <Text>{accountDetails.maxPayableAmount.toExact()} {project.sellingCoin.symbol}</Text>\n                </Flex>\n                <Flex justifyContent=\"space-between\">\n                    <Text color=\"primary\">Max BNB</Text>\n                    <Text>{accountDetails.maxExpendable.toExact()} BNB</Text>\n                </Flex>\n            </CustomDataGroup>\n            {!account ? (\n                <div style={{ marginTop: '15px', padding: '10px 0px' }}>\n                    <UnlockButton fullWidth />\n                </div>\n            ) : !whiteListed ? (\n                <Allocations tokenImage={project.image} symbol={project.symbol} allocation={accountDetails.maxPayableAmount.toExact()}/>\n            ) : (\n                <>\n                <Allocations tokenImage={project.image} symbol={project.symbol} allocation={accountDetails.maxPayableAmount.toExact()} />\n                <Button onClick={onPurchaseModal} fullWidth style={{marginTop: '10px'}}>Purchase {project.symbol}</Button>\n                </>\n            )}\n        </CardBody>\n    );\n};\n\n\nconst ProjectComponent: React.FC = () => {\n    const { account } = useWeb3React();\n    const [whiteListed, setWhiteList] = useState(false);\n    const Paddress = useFindProject();\n    const project = useFindProjectByAddress(Paddress);\n    const acc = useAccountWhiteList(account);\n    const pool = useGetPoolsByAddress(Paddress);\n    const { title, image, longDesc, longDesc2, longDesc3, buyingCoin, socMeds, wallpaperBg, status } = project;\n\n    const srcs = `${process.env.PUBLIC_URL}/images/icons/${image}`;\n    useEffect(() => {\n        if (acc[0][0]) {\n            setWhiteList(true);\n        } else setWhiteList(false);\n    }, [acc]);\n\n    const theme = useContext(ThemeContext);\n    const srcsBg = `${process.env.PUBLIC_URL}/images/icons/${wallpaperBg}`;\n    return (\n        <CCont>\n            <CHeader src={srcsBg}>\n                <TokenImage src={srcs} alt=\"token-image\" />\n                <Heading bold fontSize=\"24px\">\n                    {title}\n                </Heading>\n            </CHeader>\n            <CBody>\n                <Flex justifyContent=\"space-between\">\n                    <Flex flex=\"1\" flexDirection=\"column\" padding=\"10px\">\n                        <Flex alignItems=\"center\" justifyContent=\"space-between\" marginTop=\"-20px\" marginBottom=\"10px\" padding=\"10px 0px\">\n                            <SocmedGroup>\n                                <Anchor href={socMeds?.[0]}>\n                                    <Globe />\n                                </Anchor>\n                                <Anchor href={socMeds?.[1]}>\n                                    <Twitter fill={theme.colors.text} />\n                                </Anchor>\n                                <Anchor href={socMeds?.[2]}>\n                                    <Send fill={theme.colors.text} />\n                                </Anchor>\n                                <Anchor href={socMeds?.[3]}>\n                                    <SvgIcon width={24} Icon={MediumIcon} />\n                                </Anchor>\n                            </SocmedGroup>\n                            {status === 'active' ? (\n                                <StyledButton style={{ backgroundColor: '#32a31b' }}>LIVE NOW</StyledButton>\n                            ) : status === 'upcoming' ? (\n                                <StyledButton style={{ backgroundColor: '#7a1ba3' }}>UPCOMING</StyledButton>\n                            ) : (\n                                <StyledButton style={{ backgroundColor: '#8e98a5' }}>COMPLETED</StyledButton>\n                            )}\n                        </Flex>\n                        <Flex flexDirection=\"column\" justifyContent=\"space-between\">\n                        <TextDescription color=\"textSubtle\" as=\"p\">\n                            {longDesc}\n                        </TextDescription>\n                        <TextDescription color=\"textSubtle\" as=\"p\">\n                            {longDesc2}\n                        </TextDescription>\n                        <TextDescription color=\"textSubtle\" as=\"p\">\n                            {longDesc3}\n                        </TextDescription>\n                        </Flex>\n                    </Flex>\n                    <Flex flex=\"1\">\n                        <ActionCard\n                        account={account}\n                        whiteListed={whiteListed}\n                        project={project}\n                        />\n                    </Flex>\n                </Flex>\n            </CBody>\n            <CFooter>\n                <FooterDetails pool={pool} project={project} />\n            </CFooter>\n        </CCont>\n    );\n};\n\nexport default ProjectComponent;\n","import React, { useCallback, useEffect, useMemo, useState } from 'react'\nimport { RouteComponentProps, Link } from 'react-router-dom';\nimport { ArrowRight, ChevronLeft } from 'react-feather';\nimport { Heading, Flex, Text, Breadcrumbs, Button } from '@sparkpointio/sparkswap-uikit'\nimport { useAppSelector, useFindProject as findProject, useFindProjectByAddress as findProjectByAddress, useSetProject as setProject } from 'state/hooks'\nimport styled from 'styled-components';\nimport Page from 'components/layout/Page';\nimport ProjectComponent from './ProjectComponent';\n\nconst Container = styled(Flex)`\n    flex-direction: column;\n    align-items: center;\n    padding: 20px;\n    max-width: 1200px;\n    width: 100%;\n    margin: 0 auto;\n`\nconst BackButton = styled(Link)`\n    display: flex;\n    align-items: center;\n    color: ${({theme}) => theme.colors.text};\n`\n\nconst Layout: React.FC <RouteComponentProps<{ProjectAddress?: string}>> = ({ match: {params: { ProjectAddress }}})  => {\n    const data = setProject(ProjectAddress)\n    const project = useAppSelector((state) => state.projects.data.find(p => p.address === data));\n\n\n    return (\n        <Page>\n            <Container>\n                <Flex style={{width: '100%', minHeight: '10vh'}} flexDirection=\"column\"  justifyContent=\"space-between\" marginTop=\"20px\" padding=\"5px 0px\">\n                <Heading fontSize=\"24px\" bold> SparkLaunch </Heading>\n                {/* <Flex justifyContent=\"flex-end\" style={{width: '100%'}}></Flex> */}\n                <Flex justifyContent=\"space-between\" marginBottom=\"3px\">\n                <Breadcrumbs>\n                    <Text>SparkLaunch</Text>\n                    <Text>On Going</Text>\n                    <Text>{project?.symbol}</Text>\n                </Breadcrumbs>\n                    <BackButton to={`${process.env.PUBLIC_URL}/projects`}><ChevronLeft /> PROJECTS </BackButton>\n                </Flex>\n\n                </Flex>\n                <ProjectComponent />\n            </Container>\n        </Page>\n    )\n}\n\nexport default Layout;\n"],"sourceRoot":""}