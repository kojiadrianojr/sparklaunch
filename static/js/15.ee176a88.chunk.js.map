{"version":3,"sources":["components/NumericalInput/index.tsx","components/Row/index.tsx","components/CurrencyInputPanel/index.tsx","components/Modals/PurchaseModal.tsx","state/tokens/hooks.ts","pages/Launchpad/Project/styled.ts","pages/Launchpad/Project/FooterDetails.tsx","pages/Launchpad/Project/ProjectComponent.tsx","pages/Launchpad/Project/Layout.tsx"],"names":["StyledInput","styled","input","error","theme","colors","failure","text","align","textSubtle","inputRegex","RegExp","Input","React","memo","value","onUserInput","placeholder","rest","onChange","event","nextUserInput","target","replace","test","escapeRegExp","inputMode","title","autoComplete","autoCorrect","type","pattern","minLength","maxLength","spellCheck","Row","Box","padding","border","borderRadius","RowBetween","InputRow","div","gap","justify","Aligner","button","selected","darken","span","InputPanel","hideInput","background","Container","shadows","inset","CurrencyInputPanel","onMax","showMaxButton","label","currency","remainingSupply","hideBalance","id","showCommonBases","useState","setModalOpen","account","useWeb3React","useContext","ThemeContext","useCallback","fontSize","style","src","process","symbol","size","length","slice","className","onClick","variant","maxWidth","width","display","cursor","StyledHeading","Text","ActionDiv","Flex","PurchaseModal","onDismiss","address","library","useActiveWeb3React","contract","useOwnlyLaunchpad","project","useFindProjectByAddress","token","useAppSelector","state","tokens","data","find","t","useSelectToken","buyingCoin","setInput","output","setOutput","balance","TokenAmount","BNB","BigInt","amount","OWN","maxPayableAmount","rewardedAmount","redeemed","whitelist","setAccountDetails","tokenRate","setTokenRate","remainingExpendable","setRemainingExpendable","remainingPurchasable","setRemainingPurchasable","calculateInput","tokenAmount","calculatedInput","expandValue","multiply","toFixed","toExact","calculateOutput","calculatedOutput","divide","validateInput","greaterThan","validateOutput","equivalentInput","handleBuy","a","buyTokens","tx","console","log","useEffect","getWhitelist","details","getBalance","toBigInt","_amount","_maxPayableAmount","_rewardedAmount","_redeemed","_whitelist","subtract","getAccountDetails","then","r","getRemainingPurchasable","remainingP","marginBottom","marginTop","bold","maxInput","maxOutput","fullWidth","alignItems","color","CCont","Card","CHeader","CardHeader","TokenImage","img","SmalltokenImage","CBody","CardBody","StyledButton","Button","CustomDataGroup","DataGroup","primary","CFooter","TableDiv","TBHeader","TBBody","TextDescription","NavOptions","activeIndex","FooterNav","handleClick","CustomThemeContext","margin","AllocationSection","flexDirection","justifyContent","FooterDetails","pool","customTheme","setActive","open","close","cap","totalUserParticipated","totalFundsSwapped","i","backgroundColor","isDark","customColors","BG1","BG2","borderBottom","flex","marginRight","marginLeft","ownSale","Allocations","tokenImage","allocation","srcs","alt","ActionCard","whiteListed","Paddress","useFindProject","useModal","onPurchaseModal","totalForSaleTokens","totalSoldTokens","remainingForSale","totalSales","expectedSales","percentage","stats","setStats","sellingCoin","maxExpendable","accountDetails","useLaunchpadContract","category","calculateLaunchpadStats","getAccountDetailsLaunchPad","catch","progress","as","name","primaryStep","parseInt","image","ProjectComponent","setWhiteList","acc","useAccountWhiteList","useGetPoolsByAddress","longDesc","longDesc2","longDesc3","socMeds","wallpaperBg","status","srcsBg","href","fill","SvgIcon","Icon","MediumIcon","BackButton","Link","Layout","ProjectAddress","match","params","setProject","projects","p","Page","minHeight","to"],"mappings":"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","file":"static/js/15.ee176a88.chunk.js","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { escapeRegExp } from '../../utils'\r\n\r\nconst StyledInput = styled.input<{ error?: boolean; fontSize?: string; align?: string }>`\r\n  color: ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.text)};\r\n  width: 0;\r\n  position: relative;\r\n  font-weight: 500;\r\n  outline: none;\r\n  border: none;\r\n  flex: 1 1 auto;\r\n  background-color: transparent;\r\n  font-size: 16px;\r\n  text-align: ${({ align }) => align && align};\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  padding: 0px;\r\n  -webkit-appearance: textfield;\r\n  ::-webkit-search-decoration {\r\n    -webkit-appearance: none;\r\n  }\r\n  [type='number'] {\r\n    -moz-appearance: textfield;\r\n  }\r\n  ::-webkit-outer-spin-button,\r\n  ::-webkit-inner-spin-button {\r\n    -webkit-appearance: none;\r\n  }\r\n  ::placeholder {\r\n    color: ${({ theme }) => theme.colors.textSubtle};\r\n  }\r\n`\r\n\r\nconst inputRegex = RegExp(`^\\\\d*(?:\\\\\\\\[.])?\\\\d*$`) // match escaped \".\" characters via in a non-capturing group\r\n\r\nexport const Input = React.memo(function InnerInput({\r\n  value,\r\n  onUserInput,\r\n  placeholder,\r\n  ...rest\r\n}: {\r\n  value: string | number\r\n  onUserInput: (input: string) => void\r\n  error?: boolean\r\n  fontSize?: string\r\n  align?: 'right' | 'left'\r\n} & Omit<React.HTMLProps<HTMLInputElement>, 'ref' | 'onChange' | 'as'>) {\r\n  const enforcer = (nextUserInput: string) => {\r\n    if (nextUserInput === '' || inputRegex.test(escapeRegExp(nextUserInput))) {\r\n      onUserInput(nextUserInput)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <StyledInput\r\n      {...rest}\r\n      value={value}\r\n      onChange={event => {\r\n        // replace commas with periods, because uniswap exclusively uses period as the decimal separator\r\n        enforcer(event.target.value.replace(/,/g, '.'))\r\n      }}\r\n      // universal input options\r\n      inputMode=\"decimal\"\r\n      title=\"Token Amount\"\r\n      autoComplete=\"off\"\r\n      autoCorrect=\"off\"\r\n      // text-specific options\r\n      type=\"text\"\r\n      pattern=\"^[0-9]*[.,]?[0-9]*$\"\r\n      placeholder={placeholder || '0.0'}\r\n      minLength={1}\r\n      maxLength={79}\r\n      spellCheck=\"false\"\r\n    />\r\n  )\r\n})\r\n\r\nexport default Input\r\n","import styled from 'styled-components'\r\nimport { Box } from 'rebass/styled-components'\r\n\r\nconst Row = styled(Box)<{ align?: string; padding?: string; border?: string; borderRadius?: string }>`\r\n  width: 100%;\r\n  display: flex;\r\n  padding: 0;\r\n  align-items: ${({ align }) => (align || 'center')};\r\n  padding: ${({ padding }) => padding};\r\n  border: ${({ border }) => border};\r\n  border-radius: ${({ borderRadius }) => borderRadius};\r\n`\r\n\r\nexport const RowBetween = styled(Row)`\r\n  justify-content: space-between;\r\n  margin: 4px 0 4px 0;\r\n`\r\nexport const RowFlat = styled.div`\r\n  display: flex;\r\n  align-items: flex-end;\r\n`\r\n\r\nexport const AutoRow = styled(Row)<{ gap?: string; justify?: string }>`\r\n  flex-wrap: wrap;\r\n  margin: ${({ gap }) => gap && `-${gap}`};\r\n  justify-content: ${({ justify }) => justify && justify};\r\n  & > * {\r\n    margin: ${({ gap }) => gap} !important;\r\n  }\r\n`\r\n\r\nexport const RowFixed = styled(Row)<{ gap?: string; justify?: string }>`\r\n  width: fit-content;\r\n  margin: ${({ gap }) => gap && `-${gap}`};\r\n`\r\n\r\nexport default Row\r\n","import React, { useState, useCallback, useContext } from 'react'\r\nimport { Button, ChevronDownIcon, Dropdown, Text } from '@sparkpointio/sparkswap-uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport styled, { ThemeContext } from 'styled-components'\r\nimport { darken } from 'polished'\r\nimport { IProjects, ITokens } from 'config/constants/type'\r\nimport { StyledImage } from 'pages/Launchpad/components/styled'\r\nimport { Currency } from 'components/types'\r\nimport { Input as NumericalInput } from '../NumericalInput'\r\nimport { RowBetween } from '../Row'\r\nimport CurrencyLogo from '../CurrencyLogo'\r\n\r\nimport useActiveWeb3React from '../../hooks/useActiveWeb3React'\r\n\r\nconst InputRow = styled.div`\r\n  display: flex;\r\n  flex-flow: row nowrap;\r\n  align-items: center;\r\n  padding: 0.75rem 0.75rem 0.75rem 1rem;\r\n`\r\nconst CurrencySelect = styled.button<{ selected: boolean }>`\r\n  align-items: center;\r\n  height: 34px;\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  background-color: transparent;\r\n  color: ${({ selected, theme }) => (selected ? theme.colors.text : '#FFFFFF')};\r\n  border-radius: 12px;\r\n  outline: none;\r\n  cursor: pointer;\r\n  user-select: none;\r\n  border: none;\r\n  padding: 0 0.5rem;\r\n  :focus,\r\n  :hover {\r\n    background-color: ${({ theme }) => darken(0.05, theme.colors.input)};\r\n  }\r\n`\r\n\r\nconst LabelRow = styled.div`\r\n  display: flex;\r\n  flex-flow: row nowrap;\r\n  align-items: center;\r\n  color: ${({ theme }) => theme.colors.text};\r\n  font-size: 0.75rem;\r\n  line-height: 1rem;\r\n  padding: 0.75rem 1rem 0 1rem;\r\n  span:hover {\r\n    cursor: pointer;\r\n    color: ${({ theme }) => darken(0.2, theme.colors.textSubtle)};\r\n  }\r\n`\r\n\r\nconst Aligner = styled.span`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`\r\n\r\nconst InputPanel = styled.div<{ hideInput?: boolean }>`\r\n  display: flex;\r\n  flex-flow: column nowrap;\r\n  position: relative;\r\n  // border-radius: ${({ hideInput }) => (hideInput ? '8px' : '20px')};\r\n  // background-color: ${({ theme }) => theme.colors.background};\r\n  z-index: 1;\r\n`\r\n\r\nconst Container = styled.div<{ hideInput: boolean }>`\r\n  // border-radius: 16px;\r\n  background-color: ${({ theme }) => theme.colors.input};\r\n  box-shadow: ${({ theme }) => theme.shadows.inset};\r\n`\r\n\r\n\r\ninterface CurrencyInputPanelProps {\r\n  value: string\r\n  onUserInput: (value: string) => void\r\n  onMax?: () => void\r\n  showMaxButton: boolean\r\n  label?: string\r\n  currency?: Currency | null\r\n  hideInput?: boolean\r\n  hideBalance?: boolean\r\n  remainingSupply?: string\r\n  id: string\r\n  showCommonBases?: boolean\r\n}\r\n\r\nexport default function CurrencyInputPanel({\r\n    value,\r\n    onUserInput,\r\n    onMax,\r\n    showMaxButton,\r\n    label,\r\n    currency,\r\n    remainingSupply = '',\r\n    hideBalance = false,\r\n    hideInput = false,\r\n    id,\r\n    showCommonBases,\r\n  }: CurrencyInputPanelProps) {\r\n    const [modalOpen, setModalOpen] = useState(false)\r\n    const { account } = useWeb3React()\r\n    // const selectedCurrencyBalance = useCurrencyBalance(account ?? undefined, currency ?? undefined)\r\n    const selectedCurrencyBalance = 22222\r\n    const theme = useContext(ThemeContext)\r\n    const handleDismissSearch = useCallback(() => {\r\n      setModalOpen(false)\r\n    }, [setModalOpen])\r\n\r\n    return (\r\n      <InputPanel id={id}>\r\n        <Text fontSize=\"14px\">{label}</Text>\r\n        <Container hideInput={hideInput}>\r\n          <InputRow style={hideInput ? { padding: '0', borderRadius: '8px' } : {}} >\r\n          <Aligner>\r\n                {/* <CurrencyLogo currency={currency} size=\"24px\" style={{ marginRight: '8px' }} /> */}\r\n                <StyledImage src={`${process.env.PUBLIC_URL}/images/icons/${currency?.symbol}.png`} size=\"24px\" />\r\n                <Text>\r\n                {(currency && currency.symbol && currency.symbol.length > 20\r\n                    ? `${currency.symbol.slice(0, 4)}...${currency.symbol.slice(\r\n                        currency.symbol.length - 5,\r\n                        currency.symbol.length\r\n                      )}`\r\n                    : currency?.symbol)}\r\n                    &nbsp;\r\n                </Text>\r\n            </Aligner>\r\n            {!hideInput && (\r\n              <>\r\n                <NumericalInput\r\n                  className=\"token-amount-input\"\r\n                  value={value}\r\n                  onUserInput={onUserInput}\r\n                />\r\n                {account && currency && showMaxButton && (\r\n                  <Button onClick={onMax} size=\"sm\" variant=\"primary\" style={{maxWidth: '50px', width: '20%', fontSize: '14px'}}>\r\n                    MAX\r\n                  </Button>\r\n                )}\r\n              </>\r\n            )}\r\n          </InputRow>\r\n        </Container>\r\n        {!hideInput && (\r\n\r\n          <RowBetween>\r\n              {account && (\r\n                <Text onClick={onMax} fontSize=\"14px\" style={{ display: 'inline', cursor: 'pointer' }}>\r\n                  {!hideBalance && !!currency\r\n                    ? `Remaining: ${remainingSupply} ${currency.symbol}`\r\n                    : ' -'}\r\n\r\n                </Text>\r\n              )}\r\n          </RowBetween>\r\n\r\n        )}\r\n      </InputPanel>\r\n    )\r\n  }\r\n","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport {useWeb3React} from \"@web3-react/core\";\r\nimport {TokenAmount} from \"@sparkpointio/sparkswap-sdk\";\r\nimport {parseUnits} from \"@ethersproject/units\";\r\nimport {useFindProjectByAddress} from \"state/hooks\";\r\nimport {useSelectToken} from \"state/tokens/hooks\";\r\nimport CurrencyInputPanel from \"components/CurrencyInputPanel\";\r\nimport {Button, Flex, Heading, Modal, Text} from \"@sparkpointio/sparkswap-uikit\";\r\nimport styled from \"styled-components\";\r\nimport {SmallstyledImage} from 'pages/Launchpad/components/styled';\r\nimport {useOwnlyLaunchpad} from '../../hooks/useContracts'\r\nimport {BNB, OWN} from \"../../config\";\r\nimport useActiveWeb3React from \"../../hooks/useActiveWeb3React\";\r\nimport {expandValue} from \"../../utils\";\r\n\r\n\r\ninterface AppProps {\r\n    onDismiss?: () => void\r\n    address: string | null | undefined\r\n}\r\n\r\nconst StyledHeading = styled(Text)`\r\n    color: ${({theme}) => theme.colors.textSubtle};\r\n`\r\nconst ActionDiv = styled(Flex)`\r\n    margin-top: 24px;\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\n\r\nconst PurchaseModal: React.FC<AppProps> = ({onDismiss, address}) => {\r\n    const {library} = useActiveWeb3React()\r\n    const {account} = useWeb3React()\r\n    const contract = useOwnlyLaunchpad()\r\n\r\n    const project = useFindProjectByAddress(address);\r\n    const token = useSelectToken(project.buyingCoin.address);\r\n\r\n    const [input, setInput] = useState('')\r\n    const [output, setOutput] = useState('')\r\n    const [accountDetails, setAccountDetails] = useState({\r\n        balance: new TokenAmount(BNB, BigInt(0)),\r\n        amount: new TokenAmount(OWN, BigInt(0)),\r\n        maxPayableAmount: new TokenAmount(OWN, BigInt(0)),\r\n        rewardedAmount: new TokenAmount(OWN, BigInt(0)),\r\n        redeemed: false,\r\n        whitelist: false,\r\n    })\r\n\r\n    const [tokenRate, setTokenRate] = useState(new TokenAmount(OWN, BigInt(0)))\r\n    const [remainingExpendable, setRemainingExpendable] = useState(new TokenAmount(OWN, BigInt(0)))\r\n    const [remainingPurchasable, setRemainingPurchasable] = useState(new TokenAmount(OWN, BigInt(0)))\r\n\r\n    /**\r\n     * Sets the input amount and calculates the output\r\n     * @param value\r\n     */\r\n    const handleTypeInput = (value: string) => {\r\n        setInput(value)\r\n        let tokenAmount = new TokenAmount(BNB, expandValue(value, BNB));\r\n        tokenAmount = validateInput(tokenAmount)\r\n        calculateOutput(tokenAmount);\r\n    }\r\n\r\n    /**\r\n     * Sets the output amount and calculates the input\r\n     * @param value\r\n     */\r\n    const handleTypeOutput = (value: string) => {\r\n        setOutput(value)\r\n        let tokenAmount = new TokenAmount(OWN, expandValue(value, OWN));\r\n        tokenAmount = validateOutput(tokenAmount)\r\n        calculateInput(tokenAmount)\r\n\r\n    }\r\n\r\n    /**\r\n     * Calculates the input based on the output\r\n     * @param tokenAmount\r\n     */\r\n    const calculateInput = (tokenAmount) => {\r\n        const calculatedInput = new TokenAmount(BNB, expandValue(tokenAmount.multiply(tokenRate).toFixed(18), BNB));\r\n        setInput(calculatedInput.toExact());\r\n\r\n        return calculatedInput;\r\n    }\r\n\r\n    /**\r\n     * Calculates the output based on the input\r\n     * @param tokenAmount\r\n     */\r\n    const calculateOutput = (tokenAmount) => {\r\n        const calculatedOutput = new TokenAmount(BNB, expandValue(tokenAmount.divide(tokenRate).toFixed(18), OWN));\r\n        setOutput(calculatedOutput.toExact());\r\n\r\n        return calculatedOutput;\r\n    }\r\n\r\n    /**\r\n     * Validates if the input does not exceed maxPayable and equivalent output does not exceed remainingSupply\r\n     * @param tokenAmount\r\n     */\r\n     const validateInput = (tokenAmount) => {\r\n\r\n        if (calculateOutput(tokenAmount).greaterThan(remainingPurchasable)) {\r\n            tokenAmount = calculateInput(remainingPurchasable)\r\n            calculateOutput(tokenAmount)\r\n        }\r\n\r\n        return tokenAmount;\r\n    }\r\n\r\n    /**\r\n     * Validates if the output does not exceed maxPayable and equivalent output does not exceed remainingSupply\r\n     * @param tokenAmount\r\n     */\r\n    const validateOutput = (tokenAmount) => {\r\n        let equivalentInput = calculateInput(tokenAmount);\r\n\r\n        if (equivalentInput.greaterThan(remainingExpendable)) {\r\n            equivalentInput = validateInput(equivalentInput)\r\n            tokenAmount = calculateOutput(equivalentInput)\r\n        }\r\n\r\n        return tokenAmount;\r\n    }\r\n\r\n    /**\r\n     * Sets and checks the max input\r\n     */\r\n    const handleMaxInput = () => {\r\n        let maxInput = remainingExpendable;\r\n\r\n        maxInput = validateInput(maxInput);\r\n\r\n        setInput(maxInput.toExact());\r\n    }\r\n\r\n    /**\r\n     * Sets and checks the max output\r\n     */\r\n    const handleMaxOutput = () => {\r\n        let maxOutput = remainingPurchasable;\r\n\r\n        maxOutput = validateOutput(maxOutput);\r\n\r\n        setOutput(maxOutput.toExact());\r\n    }\r\n\r\n    /**\r\n     * Initiates buy token\r\n     */\r\n    const handleBuy = async () => {\r\n        const tx = await contract.buyTokens({value: expandValue(input, BNB)})\r\n        console.log(tx);\r\n        console.log(`Buying successful ${tx}`)\r\n    }\r\n\r\n    useEffect(() => {\r\n        async function getRemainingTokens() {\r\n            let totalTokens = await contract.getTotalToken();\r\n            let soldAmount = await contract.soldAmount();\r\n            totalTokens = new TokenAmount(OWN, totalTokens)\r\n            soldAmount = new TokenAmount(OWN, soldAmount)\r\n            return totalTokens.subtract(soldAmount)\r\n        }\r\n\r\n        async function getAccountDetails() {\r\n            const details = await contract.getWhitelist(account)\r\n            return {\r\n                balance: new TokenAmount(BNB, (await library.getBalance(account)).toBigInt()),\r\n                amount: new TokenAmount(OWN, details._amount),\r\n                maxPayableAmount: new TokenAmount(OWN, details._maxPayableAmount),\r\n                rewardedAmount: new TokenAmount(OWN, details._rewardedAmount),\r\n                redeemed: details._redeemed,\r\n                whitelist: details._whitelist,\r\n            };\r\n        }\r\n\r\n        async function getRemainingPurchasable() {\r\n            const details = await contract.getWhitelist(account);\r\n            const maxPayableAmount = new TokenAmount(OWN, details._maxPayableAmount)\r\n            const rewardedAmount = new TokenAmount(OWN, details._rewardedAmount)\r\n            return maxPayableAmount.subtract(rewardedAmount)\r\n        }\r\n\r\n        const calculateMaxExpendable = (remainingP) => {\r\n            return new TokenAmount(BNB, expandValue(remainingP.multiply(tokenRate).toFixed(18), OWN));\r\n        }\r\n\r\n\r\n        getAccountDetails().then(r => setAccountDetails(r))\r\n        contract.tokenRate().then(r => setTokenRate(new TokenAmount(OWN, r)))\r\n        getRemainingPurchasable().then(r => {\r\n            setRemainingPurchasable(r)\r\n            setRemainingExpendable(calculateMaxExpendable(r))\r\n        })\r\n    }, [account, contract, library, input, output, tokenRate]);\r\n\r\n    return (\r\n        <Modal title=\"\" onDismiss={onDismiss}>\r\n            <div style={{width: '400px', padding: '0px 24px 24px 24px'}}>\r\n                <div style={{marginBottom: '24px', marginTop: '-24px'}}>\r\n                    <Heading bold fontSize=\"21px\">Swap Coins</Heading>\r\n                    <StyledHeading>Max. Allocation is {project.symbol}</StyledHeading>\r\n                </div>\r\n                <CurrencyInputPanel\r\n                    label=\"From\"\r\n                    id=\"swap-input\"\r\n                    value={input}\r\n                    onUserInput={handleTypeInput}\r\n                    currency={token}\r\n                    showMaxButton\r\n                    onMax={handleMaxInput}\r\n                    remainingSupply={remainingExpendable.toExact()}\r\n                />\r\n                <CurrencyInputPanel\r\n                    showMaxButton\r\n                    onMax={handleMaxOutput}\r\n                    label=\"To\"\r\n                    id=\"swap-input\"\r\n                    value={output}\r\n                    onUserInput={handleTypeOutput}\r\n                    currency={project}\r\n                    remainingSupply={remainingPurchasable.toExact()}\r\n                />\r\n                <ActionDiv>\r\n                    <Button onClick={handleBuy} fullWidth>Swap</Button>\r\n                </ActionDiv>\r\n                <ActionDiv>\r\n                    <Text>My Allocations</Text>\r\n                    <Flex alignItems=\"center\" marginTop=\"12px\">\r\n                        <SmallstyledImage src={`${process.env.PUBLIC_URL}/images/icons/${project?.symbol}.png`}/>\r\n                        <Text color=\"textSubtle\">0.0 {project.symbol}</Text>\r\n                    </Flex>\r\n                </ActionDiv>\r\n            </div>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default PurchaseModal;\r\n","import { useAppSelector, useAppDispatch } from \"state/hooks\";\r\n\r\n\r\nexport const useAllTokens = () => useAppSelector((state) => state.tokens.data);\r\nexport const useSelectToken = (address: string | undefined) => useAppSelector((state) => state.tokens.data.find(t => t.address === address));","import styled from 'styled-components'\r\nimport { Card, CardHeader, CardBody, Button, Flex, Text} from '@sparkpointio/sparkswap-uikit';\r\nimport { SocmedGroup, ProgressGroup, DataGroup } from '../components/styled';\r\n\r\nexport const CCont = styled(Card)`\r\n    width: 100%;\r\n`;\r\nexport const CHeader = styled(CardHeader)<{ src?: string }>`\r\n    \r\n    display: flex;\r\n    align-items: center;\r\n    height: auto;\r\n    min-height: 10vh;\r\n    max-height: 15vh;\r\n    ${({ src }) => src &&`\r\n      background-image: url(${src});\r\n      background-repeat: no-repeat;\r\n      background-attachment: scroll;\r\n      background-position: 95% 15%;\r\n      background-size: cover;\r\n    `}\r\n`;\r\n\r\nexport const TokenImage = styled.img`\r\n    border-radius: 50%;\r\n    width: 60px;\r\n    height: 60px;\r\n    margin: 10px 15px;\r\n`;\r\n\r\nexport const SmalltokenImage = styled.img`\r\n    border-radius: 50%;\r\n    width: 30px;\r\n    height: 30px;\r\n    margin: 10px 15px;\r\n`;\r\n\r\nexport const CBody = styled(CardBody)`\r\n    padding: 20px;\r\n`;\r\n\r\nexport const StyledButton = styled(Button)`\r\n    cursor: context-menu;\r\n    height: 35px;\r\n    border-radius: 5px;\r\n`;\r\n\r\nexport const CustomDataGroup = styled(DataGroup)`\r\n    &:before {\r\n        content: '';\r\n        border-top: 5px solid ${({ theme }) => theme.colors.primary};\r\n        padding-top: 10px;\r\n        margin-bottom: 10px;\r\n    }\r\n    &:after {\r\n        content: '';\r\n        border-bottom: 5px solid ${({ theme }) => theme.colors.primary};\r\n        padding-bottom: 10px;\r\n        margin-top: 10px;\r\n    }\r\n`;\r\n\r\nexport const CFooter = styled(Flex)`\r\n    width: 100%;\r\n    min-height: 20vh;\r\n    height: auto;\r\n    padding: 25px;\r\n`;\r\n\r\nconst TableDiv = styled(Flex)`\r\n    width: 100%;\r\n    max-width: 720px;\r\n`\r\n\r\nexport const TBHeader = styled(TableDiv)``;\r\nexport const TBBody = styled(TableDiv)`\r\n    margin-top: 10px;\r\n`;\r\n\r\nexport const TextDescription = styled(Text)`\r\n    margin: 10px 5px\r\n`\r\n","import { Flex, Button, Heading, Text } from '@sparkpointio/sparkswap-uikit';\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport { IPoolInformation, IProjects, ITokens } from 'config/constants/type';\r\nimport React, { useContext, useState, useCallback } from 'react';\r\nimport styled, { ThemeContext } from 'styled-components';\r\nimport { CustomThemeContext } from 'ThemeContext';\r\nimport { TBHeader, TBBody } from './styled';\r\n\r\nconst Container = styled(Flex)`\r\n    margin: 10px;\r\n    width: 100%;\r\n    height: auto;\r\n`;\r\n\r\nconst NavOptions = styled(Button)<{ activeIndex: boolean }>`\r\n    background-color: transparent;\r\n    color: ${({ theme, activeIndex }) => (activeIndex ? theme.colors.text : theme.colors.textSubtle)};\r\n    border-bottom: ${({ theme, activeIndex }) => activeIndex && `3px solid ${theme.colors.primary}`};\r\n`;\r\n\r\ntype AppProps = {\r\n    pool: IPoolInformation;\r\n    project: IProjects;\r\n    buyingToken?: ITokens;\r\n}\r\n\r\nconst FooterNav = ({ activeIndex = 0, handleClick}: { activeIndex?: number; handleClick: (i:number) => void }) => {\r\n    const theme = useContext(ThemeContext);\r\n    const customTheme = useContext(CustomThemeContext);\r\n    return (\r\n        <Flex alignItems=\"center\" style={{ margin: '10px 10px 0px 10px', padding: '20px 20px 0px 20px' }}>\r\n            <NavOptions activeIndex={activeIndex === 0} onClick={() => handleClick(0)}>Project Details</NavOptions>\r\n            <NavOptions activeIndex={activeIndex === 1} onClick={() => handleClick(1)}>Schedule</NavOptions>\r\n            <NavOptions activeIndex={activeIndex === 2} onClick={() => handleClick(2)}>Your Allocation</NavOptions>\r\n        </Flex>\r\n    );\r\n};\r\n\r\nconst AllocationSection = () => {\r\n    return (\r\n        <Flex margin=\"20px\" padding=\"20px\" flexDirection=\"column\">\r\n            <TBHeader justifyContent=\"space-between\" >\r\n                <Text bold>No.</Text>\r\n                <Text bold>Token Allocation</Text>\r\n                <Text bold>Date</Text>\r\n                <Text bold>Token(s) claimed</Text>\r\n                <Text bold>Action</Text>\r\n            </TBHeader>\r\n            <TBBody justifyContent=\"space-between\" >\r\n                <Text color=\"textSubtle\">001</Text>\r\n                <Text color=\"textSubtle\">159662.6 OWN</Text>\r\n                <Text color=\"textSubtle\">06/24/2021</Text>\r\n                <Text color=\"textSubtle\">OWNLY</Text>\r\n                <Text color=\"textSubtle\">SWAP</Text>\r\n            </TBBody>\r\n        </Flex>\r\n    )\r\n}\r\n\r\nconst FooterDetails: React.FC<AppProps> = ({pool, project}) => {\r\n    const theme = useContext(ThemeContext);\r\n    const { account } = useWeb3React();\r\n    const customTheme = useContext(CustomThemeContext);\r\n    const [ activeIndex , setActive ] = useState<number>(0);\r\n    const { open, close, cap, totalUserParticipated, totalFundsSwapped } = pool;\r\n    const handleClick = useCallback((i) => {\r\n        setActive(i)\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <Container\r\n            style={{ backgroundColor: theme.isDark ? customTheme.customColors?.BG1 : customTheme.customColors?.BG2 }}\r\n            flexDirection=\"column\"\r\n        >\r\n            <div style={{ marginBottom: '10px', borderBottom: `1px solid ${theme.colors.primary}` }}>\r\n                <FooterNav handleClick={handleClick} activeIndex={activeIndex} />\r\n            </div>\r\n            { activeIndex === 0 && <Flex padding=\"20px\" margin=\"20px\" justifyContent=\"space-between\">\r\n                <Flex flex=\"1\" flexDirection=\"column\" marginRight=\"10px\">\r\n                    <Heading margin=\"10px 0px 30px 0\" bold>\r\n                        Pool Information\r\n                    </Heading>\r\n                    <Flex justifyContent=\"space-between\">\r\n                        <Text>Opens</Text>\r\n                        <Text color=\"textSubtle\">{open}</Text>\r\n                    </Flex>\r\n                    <Flex justifyContent=\"space-between\">\r\n                        <Text>Closes</Text>\r\n                        <Text color=\"textSubtle\">{close}</Text>\r\n                    </Flex>\r\n                    <Flex justifyContent=\"space-between\">\r\n                        <Text>Cap</Text>\r\n                        <Text color=\"textSubtle\">{cap} {project.buyingCoin.symbol}</Text>\r\n                    </Flex>\r\n                    <Flex justifyContent=\"space-between\">\r\n                        <Text>Total Users Participated</Text>\r\n                        <Text color=\"textSubtle\">{totalUserParticipated}</Text>\r\n                    </Flex>\r\n                    <Flex justifyContent=\"space-between\">\r\n                        <Text>Total Funds Swapped</Text>\r\n                        <Text color=\"textSubtle\">{totalFundsSwapped} {project.buyingCoin.symbol}</Text>\r\n                    </Flex>\r\n                </Flex>\r\n                <Flex flex=\"1\" marginLeft=\"10px\" flexDirection=\"column\">\r\n                    <Heading margin=\"10px 0px 30px 0px\" bold>\r\n\r\n                        Token Information\r\n                    </Heading>\r\n                    <Flex justifyContent=\"space-between\">\r\n                        <Text>Name</Text>\r\n                        <Text color=\"textSubtle\">{project.title}</Text>\r\n                    </Flex>\r\n                    <Flex justifyContent=\"space-between\">\r\n                        <Text>Token Symbol</Text>\r\n                        <Text color=\"textSubtle\">{project.symbol}</Text>\r\n                    </Flex>\r\n                    <Flex justifyContent=\"space-between\">\r\n                        <Text>Total Supply</Text>\r\n                        <Text color=\"textSubtle\">{project.ownSale}</Text>\r\n                    </Flex>\r\n                </Flex>\r\n            </Flex>\r\n            }\r\n            {\r\n                account && activeIndex === 2 && (\r\n                    <AllocationSection />\r\n                )\r\n            }\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default FooterDetails;\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport {TokenAmount} from \"@sparkpointio/sparkswap-sdk\";\r\nimport styled, { ThemeContext } from 'styled-components';\r\nimport { Globe, Twitter, Send } from 'react-feather';\r\nimport {\r\n    Card,\r\n    Flex,\r\n    Heading,\r\n    Button,\r\n    CardBody,\r\n    CardHeader,\r\n    Text,\r\n    Progress,\r\n    CardFooter,\r\n    useModal,\r\n} from '@sparkpointio/sparkswap-uikit';\r\nimport { useAccountWhiteList, useFindProjectByAddress, useGetPoolsByAddress, useFindProject } from 'state/hooks';\r\nimport { IProjects, ITokens } from 'config/constants/type';\r\nimport { useSelectToken } from 'state/tokens/hooks';\r\nimport SvgIcon from 'components/SvgIcon';\r\nimport UnlockButton from 'components/ConnectWalletButton';\r\nimport { StyledHr2 as Divider } from 'components/Divider';\r\nimport PurchaseModal from 'components/Modals/PurchaseModal';\r\nimport { CustomThemeContext } from 'ThemeContext';\r\nimport { SocmedGroup, ProgressGroup } from '../components/styled';\r\nimport { ReactComponent as MediumIcon } from '../components/icons/MediumIcon.svg';\r\nimport Anchor from '../components/StyledLink';\r\nimport FooterDetails from './FooterDetails';\r\nimport { CCont, CHeader, TokenImage, SmalltokenImage, CBody, StyledButton, CustomDataGroup, CFooter, TextDescription } from './styled'\r\nimport {calculateLaunchpadStats, getAccountDetailsLaunchPad} from \"../../../utils/contractHelpers\";\r\nimport {useLaunchpadContract} from \"../../../hooks/useContracts\";\r\nimport useActiveWeb3React from \"../../../hooks/useActiveWeb3React\";\r\n\r\nimport {BNB, OWN} from \"../../../config\";\r\n\r\n\r\ntype AppProps = {\r\n    project: IProjects\r\n}\r\ntype ActionProps = AppProps & {account?: string | null; whiteListed?: boolean}\r\n\r\nconst Allocations: React.FC<{tokenImage:string; symbol: string; allocation:string}> = ({tokenImage, symbol, allocation}) => {\r\n    const srcs = `${process.env.PUBLIC_URL}/images/icons/${tokenImage}`;\r\n    return (\r\n        <div style={{ marginTop: '20px' }}>\r\n            <Text>My Allocations</Text>\r\n            <div style={{ display: 'flex', alignItems: 'center' }}>\r\n                <SmalltokenImage src={srcs} alt=\"token-logo\" />\r\n                <Text bold>{allocation} {symbol}</Text>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst ActionCard: React.FC<ActionProps> = ({ account, whiteListed, project}) => {\r\n    const theme = useContext(ThemeContext);\r\n    const customTheme = useContext(CustomThemeContext);\r\n    const Paddress = useFindProject();\r\n    const [ onPurchaseModal ] = useModal(<PurchaseModal address={Paddress} />)\r\n    const [stats, setStats] = useState({\r\n        totalForSaleTokens: '-',\r\n        totalSoldTokens: '-',\r\n        remainingForSale: '-',\r\n        totalSales: '-',\r\n        expectedSales: '-',\r\n        percentage: '-',\r\n        tokenRate: '-'\r\n    })\r\n    const [accountDetails, setAccountDetails] = useState({\r\n        balance: new TokenAmount(project.buyingCoin, BigInt(0)),\r\n        amount: new TokenAmount(project.sellingCoin, BigInt(0)),\r\n        maxPayableAmount: new TokenAmount(project.sellingCoin, BigInt(0)),\r\n        maxExpendable: new TokenAmount(project.buyingCoin, BigInt(0)),\r\n        rewardedAmount: new TokenAmount(project.sellingCoin, BigInt(0)),\r\n        redeemed: false,\r\n        whitelist: false,\r\n    })\r\n    const {library} = useActiveWeb3React();\r\n\r\n    const contract = useLaunchpadContract(project.category)\r\n\r\n    useEffect(() => {\r\n        calculateLaunchpadStats(contract, project).then(r => setStats(r));\r\n        getAccountDetailsLaunchPad(contract, project, library, account).then(r => setAccountDetails(r)).catch(console.log)\r\n    }, [contract, project, account, library])\r\n\r\n    const tokenReport = {\r\n        title: `${project.progress} ${project.symbol}`,\r\n    }\r\n\r\n    return (\r\n        <CardBody\r\n            style={{\r\n                width: '100%',\r\n                backgroundColor: theme.isDark ? customTheme.customColors?.BG1 : customTheme.customColors?.BG2,\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                justifyContent: 'space-around',\r\n            }}\r\n        >\r\n            <ProgressGroup>\r\n                <Text bold as=\"h1\" fontSize=\"24px\">\r\n                    {stats.totalSoldTokens} {project.sellingCoin.name} Sold\r\n                </Text>\r\n                <Progress primaryStep={parseInt(stats.percentage)} variant=\"flat\" />\r\n                <Flex justifyContent=\"space-between\">\r\n                    <Text color=\"textSubtle\">{stats.percentage}%</Text>\r\n                    <Text color=\"textSubtle\">\r\n                        {stats.totalSales} / {stats.expectedSales} {project.buyingCoin.symbol}\r\n                    </Text>\r\n                </Flex>\r\n            </ProgressGroup>\r\n            <CustomDataGroup flexDirection=\"column\">\r\n                <Flex justifyContent=\"space-between\">\r\n                    <Text color=\"textSubtle\">OWNLY Price</Text>\r\n                    <Text>{stats.tokenRate}</Text>\r\n                </Flex>\r\n                <Flex justifyContent=\"space-between\">\r\n                    <Text color=\"textSubtle\">OWNLY Sold</Text>\r\n                    <Text>{stats.totalSoldTokens}</Text>\r\n                </Flex>\r\n                <Flex justifyContent=\"space-between\">\r\n                    <Text color=\"textSubtle\">Total Raised</Text>\r\n                    <Text>{stats.totalSales} {project.buyingCoin.symbol}</Text>\r\n                </Flex>\r\n                <Flex justifyContent=\"space-between\">\r\n                    <Text color=\"primary\">My Allocation</Text>\r\n                    <Text>{accountDetails.maxPayableAmount.toExact()} {project.sellingCoin.symbol}</Text>\r\n                </Flex>\r\n                <Flex justifyContent=\"space-between\">\r\n                    <Text color=\"primary\">Max BNB</Text>\r\n                    <Text>{accountDetails.maxExpendable.toExact()} BNB</Text>\r\n                </Flex>\r\n            </CustomDataGroup>\r\n            {!account ? (\r\n                <div style={{ marginTop: '15px', padding: '10px 0px' }}>\r\n                    <UnlockButton fullWidth />\r\n                </div>\r\n            ) : !whiteListed ? (\r\n                <Allocations tokenImage={project.image} symbol={project.symbol} allocation={accountDetails.maxPayableAmount.toExact()}/>\r\n            ) : (\r\n                <>\r\n                <Allocations tokenImage={project.image} symbol={project.symbol} allocation={accountDetails.maxPayableAmount.toExact()} />\r\n                <Button onClick={onPurchaseModal} fullWidth style={{marginTop: '10px'}}>Purchase {project.symbol}</Button>\r\n                </>\r\n            )}\r\n        </CardBody>\r\n    );\r\n};\r\n\r\n\r\nconst ProjectComponent: React.FC = () => {\r\n    const { account } = useWeb3React();\r\n    const [whiteListed, setWhiteList] = useState(false);\r\n    const Paddress = useFindProject();\r\n    const project = useFindProjectByAddress(Paddress);\r\n    const acc = useAccountWhiteList(account);\r\n    const pool = useGetPoolsByAddress(Paddress);\r\n    const { title, image, longDesc, longDesc2, longDesc3, buyingCoin, socMeds, wallpaperBg, status } = project;\r\n\r\n    const srcs = `${process.env.PUBLIC_URL}/images/icons/${image}`;\r\n    useEffect(() => {\r\n        if (acc[0][0]) {\r\n            setWhiteList(true);\r\n        } else setWhiteList(false);\r\n    }, [acc]);\r\n\r\n    const theme = useContext(ThemeContext);\r\n    const srcsBg = `${process.env.PUBLIC_URL}/images/icons/${wallpaperBg}`;\r\n    return (\r\n        <CCont>\r\n            <CHeader src={srcsBg}>\r\n                <TokenImage src={srcs} alt=\"token-image\" />\r\n                <Heading bold fontSize=\"24px\">\r\n                    {title}\r\n                </Heading>\r\n            </CHeader>\r\n            <CBody>\r\n                <Flex justifyContent=\"space-between\">\r\n                    <Flex flex=\"1\" flexDirection=\"column\" padding=\"10px\">\r\n                        <Flex alignItems=\"center\" justifyContent=\"space-between\" marginTop=\"-20px\" marginBottom=\"10px\" padding=\"10px 0px\">\r\n                            <SocmedGroup>\r\n                                <Anchor href={socMeds?.[0]}>\r\n                                    <Globe />\r\n                                </Anchor>\r\n                                <Anchor href={socMeds?.[1]}>\r\n                                    <Twitter fill={theme.colors.text} />\r\n                                </Anchor>\r\n                                <Anchor href={socMeds?.[2]}>\r\n                                    <Send fill={theme.colors.text} />\r\n                                </Anchor>\r\n                                <Anchor href={socMeds?.[3]}>\r\n                                    <SvgIcon width={24} Icon={MediumIcon} />\r\n                                </Anchor>\r\n                            </SocmedGroup>\r\n                            {status === 'active' ? (\r\n                                <StyledButton style={{ backgroundColor: '#32a31b' }}>LIVE NOW</StyledButton>\r\n                            ) : status === 'upcoming' ? (\r\n                                <StyledButton style={{ backgroundColor: '#7a1ba3' }}>UPCOMING</StyledButton>\r\n                            ) : (\r\n                                <StyledButton style={{ backgroundColor: '#8e98a5' }}>COMPLETED</StyledButton>\r\n                            )}\r\n                        </Flex>\r\n                        <Flex flexDirection=\"column\" justifyContent=\"space-between\">\r\n                        <TextDescription color=\"textSubtle\" as=\"p\">\r\n                            {longDesc}\r\n                        </TextDescription>\r\n                        <TextDescription color=\"textSubtle\" as=\"p\">\r\n                            {longDesc2}\r\n                        </TextDescription>\r\n                        <TextDescription color=\"textSubtle\" as=\"p\">\r\n                            {longDesc3}\r\n                        </TextDescription>\r\n                        </Flex>\r\n                    </Flex>\r\n                    <Flex flex=\"1\">\r\n                        <ActionCard\r\n                        account={account}\r\n                        whiteListed={whiteListed}\r\n                        project={project}\r\n                        />\r\n                    </Flex>\r\n                </Flex>\r\n            </CBody>\r\n            <CFooter>\r\n                <FooterDetails pool={pool} project={project} />\r\n            </CFooter>\r\n        </CCont>\r\n    );\r\n};\r\n\r\nexport default ProjectComponent;\r\n","import React, { useCallback, useEffect, useMemo, useState } from 'react'\r\nimport { RouteComponentProps, Link } from 'react-router-dom';\r\nimport { ArrowRight, ChevronLeft } from 'react-feather';\r\nimport { Heading, Flex, Text, Breadcrumbs, Button } from '@sparkpointio/sparkswap-uikit'\r\nimport { useAppSelector, useFindProject as findProject, useFindProjectByAddress as findProjectByAddress, useSetProject as setProject } from 'state/hooks'\r\nimport styled from 'styled-components';\r\nimport Page from 'components/layout/Page';\r\nimport ProjectComponent from './ProjectComponent';\r\n\r\nconst Container = styled(Flex)`\r\n    flex-direction: column;\r\n    align-items: center;\r\n    padding: 20px;\r\n    max-width: 1200px;\r\n    width: 100%;\r\n    margin: 0 auto;\r\n`\r\nconst BackButton = styled(Link)`\r\n    display: flex;\r\n    align-items: center;\r\n    color: ${({theme}) => theme.colors.text};\r\n`\r\n\r\nconst Layout: React.FC <RouteComponentProps<{ProjectAddress?: string}>> = ({ match: {params: { ProjectAddress }}})  => {\r\n    const data = setProject(ProjectAddress)\r\n    const project = useAppSelector((state) => state.projects.data.find(p => p.address === data));\r\n\r\n\r\n    return (\r\n        <Page>\r\n            <Container>\r\n                <Flex style={{width: '100%', minHeight: '10vh'}} flexDirection=\"column\"  justifyContent=\"space-between\" marginTop=\"20px\" padding=\"5px 0px\">\r\n                <Heading fontSize=\"24px\" bold> SparkLaunch </Heading>\r\n                {/* <Flex justifyContent=\"flex-end\" style={{width: '100%'}}></Flex> */}\r\n                <Flex justifyContent=\"space-between\" marginBottom=\"3px\">\r\n                <Breadcrumbs>\r\n                    <Text>SparkLaunch</Text>\r\n                    <Text>On Going</Text>\r\n                    <Text>{project?.symbol}</Text>\r\n                </Breadcrumbs>\r\n                    <BackButton to=\"/projects\"><ChevronLeft /> PROJECTS </BackButton>\r\n                </Flex>\r\n\r\n                </Flex>\r\n                <ProjectComponent />\r\n            </Container>\r\n        </Page>\r\n    )\r\n}\r\n\r\nexport default Layout;\r\n"],"sourceRoot":""}