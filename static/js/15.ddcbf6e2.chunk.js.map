{"version":3,"sources":["components/NumericalInput/index.tsx","components/Row/index.tsx","components/CurrencyInputPanel/index.tsx","components/Modals/PurchaseModal.tsx","state/tokens/hooks.ts","pages/Launchpad/Project/styled.ts","pages/Launchpad/Project/FooterDetails.tsx","pages/Launchpad/Project/ProjectComponent.tsx","pages/Launchpad/Project/Layout.tsx"],"names":["StyledInput","styled","input","error","theme","colors","failure","text","align","textSubtle","inputRegex","RegExp","Input","React","memo","value","onUserInput","placeholder","rest","onChange","event","nextUserInput","target","replace","test","escapeRegExp","inputMode","title","autoComplete","autoCorrect","type","pattern","minLength","maxLength","spellCheck","Row","Box","padding","border","borderRadius","RowBetween","InputRow","div","gap","justify","Aligner","button","selected","darken","span","InputPanel","hideInput","background","Container","shadows","inset","CurrencyInputPanel","onMax","showMaxButton","label","currency","remainingSupply","hideBalance","id","showCommonBases","useState","setModalOpen","account","useWeb3React","useContext","ThemeContext","useCallback","fontSize","style","src","process","symbol","toLowerCase","size","length","slice","className","onClick","variant","maxWidth","width","display","cursor","ToastTitle","Text","StyledHeading","ActionDiv","Flex","PurchaseModal","onDismiss","address","library","useActiveWeb3React","contract","useOwnlyLaunchpad","project","useFindProjectByAddress","token","useAppSelector","state","tokens","data","find","t","useSelectToken","buyingCoin","setInput","output","setOutput","balance","TokenAmount","BNB","BigInt","amount","OWN","maxPayableAmount","rewardedAmount","redeemed","whitelist","accountDetails","setAccountDetails","tokenRate","setTokenRate","remainingExpendable","setRemainingExpendable","remainingPurchasable","setRemainingPurchasable","calculateInput","tokenAmount","calculatedInput","expandValue","multiply","toFixed","toExact","calculateOutput","calculatedOutput","divide","validateInput","greaterThan","validateOutput","equivalentInput","SuccessMessage","tx","hash","link","alignItems","flexDirection","href","textDecoration","color","primary","handleBuy","a","buyTokens","console","log","toast","success","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","getAccountDetailsLaunchPad","then","r","code","message","position","useEffect","getWhitelist","details","_maxPayableAmount","_rewardedAmount","subtract","getRemainingPurchasable","remainingP","marginBottom","marginTop","bold","maxInput","maxOutput","fullWidth","CCont","Card","CHeader","CardHeader","TokenImage","img","SmalltokenImage","CBody","CardBody","StyledButton","Button","CustomDataGroup","DataGroup","CFooter","TableDiv","TBHeader","TBBody","TextDescription","NavOptions","activeIndex","FooterNav","handleClick","CustomThemeContext","margin","AllocationSection","justifyContent","FooterDetails","pool","customTheme","setActive","open","close","cap","totalUserParticipated","totalFundsSwapped","i","backgroundColor","isDark","customColors","BG1","BG2","borderBottom","flex","marginRight","marginLeft","ownSale","Allocations","tokenImage","allocation","srcs","alt","ActionCard","whiteListed","Paddress","useFindProject","useModal","onPurchaseModal","totalForSaleTokens","totalSoldTokens","remainingForSale","totalSales","expectedSales","percentage","stats","setStats","sellingCoin","maxExpendable","useLaunchpadContract","category","calculateLaunchpadStats","catch","progress","as","name","primaryStep","parseInt","image","ProjectComponent","setWhiteList","userAddress","acc","useAccountWhiteList","useGetPoolsByAddress","longDesc","longDesc2","longDesc3","socMeds","wallpaperBg","status","srcsBg","fill","SvgIcon","Icon","MediumIcon","STATE","active","upcoming","BackButton","Link","Layout","ProjectAddress","match","params","setProject","projects","p","Page","minHeight","to"],"mappings":"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","file":"static/js/15.ddcbf6e2.chunk.js","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { escapeRegExp } from '../../utils'\r\n\r\nconst StyledInput = styled.input<{ error?: boolean; fontSize?: string; align?: string }>`\r\n  color: ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.text)};\r\n  width: 0;\r\n  position: relative;\r\n  font-weight: 500;\r\n  outline: none;\r\n  border: none;\r\n  flex: 1 1 auto;\r\n  background-color: transparent;\r\n  font-size: 16px;\r\n  text-align: ${({ align }) => align && align};\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  padding: 0px;\r\n  -webkit-appearance: textfield;\r\n  ::-webkit-search-decoration {\r\n    -webkit-appearance: none;\r\n  }\r\n  [type='number'] {\r\n    -moz-appearance: textfield;\r\n  }\r\n  ::-webkit-outer-spin-button,\r\n  ::-webkit-inner-spin-button {\r\n    -webkit-appearance: none;\r\n  }\r\n  ::placeholder {\r\n    color: ${({ theme }) => theme.colors.textSubtle};\r\n  }\r\n`\r\n\r\nconst inputRegex = RegExp(`^\\\\d*(?:\\\\\\\\[.])?\\\\d*$`) // match escaped \".\" characters via in a non-capturing group\r\n\r\nexport const Input = React.memo(function InnerInput({\r\n  value,\r\n  onUserInput,\r\n  placeholder,\r\n  ...rest\r\n}: {\r\n  value: string | number\r\n  onUserInput: (input: string) => void\r\n  error?: boolean\r\n  fontSize?: string\r\n  align?: 'right' | 'left'\r\n} & Omit<React.HTMLProps<HTMLInputElement>, 'ref' | 'onChange' | 'as'>) {\r\n  const enforcer = (nextUserInput: string) => {\r\n    if (nextUserInput === '' || inputRegex.test(escapeRegExp(nextUserInput))) {\r\n      onUserInput(nextUserInput)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <StyledInput\r\n      {...rest}\r\n      value={value}\r\n      onChange={event => {\r\n        // replace commas with periods, because uniswap exclusively uses period as the decimal separator\r\n        enforcer(event.target.value.replace(/,/g, '.'))\r\n      }}\r\n      // universal input options\r\n      inputMode=\"decimal\"\r\n      title=\"Token Amount\"\r\n      autoComplete=\"off\"\r\n      autoCorrect=\"off\"\r\n      // text-specific options\r\n      type=\"text\"\r\n      pattern=\"^[0-9]*[.,]?[0-9]*$\"\r\n      placeholder={placeholder || '0.0'}\r\n      minLength={1}\r\n      maxLength={79}\r\n      spellCheck=\"false\"\r\n    />\r\n  )\r\n})\r\n\r\nexport default Input\r\n","import styled from 'styled-components'\r\nimport { Box } from 'rebass/styled-components'\r\n\r\nconst Row = styled(Box)<{ align?: string; padding?: string; border?: string; borderRadius?: string }>`\r\n  width: 100%;\r\n  display: flex;\r\n  padding: 0;\r\n  align-items: ${({ align }) => (align || 'center')};\r\n  padding: ${({ padding }) => padding};\r\n  border: ${({ border }) => border};\r\n  border-radius: ${({ borderRadius }) => borderRadius};\r\n`\r\n\r\nexport const RowBetween = styled(Row)`\r\n  justify-content: space-between;\r\n  margin: 4px 0 4px 0;\r\n`\r\nexport const RowFlat = styled.div`\r\n  display: flex;\r\n  align-items: flex-end;\r\n`\r\n\r\nexport const AutoRow = styled(Row)<{ gap?: string; justify?: string }>`\r\n  flex-wrap: wrap;\r\n  margin: ${({ gap }) => gap && `-${gap}`};\r\n  justify-content: ${({ justify }) => justify && justify};\r\n  & > * {\r\n    margin: ${({ gap }) => gap} !important;\r\n  }\r\n`\r\n\r\nexport const RowFixed = styled(Row)<{ gap?: string; justify?: string }>`\r\n  width: fit-content;\r\n  margin: ${({ gap }) => gap && `-${gap}`};\r\n`\r\n\r\nexport default Row\r\n","import React, { useState, useCallback, useContext } from 'react'\r\nimport { Button, ChevronDownIcon, Dropdown, Text } from '@sparkpointio/sparkswap-uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport styled, { ThemeContext } from 'styled-components'\r\nimport { darken } from 'polished'\r\nimport { IProjects, ITokens } from 'config/constants/type'\r\nimport { StyledImage } from 'pages/Launchpad/components/styled'\r\nimport { Currency } from 'components/types'\r\nimport { Input as NumericalInput } from '../NumericalInput'\r\nimport { RowBetween } from '../Row'\r\nimport CurrencyLogo from '../CurrencyLogo'\r\n\r\nimport useActiveWeb3React from '../../hooks/useActiveWeb3React'\r\n\r\nconst InputRow = styled.div`\r\n  display: flex;\r\n  flex-flow: row nowrap;\r\n  align-items: center;\r\n  padding: 0.75rem 0.75rem 0.75rem 1rem;\r\n`\r\nconst CurrencySelect = styled.button<{ selected: boolean }>`\r\n  align-items: center;\r\n  height: 34px;\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  background-color: transparent;\r\n  color: ${({ selected, theme }) => (selected ? theme.colors.text : '#FFFFFF')};\r\n  border-radius: 12px;\r\n  outline: none;\r\n  cursor: pointer;\r\n  user-select: none;\r\n  border: none;\r\n  padding: 0 0.5rem;\r\n  :focus,\r\n  :hover {\r\n    background-color: ${({ theme }) => darken(0.05, theme.colors.input)};\r\n  }\r\n`\r\n\r\nconst LabelRow = styled.div`\r\n  display: flex;\r\n  flex-flow: row nowrap;\r\n  align-items: center;\r\n  color: ${({ theme }) => theme.colors.text};\r\n  font-size: 0.75rem;\r\n  line-height: 1rem;\r\n  padding: 0.75rem 1rem 0 1rem;\r\n  span:hover {\r\n    cursor: pointer;\r\n    color: ${({ theme }) => darken(0.2, theme.colors.textSubtle)};\r\n  }\r\n`\r\n\r\nconst Aligner = styled.span`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`\r\n\r\nconst InputPanel = styled.div<{ hideInput?: boolean }>`\r\n  display: flex;\r\n  flex-flow: column nowrap;\r\n  position: relative;\r\n  // border-radius: ${({ hideInput }) => (hideInput ? '8px' : '20px')};\r\n  // background-color: ${({ theme }) => theme.colors.background};\r\n  z-index: 1;\r\n`\r\n\r\nconst Container = styled.div<{ hideInput: boolean }>`\r\n  // border-radius: 16px;\r\n  background-color: ${({ theme }) => theme.colors.input};\r\n  box-shadow: ${({ theme }) => theme.shadows.inset};\r\n`\r\n\r\n\r\ninterface CurrencyInputPanelProps {\r\n  value: string\r\n  onUserInput: (value: string) => void\r\n  onMax?: () => void\r\n  showMaxButton: boolean\r\n  label?: string\r\n  currency?: Currency | null\r\n  hideInput?: boolean\r\n  hideBalance?: boolean\r\n  remainingSupply?: string\r\n  id: string\r\n  showCommonBases?: boolean\r\n}\r\n\r\nexport default function CurrencyInputPanel({\r\n    value,\r\n    onUserInput,\r\n    onMax,\r\n    showMaxButton,\r\n    label,\r\n    currency,\r\n    remainingSupply = '',\r\n    hideBalance = false,\r\n    hideInput = false,\r\n    id,\r\n    showCommonBases,\r\n  }: CurrencyInputPanelProps) {\r\n    const [modalOpen, setModalOpen] = useState(false)\r\n    const { account } = useWeb3React()\r\n    // const selectedCurrencyBalance = useCurrencyBalance(account ?? undefined, currency ?? undefined)\r\n    const selectedCurrencyBalance = 22222\r\n    const theme = useContext(ThemeContext)\r\n    const handleDismissSearch = useCallback(() => {\r\n      setModalOpen(false)\r\n    }, [setModalOpen])\r\n\r\n    return (\r\n      <InputPanel id={id}>\r\n        <Text fontSize=\"14px\">{label}</Text>\r\n        <Container hideInput={hideInput}>\r\n          <InputRow style={hideInput ? { padding: '0', borderRadius: '8px' } : {}} >\r\n          <Aligner>\r\n                {/* <CurrencyLogo currency={currency} size=\"24px\" style={{ marginRight: '8px' }} /> */}\r\n                <StyledImage src={`${process.env.PUBLIC_URL}/images/icons/${currency?.symbol?.toLowerCase()}.png`} size=\"24px\" />\r\n                <Text>\r\n                {(currency && currency.symbol && currency.symbol.length > 20\r\n                    ? `${currency.symbol.slice(0, 4)}...${currency.symbol.slice(\r\n                        currency.symbol.length - 5,\r\n                        currency.symbol.length\r\n                      )}`\r\n                    : currency?.symbol)}\r\n                    &nbsp;\r\n                </Text>\r\n            </Aligner>\r\n            {!hideInput && (\r\n              <>\r\n                <NumericalInput\r\n                  className=\"token-amount-input\"\r\n                  value={value}\r\n                  onUserInput={onUserInput}\r\n                />\r\n                {account && currency && showMaxButton && (\r\n                  <Button onClick={onMax} size=\"sm\" variant=\"primary\" style={{maxWidth: '50px', width: '20%', fontSize: '14px'}}>\r\n                    MAX\r\n                  </Button>\r\n                )}\r\n              </>\r\n            )}\r\n          </InputRow>\r\n        </Container>\r\n        {!hideInput && (\r\n\r\n          <RowBetween>\r\n              {account && (\r\n                <Text onClick={onMax} fontSize=\"14px\" style={{ display: 'inline', cursor: 'pointer' }}>\r\n                  {!hideBalance && !!currency\r\n                    ? `Remaining: ${remainingSupply} ${currency.symbol}`\r\n                    : ' -'}\r\n\r\n                </Text>\r\n              )}\r\n          </RowBetween>\r\n\r\n        )}\r\n      </InputPanel>\r\n    )\r\n  }\r\n","import React, { useCallback, useContext, useEffect, useState } from 'react';\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport { TokenAmount } from '@sparkpointio/sparkswap-sdk';\r\nimport { ExternalLink } from 'react-feather';\r\nimport { parseUnits } from '@ethersproject/units';\r\nimport { toast } from 'react-toastify';\r\nimport { useFindProjectByAddress } from 'state/hooks';\r\nimport { useSelectToken } from 'state/tokens/hooks';\r\nimport CurrencyInputPanel from 'components/CurrencyInputPanel';\r\nimport { Button, Flex, Heading, Modal, Text } from '@sparkpointio/sparkswap-uikit';\r\nimport styled, { ThemeContext } from 'styled-components';\r\nimport { SmallstyledImage } from 'pages/Launchpad/components/styled';\r\nimport { useOwnlyLaunchpad } from '../../hooks/useContracts';\r\nimport { BNB, OWN } from '../../config';\r\nimport useActiveWeb3React from '../../hooks/useActiveWeb3React';\r\nimport { expandValue } from '../../utils';\r\nimport { getAccountDetailsLaunchPad } from '../../utils/contractHelpers';\r\n\r\n\r\ninterface AppProps {\r\n    onDismiss?: () => void;\r\n    address: string | null | undefined;\r\n}\r\n\r\nconst ToastTitle = styled(Text)`\r\n    color: #EAE2FC;\r\n    margin-bottom: 4px;\r\n`\r\nconst StyledHeading = styled(Text)`\r\n    color: ${({ theme }) => theme.colors.textSubtle};\r\n`;\r\nconst ActionDiv = styled(Flex)`\r\n    margin-top: 24px;\r\n    display: flex;\r\n    flex-direction: column;\r\n`;\r\n\r\nconst PurchaseModal: React.FC<AppProps> = ({ onDismiss, address }) => {\r\n    const { library } = useActiveWeb3React();\r\n    const { account } = useWeb3React();\r\n    const contract = useOwnlyLaunchpad();\r\n\r\n    const project = useFindProjectByAddress(address);\r\n    const token = useSelectToken(project.buyingCoin.address);\r\n\r\n    const [input, setInput] = useState('');\r\n    const [output, setOutput] = useState('');\r\n    const [accountDetails, setAccountDetails] = useState({\r\n        balance: new TokenAmount(BNB, BigInt(0)),\r\n        amount: new TokenAmount(OWN, BigInt(0)),\r\n        maxPayableAmount: new TokenAmount(OWN, BigInt(0)),\r\n        rewardedAmount: new TokenAmount(OWN, BigInt(0)),\r\n        redeemed: false,\r\n        whitelist: false\r\n    });\r\n\r\n    const [tokenRate, setTokenRate] = useState(new TokenAmount(OWN, BigInt(0)));\r\n    const [remainingExpendable, setRemainingExpendable] = useState(new TokenAmount(OWN, BigInt(0)));\r\n    const [remainingPurchasable, setRemainingPurchasable] = useState(new TokenAmount(OWN, BigInt(0)));\r\n\r\n    /**\r\n     * Sets the input amount and calculates the output\r\n     * @param value\r\n     */\r\n    const handleTypeInput = (value: string) => {\r\n        setInput(value);\r\n        let tokenAmount = new TokenAmount(BNB, expandValue(value, BNB));\r\n        tokenAmount = validateInput(tokenAmount);\r\n        calculateOutput(tokenAmount);\r\n    };\r\n\r\n    /**\r\n     * Sets the output amount and calculates the input\r\n     * @param value\r\n     */\r\n    const handleTypeOutput = (value: string) => {\r\n        setOutput(value);\r\n        let tokenAmount = new TokenAmount(OWN, expandValue(value, OWN));\r\n        tokenAmount = validateOutput(tokenAmount);\r\n        calculateInput(tokenAmount);\r\n    };\r\n\r\n    /**\r\n     * Calculates the input based on the output\r\n     * @param tokenAmount\r\n     */\r\n    const calculateInput = (tokenAmount) => {\r\n        const calculatedInput = new TokenAmount(BNB, expandValue(tokenAmount.multiply(tokenRate).toFixed(18), BNB));\r\n        setInput(calculatedInput.toExact());\r\n\r\n        return calculatedInput;\r\n    };\r\n\r\n    /**\r\n     * Calculates the output based on the input\r\n     * @param tokenAmount\r\n     */\r\n    const calculateOutput = (tokenAmount) => {\r\n        const calculatedOutput = new TokenAmount(BNB, expandValue(tokenAmount.divide(tokenRate).toFixed(18), OWN));\r\n        setOutput(calculatedOutput.toExact());\r\n\r\n        return calculatedOutput;\r\n    };\r\n\r\n    /**\r\n     * Validates if the input does not exceed maxPayable and equivalent output does not exceed remainingSupply\r\n     * @param tokenAmount\r\n     */\r\n    const validateInput = (tokenAmount) => {\r\n        if (calculateOutput(tokenAmount).greaterThan(remainingPurchasable)) {\r\n            tokenAmount = calculateInput(remainingPurchasable);\r\n            calculateOutput(tokenAmount);\r\n        }\r\n\r\n        return tokenAmount;\r\n    };\r\n\r\n    /**\r\n     * Validates if the output does not exceed maxPayable and equivalent output does not exceed remainingSupply\r\n     * @param tokenAmount\r\n     */\r\n    const validateOutput = (tokenAmount) => {\r\n        let equivalentInput = calculateInput(tokenAmount);\r\n\r\n        if (equivalentInput.greaterThan(remainingExpendable)) {\r\n            equivalentInput = validateInput(equivalentInput);\r\n            tokenAmount = calculateOutput(equivalentInput);\r\n        }\r\n\r\n        return tokenAmount;\r\n    };\r\n\r\n    /**\r\n     * Sets and checks the max input\r\n     */\r\n    const handleMaxInput = () => {\r\n        let maxInput = remainingExpendable;\r\n\r\n        maxInput = validateInput(maxInput);\r\n\r\n        setInput(maxInput.toExact());\r\n    };\r\n\r\n    /**\r\n     * Sets and checks the max output\r\n     */\r\n    const handleMaxOutput = () => {\r\n        let maxOutput = remainingPurchasable;\r\n\r\n        maxOutput = validateOutput(maxOutput);\r\n\r\n        setOutput(maxOutput.toExact());\r\n    };\r\n\r\n    /**\r\n     * Initiates buy token\r\n     */\r\n\r\n    const SuccessMessage = ({tx}) => {\r\n        const theme = useContext(ThemeContext);\r\n        const { hash } = tx\r\n        const link = `https://testnet.bscscan.com/tx/${hash}`\r\n        return (\r\n            <Flex alignItems=\"center\" flexDirection=\"column\">\r\n                <ToastTitle>Successfully bought ~ tokens!</ToastTitle>\r\n                <a href={link} style={{fontSize:'12px', textDecoration: 'underline', color: theme.colors.primary}}>View on BscScan <ExternalLink size=\"12px\"/></a>\r\n            </Flex>\r\n        )\r\n    }\r\n\r\n    const handleBuy = async() => {\r\n        try {\r\n            const tx = await contract.buyTokens({value: expandValue(input, BNB)})\r\n            console.log(tx)\r\n            toast.success(<SuccessMessage tx={tx} />, {\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n            })\r\n            getAccountDetailsLaunchPad(contract, project, library, account).then((r) => setAccountDetails(r));\r\n        }\r\n        catch(e) {\r\n            const code = e.code;\r\n            const message = e.data ? e.data.message : e.message;\r\n            toast.error(`${code} ${message}`, {\r\n                position: 'top-right',\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n            });\r\n        }\r\n        // console.log(tx);\r\n        // console.log(`Buying successful ${tx}`)\r\n    };\r\n\r\n    useEffect(() => {\r\n        async function getRemainingPurchasable() {\r\n            const details = await contract.getWhitelist(account);\r\n            const maxPayableAmount = new TokenAmount(OWN, details._maxPayableAmount);\r\n            const rewardedAmount = new TokenAmount(OWN, details._rewardedAmount);\r\n            return maxPayableAmount.subtract(rewardedAmount);\r\n        }\r\n\r\n        const calculateMaxExpendable = (remainingP) => {\r\n            return new TokenAmount(BNB, expandValue(remainingP.multiply(tokenRate).toFixed(18), OWN));\r\n        };\r\n\r\n        getAccountDetailsLaunchPad(contract, project, library, account).then((r) => setAccountDetails(r));\r\n        contract.tokenRate().then((r) => setTokenRate(new TokenAmount(OWN, r)));\r\n        getRemainingPurchasable().then((r) => {\r\n            setRemainingPurchasable(r);\r\n            setRemainingExpendable(calculateMaxExpendable(r));\r\n        });\r\n    }, [account, contract, library, input, output, tokenRate, project]);\r\n\r\n    return (\r\n        <Modal title=\"\" onDismiss={onDismiss}>\r\n            <div style={{ width: '400px', padding: '0px 24px 24px 24px' }}>\r\n                <div style={{ marginBottom: '24px', marginTop: '-24px' }}>\r\n                    <Heading bold fontSize=\"21px\">\r\n                        Swap Coins\r\n                    </Heading>\r\n                    <StyledHeading>{`Max. Allocation is ${accountDetails.maxPayableAmount.toExact()} ${project.symbol}`}</StyledHeading>\r\n                </div>\r\n                <CurrencyInputPanel\r\n                    label=\"From\"\r\n                    id=\"swap-input\"\r\n                    value={input}\r\n                    onUserInput={handleTypeInput}\r\n                    currency={token}\r\n                    showMaxButton\r\n                    onMax={handleMaxInput}\r\n                    remainingSupply={remainingExpendable.toExact()}\r\n                />\r\n                <CurrencyInputPanel\r\n                    showMaxButton\r\n                    onMax={handleMaxOutput}\r\n                    label=\"To\"\r\n                    id=\"swap-input\"\r\n                    value={output}\r\n                    onUserInput={handleTypeOutput}\r\n                    currency={project}\r\n                    remainingSupply={remainingPurchasable.toExact()}\r\n                />\r\n                <ActionDiv>\r\n                    <Button onClick={handleBuy} fullWidth>\r\n                        Swap\r\n                    </Button>\r\n                </ActionDiv>\r\n                <ActionDiv>\r\n                    <Text>My Allocations</Text>\r\n                    <Flex alignItems=\"center\" marginTop=\"12px\">\r\n                        <SmallstyledImage src={`${process.env.PUBLIC_URL}/images/icons/${project?.symbol?.toLowerCase()}.png`} />\r\n                        <Text color=\"textSubtle\">{`${accountDetails.rewardedAmount.toExact()} ${project.symbol}`}</Text>\r\n                    </Flex>\r\n                </ActionDiv>\r\n            </div>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default PurchaseModal;\r\n","import { useAppSelector, useAppDispatch } from \"state/hooks\";\r\n\r\n\r\nexport const useAllTokens = () => useAppSelector((state) => state.tokens.data);\r\nexport const useSelectToken = (address: string | undefined) => useAppSelector((state) => state.tokens.data.find(t => t.address === address));","import styled from 'styled-components'\r\nimport { Card, CardHeader, CardBody, Button, Flex, Text} from '@sparkpointio/sparkswap-uikit';\r\nimport { SocmedGroup, ProgressGroup, DataGroup } from '../components/styled';\r\n\r\nexport const CCont = styled(Card)`\r\n    width: 100%;\r\n`;\r\nexport const CHeader = styled(CardHeader)<{ src?: string }>`\r\n    \r\n    display: flex;\r\n    align-items: center;\r\n    height: auto;\r\n    min-height: 10vh;\r\n    max-height: 15vh;\r\n    ${({ src }) => src &&`\r\n      background-image: url(${src});\r\n      background-repeat: no-repeat;\r\n      background-attachment: scroll;\r\n      background-position: 95% 15%;\r\n      background-size: cover;\r\n    `}\r\n`;\r\n\r\nexport const TokenImage = styled.img`\r\n    border-radius: 50%;\r\n    width: 60px;\r\n    height: 60px;\r\n    margin: 10px 15px;\r\n`;\r\n\r\nexport const SmalltokenImage = styled.img`\r\n    border-radius: 50%;\r\n    width: 30px;\r\n    height: 30px;\r\n    margin: 10px 15px;\r\n`;\r\n\r\nexport const CBody = styled(CardBody)`\r\n    padding: 20px;\r\n`;\r\n\r\nexport const StyledButton = styled(Button)`\r\n    cursor: context-menu;\r\n    height: 35px;\r\n    border-radius: 5px;\r\n`;\r\n\r\nexport const CustomDataGroup = styled(DataGroup)`\r\n    &:before {\r\n        content: '';\r\n        border-top: 5px solid ${({ theme }) => theme.colors.primary};\r\n        padding-top: 10px;\r\n        margin-bottom: 10px;\r\n    }\r\n    &:after {\r\n        content: '';\r\n        border-bottom: 5px solid ${({ theme }) => theme.colors.primary};\r\n        padding-bottom: 10px;\r\n        margin-top: 10px;\r\n    }\r\n`;\r\n\r\nexport const CFooter = styled(Flex)`\r\n    width: 100%;\r\n    min-height: 20vh;\r\n    height: auto;\r\n    padding: 25px;\r\n`;\r\n\r\nconst TableDiv = styled(Flex)`\r\n    width: 100%;\r\n    max-width: 720px;\r\n`\r\n\r\nexport const TBHeader = styled(TableDiv)``;\r\nexport const TBBody = styled(TableDiv)`\r\n    margin-top: 10px;\r\n`;\r\n\r\nexport const TextDescription = styled(Text)`\r\n    margin: 10px 5px\r\n`\r\n","import { Flex, Button, Heading, Text } from '@sparkpointio/sparkswap-uikit';\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport { IPoolInformation, IProjects, ITokens } from 'config/constants/type';\r\nimport React, { useContext, useState, useCallback } from 'react';\r\nimport styled, { ThemeContext } from 'styled-components';\r\nimport { CustomThemeContext } from 'ThemeContext';\r\nimport { TBHeader, TBBody } from './styled';\r\n\r\nconst Container = styled(Flex)`\r\n    margin: 10px;\r\n    width: 100%;\r\n    height: auto;\r\n`;\r\n\r\nconst NavOptions = styled(Button)<{ activeIndex: boolean }>`\r\n    background-color: transparent;\r\n    color: ${({ theme, activeIndex }) => (activeIndex ? theme.colors.text : theme.colors.textSubtle)};\r\n    border-bottom: ${({ theme, activeIndex }) => activeIndex && `3px solid ${theme.colors.primary}`};\r\n`;\r\n\r\ntype AppProps = {\r\n    pool: IPoolInformation;\r\n    project: IProjects;\r\n    buyingToken?: ITokens;\r\n}\r\n\r\nconst FooterNav = ({ activeIndex = 0, handleClick}: { activeIndex?: number; handleClick: (i:number) => void }) => {\r\n    const theme = useContext(ThemeContext);\r\n    const customTheme = useContext(CustomThemeContext);\r\n    return (\r\n        <Flex alignItems=\"center\" style={{ margin: '10px 10px 0px 10px', padding: '20px 20px 0px 20px' }}>\r\n            <NavOptions activeIndex={activeIndex === 0} onClick={() => handleClick(0)}>Project Details</NavOptions>\r\n            {/* <NavOptions activeIndex={activeIndex === 1} onClick={() => handleClick(1)}>Schedule</NavOptions>\r\n            <NavOptions activeIndex={activeIndex === 2} onClick={() => handleClick(2)}>Your Allocation</NavOptions> */}\r\n        </Flex>\r\n    );\r\n};\r\n\r\nconst AllocationSection = () => {\r\n    return (\r\n        <Flex margin=\"20px\" padding=\"20px\" flexDirection=\"column\">\r\n            <TBHeader justifyContent=\"space-between\" >\r\n                <Text bold>No.</Text>\r\n                <Text bold>Token Allocation</Text>\r\n                <Text bold>Date</Text>\r\n                <Text bold>Token(s) claimed</Text>\r\n                <Text bold>Action</Text>\r\n            </TBHeader>\r\n            <TBBody justifyContent=\"space-between\" >\r\n                <Text color=\"textSubtle\">001</Text>\r\n                <Text color=\"textSubtle\">159662.6 OWN</Text>\r\n                <Text color=\"textSubtle\">06/24/2021</Text>\r\n                <Text color=\"textSubtle\">OWNLY</Text>\r\n                <Text color=\"textSubtle\">SWAP</Text>\r\n            </TBBody>\r\n        </Flex>\r\n    )\r\n}\r\n\r\nconst FooterDetails: React.FC<AppProps> = ({pool, project}) => {\r\n    const theme = useContext(ThemeContext);\r\n    const { account } = useWeb3React();\r\n    const customTheme = useContext(CustomThemeContext);\r\n    const [ activeIndex , setActive ] = useState<number>(0);\r\n    const { open, close, cap, totalUserParticipated, totalFundsSwapped } = pool;\r\n    const handleClick = useCallback((i) => {\r\n        setActive(i)\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <Container\r\n            style={{ backgroundColor: theme.isDark ? customTheme.customColors?.BG1 : customTheme.customColors?.BG2 }}\r\n            flexDirection=\"column\"\r\n        >\r\n            <div style={{ marginBottom: '10px', borderBottom: `1px solid ${theme.colors.primary}` }}>\r\n                <FooterNav handleClick={handleClick} activeIndex={activeIndex} />\r\n            </div>\r\n            { activeIndex === 0 && <Flex padding=\"20px\" margin=\"20px\" justifyContent=\"space-between\">\r\n                <Flex flex=\"1\" flexDirection=\"column\" marginRight=\"10px\">\r\n                    <Heading margin=\"10px 0px 30px 0\" bold>\r\n                        Pool Information\r\n                    </Heading>\r\n                    <Flex justifyContent=\"space-between\">\r\n                        <Text>Opens</Text>\r\n                        <Text color=\"textSubtle\">{open}</Text>\r\n                    </Flex>\r\n                    <Flex justifyContent=\"space-between\">\r\n                        <Text>Closes</Text>\r\n                        <Text color=\"textSubtle\">{close}</Text>\r\n                    </Flex>\r\n                    <Flex justifyContent=\"space-between\">\r\n                        <Text>Cap</Text>\r\n                        <Text color=\"textSubtle\">{cap} {project.buyingCoin.symbol}</Text>\r\n                    </Flex>\r\n                    <Flex justifyContent=\"space-between\">\r\n                        <Text>Total Users Participated</Text>\r\n                        <Text color=\"textSubtle\">{totalUserParticipated}</Text>\r\n                    </Flex>\r\n                    <Flex justifyContent=\"space-between\">\r\n                        <Text>Total Funds Swapped</Text>\r\n                        <Text color=\"textSubtle\">{totalFundsSwapped} {project.buyingCoin.symbol}</Text>\r\n                    </Flex>\r\n                </Flex>\r\n                <Flex flex=\"1\" marginLeft=\"10px\" flexDirection=\"column\">\r\n                    <Heading margin=\"10px 0px 30px 0px\" bold>\r\n\r\n                        Token Information\r\n                    </Heading>\r\n                    <Flex justifyContent=\"space-between\">\r\n                        <Text>Name</Text>\r\n                        <Text color=\"textSubtle\">{project.title}</Text>\r\n                    </Flex>\r\n                    <Flex justifyContent=\"space-between\">\r\n                        <Text>Token Symbol</Text>\r\n                        <Text color=\"textSubtle\">{project.symbol}</Text>\r\n                    </Flex>\r\n                    <Flex justifyContent=\"space-between\">\r\n                        <Text>Total Supply</Text>\r\n                        <Text color=\"textSubtle\">{project.ownSale}</Text>\r\n                    </Flex>\r\n                </Flex>\r\n            </Flex>\r\n            }\r\n            {\r\n                account && activeIndex === 2 && (\r\n                    <AllocationSection />\r\n                )\r\n            }\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default FooterDetails;\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport {TokenAmount} from \"@sparkpointio/sparkswap-sdk\";\r\nimport styled, { ThemeContext } from 'styled-components';\r\nimport { Globe, Twitter, Send } from 'react-feather';\r\nimport {\r\n    Card,\r\n    Flex,\r\n    Heading,\r\n    Button,\r\n    CardBody,\r\n    CardHeader,\r\n    Text,\r\n    Progress,\r\n    CardFooter,\r\n    useModal,\r\n} from '@sparkpointio/sparkswap-uikit';\r\nimport { useAccountWhiteList, useFindProjectByAddress, useGetPoolsByAddress, useFindProject } from 'state/hooks';\r\nimport { IProjects, ITokens, STATE } from 'config/constants/type';\r\nimport SvgIcon from 'components/SvgIcon';\r\nimport UnlockButton from 'components/ConnectWalletButton';\r\nimport { StyledHr2 as Divider } from 'components/Divider';\r\nimport PurchaseModal from 'components/Modals/PurchaseModal';\r\nimport { CustomThemeContext } from 'ThemeContext';\r\nimport { SocmedGroup, ProgressGroup } from '../components/styled';\r\nimport { ReactComponent as MediumIcon } from '../components/icons/MediumIcon.svg';\r\nimport Anchor from '../components/StyledLink';\r\nimport FooterDetails from './FooterDetails';\r\nimport { CCont, CHeader, TokenImage, SmalltokenImage, CBody, StyledButton, CustomDataGroup, CFooter, TextDescription } from './styled'\r\nimport {calculateLaunchpadStats, getAccountDetailsLaunchPad} from \"../../../utils/contractHelpers\";\r\nimport {useLaunchpadContract} from \"../../../hooks/useContracts\";\r\nimport useActiveWeb3React from \"../../../hooks/useActiveWeb3React\";\r\nimport {BNB, OWN} from \"../../../config\";\r\n\r\n\r\n\r\ntype AppProps = {\r\n    project: IProjects\r\n}\r\ntype ActionProps = AppProps & {account?: string | null; whiteListed?: boolean}\r\n\r\nconst Allocations: React.FC<{tokenImage:string; symbol: string; allocation:string}> = ({tokenImage, symbol, allocation}) => {\r\n    const srcs = `${process.env.PUBLIC_URL}/images/icons/${tokenImage}`;\r\n    return (\r\n        <div style={{ marginTop: '20px' }}>\r\n            <Text>My Allocations</Text>\r\n            <div style={{ display: 'flex', alignItems: 'center' }}>\r\n                <SmalltokenImage src={srcs} alt=\"token-logo\" />\r\n                <Text bold>{allocation} {symbol}</Text>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst ActionCard: React.FC<ActionProps> = ({ account, whiteListed, project}) => {\r\n    const theme = useContext(ThemeContext);\r\n    const customTheme = useContext(CustomThemeContext);\r\n    const Paddress = useFindProject();\r\n    const [ onPurchaseModal ] = useModal(<PurchaseModal address={Paddress} />)\r\n    const [stats, setStats] = useState({\r\n        totalForSaleTokens: '-',\r\n        totalSoldTokens: '-',\r\n        remainingForSale: '-',\r\n        totalSales: '-',\r\n        expectedSales: '-',\r\n        percentage: '-',\r\n        tokenRate: '-'\r\n    })\r\n    const [accountDetails, setAccountDetails] = useState({\r\n        balance: new TokenAmount(project.buyingCoin, BigInt(0)),\r\n        amount: new TokenAmount(project.sellingCoin, BigInt(0)),\r\n        maxPayableAmount: new TokenAmount(project.sellingCoin, BigInt(0)),\r\n        maxExpendable: new TokenAmount(project.buyingCoin, BigInt(0)),\r\n        rewardedAmount: new TokenAmount(project.sellingCoin, BigInt(0)),\r\n        redeemed: false,\r\n        whitelist: false,\r\n    })\r\n    const {library} = useActiveWeb3React();\r\n\r\n    const contract = useLaunchpadContract(project.category)\r\n\r\n    useEffect(() => {\r\n        calculateLaunchpadStats(contract, project).then(r => setStats(r));\r\n        getAccountDetailsLaunchPad(contract, project, library, account).then(r => setAccountDetails(r)).catch(console.log)\r\n    }, [contract, project, account, library])\r\n\r\n    const tokenReport = {\r\n        title: `${project.progress} ${project.symbol}`,\r\n    }\r\n\r\n    return (\r\n        <CardBody\r\n            style={{\r\n                width: '100%',\r\n                backgroundColor: theme.isDark ? customTheme.customColors?.BG1 : customTheme.customColors?.BG2,\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                justifyContent: 'space-around',\r\n            }}\r\n        >\r\n            <ProgressGroup>\r\n                <Text bold as=\"h1\" fontSize=\"24px\">\r\n                    {stats.totalSoldTokens} {project.sellingCoin.name} Sold\r\n                </Text>\r\n                <Progress primaryStep={parseInt(stats.percentage)} variant=\"flat\" />\r\n                <Flex justifyContent=\"space-between\">\r\n                    <Text color=\"textSubtle\">{stats.percentage}%</Text>\r\n                    <Text color=\"textSubtle\">\r\n                        {stats.totalSales} / {stats.expectedSales} {project.buyingCoin.symbol}\r\n                    </Text>\r\n                </Flex>\r\n            </ProgressGroup>\r\n            <CustomDataGroup flexDirection=\"column\">\r\n                <Flex justifyContent=\"space-between\">\r\n                    <Text color=\"textSubtle\">OWNLY Price</Text>\r\n                    <Text>{stats.tokenRate} {project.buyingCoin.symbol}</Text>\r\n                </Flex>\r\n                <Flex justifyContent=\"space-between\">\r\n                    <Text color=\"textSubtle\">OWNLY Sold</Text>\r\n                    <Text>{stats.totalSoldTokens} {project.sellingCoin.symbol}</Text>\r\n                </Flex>\r\n                <Flex justifyContent=\"space-between\">\r\n                    <Text color=\"textSubtle\">Total Raised</Text>\r\n                    <Text>{stats.totalSales} {project.buyingCoin.symbol}</Text>\r\n                </Flex>\r\n                <Flex justifyContent=\"space-between\">\r\n                    <Text color=\"primary\">Max Allocation</Text>\r\n                    <Text>{accountDetails.maxPayableAmount.toExact()} {project.sellingCoin.symbol}</Text>\r\n                </Flex>\r\n                <Flex justifyContent=\"space-between\">\r\n                    <Text color=\"primary\">Max BNB</Text>\r\n                    <Text>{accountDetails.maxExpendable.toExact()} BNB</Text>\r\n                </Flex>\r\n            </CustomDataGroup>\r\n            {!account ? (\r\n                <div style={{ marginTop: '15px', padding: '10px 0px' }}>\r\n                    <UnlockButton fullWidth />\r\n                </div>\r\n            ) : !whiteListed ? (\r\n                <Allocations tokenImage={project.image} symbol={project.symbol} allocation={accountDetails.rewardedAmount.toExact()}/>\r\n            ) : (\r\n                <>\r\n                <Allocations tokenImage={project.image} symbol={project.symbol} allocation={accountDetails.rewardedAmount.toExact()} />\r\n                <Button onClick={onPurchaseModal} fullWidth style={{marginTop: '10px'}}>Purchase {project.symbol}</Button>\r\n                </>\r\n            )}\r\n        </CardBody>\r\n    );\r\n};\r\n\r\n\r\nconst ProjectComponent: React.FC = () => {\r\n    const { account } = useWeb3React();\r\n    const [whiteListed, setWhiteList] = useState(false);\r\n    const Paddress = useFindProject();\r\n    const project = useFindProjectByAddress(Paddress);\r\n    const userAddress = account? account.toLowerCase() : '';\r\n    const acc = useAccountWhiteList(userAddress);\r\n    const pool = useGetPoolsByAddress(Paddress);\r\n    const { title, image, longDesc, longDesc2, longDesc3, buyingCoin, socMeds, wallpaperBg, status } = project;\r\n    const srcs = `${process.env.PUBLIC_URL}/images/icons/${image}`;\r\n\r\n\r\n    useEffect(() => {\r\n        if (acc[0][0]) {\r\n            setWhiteList(true);\r\n        } else setWhiteList(false);\r\n    }, [acc]);\r\n\r\n    const theme = useContext(ThemeContext);\r\n    const srcsBg = `${process.env.PUBLIC_URL}/images/icons/${wallpaperBg}`;\r\n    return (\r\n        <CCont>\r\n            <CHeader src={srcsBg}>\r\n                <TokenImage src={srcs} alt=\"token-image\" />\r\n                <Heading bold fontSize=\"24px\">\r\n                    {title}\r\n                </Heading>\r\n            </CHeader>\r\n            <CBody>\r\n                <Flex justifyContent=\"space-between\">\r\n                    <Flex flex=\"1\" flexDirection=\"column\" padding=\"10px\">\r\n                        <Flex alignItems=\"center\" justifyContent=\"space-between\" marginTop=\"-20px\" marginBottom=\"10px\" padding=\"10px 0px\">\r\n                            <SocmedGroup>\r\n                                <Anchor href={socMeds?.[0]}>\r\n                                    <Globe />\r\n                                </Anchor>\r\n                                <Anchor href={socMeds?.[1]}>\r\n                                    <Twitter fill={theme.colors.text} />\r\n                                </Anchor>\r\n                                <Anchor href={socMeds?.[2]}>\r\n                                    <Send fill={theme.colors.text} />\r\n                                </Anchor>\r\n                                <Anchor href={socMeds?.[3]}>\r\n                                    <SvgIcon width={24} Icon={MediumIcon} />\r\n                                </Anchor>\r\n                            </SocmedGroup>\r\n                            {status === STATE.active ? (\r\n                                <StyledButton style={{ backgroundColor: '#32a31b' }}>LIVE NOW</StyledButton>\r\n                            ) : status === STATE.upcoming ? (\r\n                                <StyledButton style={{ backgroundColor: '#7a1ba3' }}>UPCOMING</StyledButton>\r\n                            ) : (\r\n                                <StyledButton style={{ backgroundColor: '#8e98a5' }}>COMPLETED</StyledButton>\r\n                            )}\r\n                        </Flex>\r\n                        <Flex flexDirection=\"column\" justifyContent=\"space-between\">\r\n                        <TextDescription color=\"textSubtle\" as=\"p\">\r\n                            {longDesc}\r\n                        </TextDescription>\r\n                        <TextDescription color=\"textSubtle\" as=\"p\">\r\n                            {longDesc2}\r\n                        </TextDescription>\r\n                        <TextDescription color=\"textSubtle\" as=\"p\">\r\n                            {longDesc3}\r\n                        </TextDescription>\r\n                        </Flex>\r\n                    </Flex>\r\n                    <Flex flex=\"1\">\r\n                        <ActionCard\r\n                        account={account}\r\n                        whiteListed={whiteListed}\r\n                        project={project}\r\n                        />\r\n                    </Flex>\r\n                </Flex>\r\n            </CBody>\r\n            <CFooter>\r\n                <FooterDetails pool={pool} project={project} />\r\n            </CFooter>\r\n        </CCont>\r\n    );\r\n};\r\n\r\nexport default ProjectComponent;\r\n","import React, { useCallback, useEffect, useMemo, useState } from 'react'\r\nimport { RouteComponentProps, Link } from 'react-router-dom';\r\nimport { ArrowRight, ChevronLeft } from 'react-feather';\r\nimport { Heading, Flex, Text, Breadcrumbs, Button } from '@sparkpointio/sparkswap-uikit'\r\nimport { useAppSelector, useFindProject as findProject, useFindProjectByAddress as findProjectByAddress, useSetProject as setProject } from 'state/hooks'\r\nimport styled from 'styled-components';\r\nimport Page from 'components/layout/Page';\r\nimport ProjectComponent from './ProjectComponent';\r\n\r\nconst Container = styled(Flex)`\r\n    flex-direction: column;\r\n    align-items: center;\r\n    padding: 20px;\r\n    max-width: 1200px;\r\n    width: 100%;\r\n    margin: 0 auto;\r\n`\r\nconst BackButton = styled(Link)`\r\n    display: flex;\r\n    align-items: center;\r\n    color: ${({theme}) => theme.colors.text};\r\n`\r\n\r\nconst Layout: React.FC <RouteComponentProps<{ProjectAddress?: string}>> = ({ match: {params: { ProjectAddress }}})  => {\r\n    const data = setProject(ProjectAddress)\r\n    const project = useAppSelector((state) => state.projects.data.find(p => p.address === data));\r\n\r\n\r\n    return (\r\n        <Page>\r\n            <Container>\r\n                <Flex style={{width: '100%', minHeight: '10vh'}} flexDirection=\"column\"  justifyContent=\"space-between\" marginTop=\"20px\" padding=\"5px 0px\">\r\n                <Heading fontSize=\"24px\" bold> SparkLaunch </Heading>\r\n                {/* <Flex justifyContent=\"flex-end\" style={{width: '100%'}}></Flex> */}\r\n                <Flex justifyContent=\"space-between\" marginBottom=\"3px\">\r\n                <Breadcrumbs>\r\n                    <Text>SparkLaunch</Text>\r\n                    <Text>On Going</Text>\r\n                    <Text>{project?.symbol}</Text>\r\n                </Breadcrumbs>\r\n                    <BackButton to='/projects'><ChevronLeft /> PROJECTS </BackButton>\r\n                </Flex>\r\n\r\n                </Flex>\r\n                <ProjectComponent />\r\n            </Container>\r\n        </Page>\r\n    )\r\n}\r\n\r\nexport default Layout;\r\n"],"sourceRoot":""}