{"version":3,"sources":["components/NumericalInput/index.tsx","components/Row/index.tsx","components/CurrencyInputPanel/index.tsx","components/Modals/PurchaseModal.tsx","state/tokens/hooks.ts","pages/Launchpad/Project/styled.ts","pages/Launchpad/Project/FooterDetails.tsx","pages/Launchpad/Project/ProjectComponent.tsx","pages/Launchpad/Project/Layout.tsx"],"names":["StyledInput","styled","input","error","theme","colors","failure","text","align","textSubtle","inputRegex","RegExp","Input","React","memo","value","onUserInput","placeholder","rest","onChange","event","nextUserInput","target","replace","test","escapeRegExp","inputMode","title","autoComplete","autoCorrect","type","pattern","minLength","maxLength","spellCheck","Row","Box","padding","border","borderRadius","RowBetween","InputRow","div","gap","justify","Aligner","button","selected","darken","span","InputPanel","hideInput","background","Container","shadows","inset","CurrencyInputPanel","onMax","showMaxButton","label","currency","remainingSupply","hideBalance","id","showCommonBases","useState","setModalOpen","account","useWeb3React","useContext","ThemeContext","useCallback","fontSize","style","src","process","symbol","toLowerCase","size","length","slice","className","onClick","variant","maxWidth","width","display","cursor","ToastTitle","Text","StyledHeading","ActionDiv","Flex","PurchaseModal","onDismiss","address","category","library","useActiveWeb3React","contract","useLaunchpadContract","project","useFindProjectByAddress","token","useAppSelector","state","tokens","data","find","t","useSelectToken","buyingCoin","setInput","output","setOutput","balance","TokenAmount","BigInt","amount","sellingCoin","maxPayableAmount","rewardedAmount","redeemed","whitelist","accountDetails","setAccountDetails","tokenRate","setTokenRate","remainingExpendable","setRemainingExpendable","remainingPurchasable","setRemainingPurchasable","calculateInput","tokenAmount","calculatedInput","expandValue","multiply","toFixed","toExact","calculateOutput","calculatedOutput","divide","validateInput","greaterThan","validateOutput","SuccessMessage","tx","hash","link","alignItems","flexDirection","href","textDecoration","color","primary","handleBuy","a","buyTokens","BNB","toast","success","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","getAccountDetailsLaunchPad","res","code","message","position","useEffect","getWhitelist","details","_maxPayableAmount","_rewardedAmount","subtract","calc","num","match","then","r","getRemainingPurchasable","remainingP","_balance","raw","toString","catch","e","console","log","marginBottom","marginTop","bold","maxInput","maxOutput","fullWidth","CCont","Card","CHeader","CardHeader","TokenImage","img","SmalltokenImage","CBody","CardBody","StyledButton","Button","CustomDataGroup","DataGroup","CFooter","TableDiv","TBHeader","TBBody","TextDescription","NavOptions","activeIndex","FooterNav","handleClick","CustomThemeContext","margin","AllocationSection","justifyContent","FooterDetails","pool","projectTokenInfo","customTheme","setActive","open","close","cap","totalUserParticipated","totalFundsSwapped","i","cat2","category2","contract2","totalForSaleTokens","totalSoldTokens","remainingForSale","totalSales","expectedSales","percentage","totalParticipants","stats","setStats","checkEnded","ended","round1","calculateLaunchpadStats","round2","parseFloat","backgroundColor","isDark","customColors","BG1","BG2","borderBottom","flex","marginRight","status","STATE","active","startDate","toLocaleString","endDate","upcoming","marginLeft","totalSupply","usePrevious","ref","useRef","current","Allocations","tokenImage","allocation","srcs","alt","ActionCard","whiteListed","Paddress","getFindProject","maxExpendable","poolEnded","setPoolEnded","_cat2","prevAccountDetails","prevStats","useModal","onPurchaseModal","as","primaryStep","completed","image","disabled","ProjectComponent","setWhiteList","history","useHistory","push","acc","useAccountWhiteList","useGetPoolsByAddress","longDesc","longDesc2","longDesc3","socMeds","wallpaperBg","setProjectTokenInfo","tokenContract","useTokenContract","groupSeparator","srcsBg","fill","SvgIcon","Icon","MediumIcon","claimable","distributionType","mt","mb","fontStyle","BackButton","Link","Layout","ProjectAddress","params","setProject","projects","p","Page","minHeight","to"],"mappings":"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","file":"static/js/16.fb933554.chunk.js","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { escapeRegExp } from '../../utils'\r\n\r\nconst StyledInput = styled.input<{ error?: boolean; fontSize?: string; align?: string }>`\r\n  color: ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.text)};\r\n  width: 0;\r\n  position: relative;\r\n  font-weight: 500;\r\n  outline: none;\r\n  border: none;\r\n  flex: 1 1 auto;\r\n  background-color: transparent;\r\n  font-size: 16px;\r\n  text-align: ${({ align }) => align && align};\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  padding: 0px;\r\n  -webkit-appearance: textfield;\r\n  ::-webkit-search-decoration {\r\n    -webkit-appearance: none;\r\n  }\r\n  [type='number'] {\r\n    -moz-appearance: textfield;\r\n  }\r\n  ::-webkit-outer-spin-button,\r\n  ::-webkit-inner-spin-button {\r\n    -webkit-appearance: none;\r\n  }\r\n  ::placeholder {\r\n    color: ${({ theme }) => theme.colors.textSubtle};\r\n  }\r\n`\r\n\r\nconst inputRegex = RegExp(`^\\\\d*(?:\\\\\\\\[.])?\\\\d*$`) // match escaped \".\" characters via in a non-capturing group\r\n\r\nexport const Input = React.memo(function InnerInput({\r\n  value,\r\n  onUserInput,\r\n  placeholder,\r\n  ...rest\r\n}: {\r\n  value: string | number\r\n  onUserInput: (input: string) => void\r\n  error?: boolean\r\n  fontSize?: string\r\n  align?: 'right' | 'left'\r\n} & Omit<React.HTMLProps<HTMLInputElement>, 'ref' | 'onChange' | 'as'>) {\r\n  const enforcer = (nextUserInput: string) => {\r\n    if (nextUserInput === '' || inputRegex.test(escapeRegExp(nextUserInput))) {\r\n      onUserInput(nextUserInput)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <StyledInput\r\n      {...rest}\r\n      value={value}\r\n      onChange={event => {\r\n        // replace commas with periods, because uniswap exclusively uses period as the decimal separator\r\n        enforcer(event.target.value.replace(/,/g, '.'))\r\n      }}\r\n      // universal input options\r\n      inputMode=\"decimal\"\r\n      title=\"Token Amount\"\r\n      autoComplete=\"off\"\r\n      autoCorrect=\"off\"\r\n      // text-specific options\r\n      type=\"text\"\r\n      pattern=\"^[0-9]*[.,]?[0-9]*$\"\r\n      placeholder={placeholder || '0.0'}\r\n      minLength={1}\r\n      maxLength={79}\r\n      spellCheck=\"false\"\r\n    />\r\n  )\r\n})\r\n\r\nexport default Input\r\n","import styled from 'styled-components'\r\nimport { Box } from 'rebass/styled-components'\r\n\r\nconst Row = styled(Box)<{ align?: string; padding?: string; border?: string; borderRadius?: string }>`\r\n  width: 100%;\r\n  display: flex;\r\n  padding: 0;\r\n  align-items: ${({ align }) => (align || 'center')};\r\n  padding: ${({ padding }) => padding};\r\n  border: ${({ border }) => border};\r\n  border-radius: ${({ borderRadius }) => borderRadius};\r\n`\r\n\r\nexport const RowBetween = styled(Row)`\r\n  justify-content: space-between;\r\n  margin: 4px 0 4px 0;\r\n`\r\nexport const RowFlat = styled.div`\r\n  display: flex;\r\n  align-items: flex-end;\r\n`\r\n\r\nexport const AutoRow = styled(Row)<{ gap?: string; justify?: string }>`\r\n  flex-wrap: wrap;\r\n  margin: ${({ gap }) => gap && `-${gap}`};\r\n  justify-content: ${({ justify }) => justify && justify};\r\n  & > * {\r\n    margin: ${({ gap }) => gap} !important;\r\n  }\r\n`\r\n\r\nexport const RowFixed = styled(Row)<{ gap?: string; justify?: string }>`\r\n  width: fit-content;\r\n  margin: ${({ gap }) => gap && `-${gap}`};\r\n`\r\n\r\nexport default Row\r\n","import React, { useState, useCallback, useContext } from 'react'\r\nimport { Button, ChevronDownIcon, Dropdown, Text } from '@sparkpointio/sparkswap-uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport styled, { ThemeContext } from 'styled-components'\r\nimport { darken } from 'polished'\r\nimport { IProjects, ITokens } from 'config/constants/type'\r\nimport { StyledImage } from 'pages/Launchpad/components/styled'\r\nimport { Currency } from 'components/types'\r\nimport { Input as NumericalInput } from '../NumericalInput'\r\nimport { RowBetween } from '../Row'\r\nimport CurrencyLogo from '../CurrencyLogo'\r\n\r\nimport useActiveWeb3React from '../../hooks/useActiveWeb3React'\r\n\r\nconst InputRow = styled.div`\r\n  display: flex;\r\n  flex-flow: row nowrap;\r\n  align-items: center;\r\n  padding: 0.75rem 0.75rem 0.75rem 1rem;\r\n`\r\nconst CurrencySelect = styled.button<{ selected: boolean }>`\r\n  align-items: center;\r\n  height: 34px;\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  background-color: transparent;\r\n  color: ${({ selected, theme }) => (selected ? theme.colors.text : '#FFFFFF')};\r\n  border-radius: 12px;\r\n  outline: none;\r\n  cursor: pointer;\r\n  user-select: none;\r\n  border: none;\r\n  padding: 0 0.5rem;\r\n  :focus,\r\n  :hover {\r\n    background-color: ${({ theme }) => darken(0.05, theme.colors.input)};\r\n  }\r\n`\r\n\r\nconst LabelRow = styled.div`\r\n  display: flex;\r\n  flex-flow: row nowrap;\r\n  align-items: center;\r\n  color: ${({ theme }) => theme.colors.text};\r\n  font-size: 0.75rem;\r\n  line-height: 1rem;\r\n  padding: 0.75rem 1rem 0 1rem;\r\n  span:hover {\r\n    cursor: pointer;\r\n    color: ${({ theme }) => darken(0.2, theme.colors.textSubtle)};\r\n  }\r\n`\r\n\r\nconst Aligner = styled.span`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`\r\n\r\nconst InputPanel = styled.div<{ hideInput?: boolean }>`\r\n  display: flex;\r\n  flex-flow: column nowrap;\r\n  position: relative;\r\n  // border-radius: ${({ hideInput }) => (hideInput ? '8px' : '20px')};\r\n  // background-color: ${({ theme }) => theme.colors.background};\r\n  z-index: 1;\r\n`\r\n\r\nconst Container = styled.div<{ hideInput: boolean }>`\r\n  // border-radius: 16px;\r\n  background-color: ${({ theme }) => theme.colors.input};\r\n  box-shadow: ${({ theme }) => theme.shadows.inset};\r\n`\r\n\r\n\r\ninterface CurrencyInputPanelProps {\r\n  value: string\r\n  onUserInput: (value: string) => void\r\n  onMax?: () => void\r\n  showMaxButton: boolean\r\n  label?: string\r\n  currency?: Currency | null\r\n  hideInput?: boolean\r\n  hideBalance?: boolean\r\n  remainingSupply?: string\r\n  id: string\r\n  showCommonBases?: boolean\r\n}\r\n\r\nexport default function CurrencyInputPanel({\r\n    value,\r\n    onUserInput,\r\n    onMax,\r\n    showMaxButton,\r\n    label,\r\n    currency,\r\n    remainingSupply = '',\r\n    hideBalance = false,\r\n    hideInput = false,\r\n    id,\r\n    showCommonBases,\r\n  }: CurrencyInputPanelProps) {\r\n    const [modalOpen, setModalOpen] = useState(false)\r\n    const { account } = useWeb3React()\r\n    // const selectedCurrencyBalance = useCurrencyBalance(account ?? undefined, currency ?? undefined)\r\n    const selectedCurrencyBalance = 22222\r\n    const theme = useContext(ThemeContext)\r\n    const handleDismissSearch = useCallback(() => {\r\n      setModalOpen(false)\r\n    }, [setModalOpen])\r\n\r\n    return (\r\n      <InputPanel id={id}>\r\n        <Text fontSize=\"14px\">{label}</Text>\r\n        <Container hideInput={hideInput}>\r\n          <InputRow style={hideInput ? { padding: '0', borderRadius: '8px' } : {}} >\r\n          <Aligner>\r\n                {/* <CurrencyLogo currency={currency} size=\"24px\" style={{ marginRight: '8px' }} /> */}\r\n                <StyledImage src={`${process.env.PUBLIC_URL}/images/icons/${currency?.symbol?.toLowerCase()}.png`} size=\"24px\" />\r\n                <Text>\r\n                {(currency && currency.symbol && currency.symbol.length > 20\r\n                    ? `${currency.symbol.slice(0, 4)}...${currency.symbol.slice(\r\n                        currency.symbol.length - 5,\r\n                        currency.symbol.length\r\n                      )}`\r\n                    : currency?.symbol)}\r\n                    &nbsp;\r\n                </Text>\r\n            </Aligner>\r\n            {!hideInput && (\r\n              <>\r\n                <NumericalInput\r\n                  className=\"token-amount-input\"\r\n                  value={value}\r\n                  onUserInput={onUserInput}\r\n                />\r\n                {account && currency && showMaxButton && (\r\n                  <Button onClick={onMax} size=\"sm\" variant=\"primary\" style={{maxWidth: '50px', width: '20%', fontSize: '14px'}}>\r\n                    MAX\r\n                  </Button>\r\n                )}\r\n              </>\r\n            )}\r\n          </InputRow>\r\n        </Container>\r\n        {!hideInput && (\r\n\r\n          <RowBetween>\r\n              {account && (\r\n                <Text onClick={onMax} fontSize=\"14px\" style={{ display: 'inline', cursor: 'pointer' }}>\r\n                  {!hideBalance && !!currency\r\n                    ? `Remaining: ${remainingSupply} ${currency.symbol}`\r\n                    : ' -'}\r\n\r\n                </Text>\r\n              )}\r\n          </RowBetween>\r\n\r\n        )}\r\n      </InputPanel>\r\n    )\r\n  }\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport { TokenAmount } from '@sparkpointio/sparkswap-sdk';\r\nimport { ExternalLink } from 'react-feather';\r\nimport { toast } from 'react-toastify';\r\nimport { useFindProjectByAddress } from 'state/hooks';\r\nimport { useSelectToken } from 'state/tokens/hooks';\r\nimport CurrencyInputPanel from 'components/CurrencyInputPanel';\r\nimport { Button, Flex, Heading, Modal, Text } from '@sparkpointio/sparkswap-uikit';\r\nimport styled, { ThemeContext } from 'styled-components';\r\nimport { SmallstyledImage } from 'pages/Launchpad/components/styled';\r\nimport { useLaunchpadContract } from '../../hooks/useContracts';\r\nimport { BNB } from '../../config';\r\nimport useActiveWeb3React from '../../hooks/useActiveWeb3React';\r\nimport { expandValue } from '../../utils';\r\nimport { getAccountDetailsLaunchPad } from '../../utils/contractHelpers';\r\n\r\n\r\ninterface Stats {\r\n    totalForSaleTokens: string;\r\n    totalSoldTokens: string;\r\n    remainingForSale: string;\r\n    totalSales: string;\r\n    expectedSales: string;\r\n    percentage: string;\r\n    tokenRate: string;\r\n    totalParticipants: string;\r\n}\r\n\r\ninterface AppProps {\r\n    onDismiss?: () => void;\r\n    address: string | null | undefined;\r\n    stats: Stats;\r\n    category: string;\r\n}\r\n\r\nconst ToastTitle = styled(Text)`\r\n  color: #EAE2FC;\r\n  margin-bottom: 4px;\r\n`;\r\nconst StyledHeading = styled(Text)`\r\n  color: ${({ theme }) => theme.colors.textSubtle};\r\n`;\r\nconst ActionDiv = styled(Flex)`\r\n  margin-top: 24px;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst PurchaseModal: React.FC<AppProps> = ({ onDismiss, address, category }) => {\r\n    const { library } = useActiveWeb3React();\r\n    const { account } = useWeb3React();\r\n    const contract = useLaunchpadContract(category);\r\n    const project = useFindProjectByAddress(address);\r\n    const token = useSelectToken(project.buyingCoin.address);\r\n    const [input, setInput] = useState('');\r\n    const [output, setOutput] = useState('');\r\n    const [accountDetails, setAccountDetails] = useState({\r\n        balance: new TokenAmount(project.buyingCoin, BigInt(0)),\r\n        amount: new TokenAmount(project.sellingCoin, BigInt(0)),\r\n        maxPayableAmount: new TokenAmount(project.sellingCoin, BigInt(0)),\r\n        rewardedAmount: new TokenAmount(project.sellingCoin, BigInt(0)),\r\n        redeemed: false,\r\n        whitelist: false,\r\n    });\r\n\r\n    const [tokenRate, setTokenRate] = useState(new TokenAmount(project.sellingCoin, BigInt(0)));\r\n    const [remainingExpendable, setRemainingExpendable] = useState(new TokenAmount(project.sellingCoin, BigInt(0)));\r\n    const [remainingPurchasable, setRemainingPurchasable] = useState(new TokenAmount(project.sellingCoin, BigInt(0)));\r\n    /**\r\n     * Sets the input amount and calculates the output\r\n     * @param value\r\n     */\r\n    const handleTypeInput = (value: string) => {\r\n        setInput(value);\r\n        let tokenAmount = new TokenAmount(project.buyingCoin, expandValue(value, project.buyingCoin));\r\n        tokenAmount = validateInput(tokenAmount);\r\n        calculateOutput(tokenAmount);\r\n    };\r\n\r\n    /**\r\n     * Sets the output amount and calculates the input\r\n     * @param value\r\n     */\r\n    const handleTypeOutput = (value: string) => {\r\n        setOutput(value);\r\n        let tokenAmount = new TokenAmount(project.sellingCoin, expandValue(value, project.sellingCoin));\r\n        tokenAmount = validateOutput(tokenAmount);\r\n        calculateInput(tokenAmount);\r\n    };\r\n\r\n    /**\r\n     * Calculates the input based on the output\r\n     * @param tokenAmount\r\n     */\r\n    const calculateInput = (tokenAmount) => {\r\n        const calculatedInput = new TokenAmount(project.buyingCoin, expandValue(tokenAmount.multiply(tokenRate).toFixed(18), project.buyingCoin));\r\n        setInput(calculatedInput.toExact());\r\n\r\n        return calculatedInput;\r\n    };\r\n\r\n    /**\r\n     * Calculates the output based on the input\r\n     * @param tokenAmount\r\n     */\r\n    const calculateOutput = (tokenAmount) => {\r\n        const calculatedOutput = new TokenAmount(project.buyingCoin, expandValue(tokenAmount.divide(tokenRate).toFixed(18), project.buyingCoin));\r\n        setOutput(calculatedOutput.toExact());\r\n\r\n        return calculatedOutput;\r\n    };\r\n\r\n    /**\r\n     * Validates if the input does not exceed remainingExpandable and equivalent output does not exceed remainingPurchasable\r\n     * @param tokenAmount\r\n     */\r\n    const validateInput = (tokenAmount) => {\r\n        const equivalentOutput = calculateOutput(tokenAmount);\r\n\r\n        if (equivalentOutput.greaterThan(remainingPurchasable)) {\r\n            tokenAmount = calculateInput(remainingPurchasable);\r\n            calculateOutput(tokenAmount);\r\n        }\r\n\r\n        return tokenAmount;\r\n    };\r\n\r\n    /**\r\n     * Validates if the output does not exceed remainingPurchasable and equivalent input does not exceed remainingExpandable\r\n     * @param tokenAmount\r\n     */\r\n    const validateOutput = (tokenAmount) => {\r\n        const equivalentInput = calculateInput(tokenAmount);\r\n\r\n        if (equivalentInput.greaterThan(remainingExpendable)) {\r\n            tokenAmount = calculateOutput(remainingExpendable);\r\n            calculateInput(tokenAmount);\r\n        }\r\n\r\n        return tokenAmount;\r\n    };\r\n\r\n    /**\r\n     * Sets and checks the max input\r\n     */\r\n    const handleMaxInput = () => {\r\n        let maxInput = remainingExpendable;\r\n\r\n        maxInput = validateInput(maxInput);\r\n\r\n        setInput(maxInput.toExact());\r\n    };\r\n\r\n    /**\r\n     * Sets and checks the max output\r\n     */\r\n    const handleMaxOutput = () => {\r\n        let maxOutput = remainingPurchasable;\r\n\r\n        maxOutput = validateOutput(maxOutput);\r\n\r\n        setOutput(maxOutput.toExact());\r\n    };\r\n\r\n    /**\r\n     * Initiates buy token\r\n     */\r\n\r\n    const SuccessMessage = ({ tx, value, symbol }) => {\r\n        const theme = useContext(ThemeContext);\r\n        const { hash } = tx;\r\n        const link = `https://bscscan.com/tx/${hash}`;\r\n        return (\r\n            <Flex alignItems='center' flexDirection='column'>\r\n                <ToastTitle>{`Successfully bought ~ ${value} ${symbol} tokens!`}</ToastTitle>\r\n                <a href={link} style={{ fontSize: '12px', textDecoration: 'underline', color: theme.colors.primary }}>View\r\n                    on BscScan <ExternalLink size='12px' /></a>\r\n            </Flex>\r\n        );\r\n    };\r\n\r\n    const handleBuy = async () => {\r\n        try {\r\n            const tx = await contract.buyTokens({ value: expandValue(input, BNB) });\r\n            toast.success(<SuccessMessage tx={tx} value={output} symbol={project.symbol} />, {\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n            });\r\n            const res = await getAccountDetailsLaunchPad(contract, project, library, account);\r\n            setAccountDetails(res);\r\n        } catch (e) {\r\n            const code = e.code;\r\n            const message = e.data ? e.data.message : e.message;\r\n            toast.error(`${code} ${message}`, {\r\n                position: 'top-right',\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n            });\r\n        }\r\n        // console.log(tx);\r\n        // console.log(`Buying successful ${tx}`)\r\n    };\r\n\r\n    useEffect(() => {\r\n        async function getRemainingPurchasable() {\r\n            const details = await contract.getWhitelist(account);\r\n            const maxPayableAmount = new TokenAmount(project.sellingCoin, details._maxPayableAmount);\r\n            const rewardedAmount = new TokenAmount(project.sellingCoin, details._rewardedAmount);\r\n            return maxPayableAmount.subtract(rewardedAmount);\r\n        }\r\n\r\n        const calc = (num) => {\r\n            return num.match(/^-?\\d+(?:\\.\\d{0,18})?/)[0];\r\n        };\r\n\r\n\r\n        const calculateMaxExpendable = (remainingP) => {\r\n            return new TokenAmount(project.buyingCoin, expandValue(calc(remainingP.multiply(tokenRate).toFixed(19)), project.buyingCoin));\r\n        };\r\n\r\n\r\n        const calculateMaxPurchasable = (remainingP) => {\r\n            const tokenAmount = new TokenAmount(project.buyingCoin, expandValue(calc(remainingP.divide(tokenRate).toFixed(19)), project.sellingCoin));\r\n            return tokenAmount;\r\n        };\r\n\r\n        getAccountDetailsLaunchPad(contract, project, library, account).then((r) => setAccountDetails(r));\r\n        contract.tokenRate().then((r) => setTokenRate(new TokenAmount(project.buyingCoin, r)));\r\n        getRemainingPurchasable().then((r) => {\r\n            const _balance = new TokenAmount(project.sellingCoin, (r.raw.toString()));\r\n            setRemainingPurchasable(_balance);\r\n            setRemainingExpendable(calculateMaxExpendable(_balance));\r\n        }).catch(e => console.log(e));\r\n\r\n        return () => console.log('');\r\n    }, [account, contract, library, input, output, tokenRate, project]);\r\n\r\n    useEffect(() => {\r\n        return console.log('');\r\n    }, []);\r\n\r\n    return (\r\n        <Modal title='' onDismiss={onDismiss}>\r\n            <div style={{ width: '400px', padding: '0px 24px 24px 24px' }}>\r\n                <div style={{ marginBottom: '24px', marginTop: '-24px' }}>\r\n                    <Heading bold fontSize='21px'>\r\n                        Swap Coins\r\n                    </Heading>\r\n                    <StyledHeading>{`Remaining: ${remainingPurchasable.toExact()} ${project.symbol}`}</StyledHeading>\r\n                </div>\r\n                <CurrencyInputPanel\r\n                    label='From'\r\n                    id='swap-input'\r\n                    value={input}\r\n                    onUserInput={handleTypeInput}\r\n                    currency={token}\r\n                    showMaxButton\r\n                    onMax={handleMaxInput}\r\n                    remainingSupply={remainingExpendable.toExact()}\r\n                />\r\n                <CurrencyInputPanel\r\n                    showMaxButton\r\n                    onMax={handleMaxOutput}\r\n                    label='To'\r\n                    id='swap-input'\r\n                    value={output}\r\n                    onUserInput={handleTypeOutput}\r\n                    currency={project}\r\n                    remainingSupply={remainingPurchasable.toExact()}\r\n                />\r\n\r\n                {/* <Text>Price per BNB: <Priceperbnb/> USD</Text> */}\r\n                <Text color='#FFFFFF'>{`Price: ${tokenRate.toExact()} ${project.symbol} per BNB `}</Text>\r\n\r\n                <ActionDiv>\r\n                    <Button onClick={handleBuy} fullWidth>\r\n                        Swap\r\n                    </Button>\r\n                </ActionDiv>\r\n                <ActionDiv>\r\n                    <Text>My Allocations</Text>\r\n                    <Flex alignItems='center' marginTop='12px'>\r\n                        <SmallstyledImage\r\n                            src={`${process.env.PUBLIC_URL}/images/icons/${project?.symbol?.toLowerCase()}.png`} />\r\n                        <Text color='textSubtle'>{`${accountDetails.rewardedAmount.toExact()} ${project.symbol}`}</Text>\r\n                    </Flex>\r\n                </ActionDiv>\r\n            </div>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default PurchaseModal;\r\n","import { useAppSelector, useAppDispatch } from \"state/hooks\";\r\n\r\n\r\nexport const useAllTokens = () => useAppSelector((state) => state.tokens.data);\r\nexport const useSelectToken = (address: string | undefined) => useAppSelector((state) => state.tokens.data.find(t => t.address === address));","import styled from 'styled-components'\r\nimport { Card, CardHeader, CardBody, Button, Flex, Text} from '@sparkpointio/sparkswap-uikit';\r\nimport { SocmedGroup, ProgressGroup, DataGroup } from '../components/styled';\r\n\r\nexport const CCont = styled(Card)`\r\n    width: 100%;\r\n`;\r\nexport const CHeader = styled(CardHeader)<{ src?: string }>`\r\n    \r\n    display: flex;\r\n    align-items: center;\r\n    height: auto;\r\n    min-height: 10vh;\r\n    max-height: 15vh;\r\n    ${({ src }) => src &&`\r\n      background-image: url(${src});\r\n      background-repeat: no-repeat;\r\n      background-attachment: scroll;\r\n      background-position: 95% 15%;\r\n      background-size: cover;\r\n    `}\r\n`;\r\n\r\nexport const TokenImage = styled.img`\r\n    border-radius: 50%;\r\n    width: 60px;\r\n    height: 60px;\r\n    margin: 10px 15px;\r\n`;\r\n\r\nexport const SmalltokenImage = styled.img`\r\n    border-radius: 50%;\r\n    width: 30px;\r\n    height: 30px;\r\n    margin: 10px 15px;\r\n`;\r\n\r\nexport const CBody = styled(CardBody)`\r\n    padding: 20px;\r\n`;\r\n\r\nexport const StyledButton = styled(Button)`\r\n    cursor: context-menu;\r\n    height: 35px;\r\n    border-radius: 5px;\r\n`;\r\n\r\nexport const CustomDataGroup = styled(DataGroup)`\r\n    &:before {\r\n        content: '';\r\n        border-top: 5px solid ${({ theme }) => theme.colors.primary};\r\n        padding-top: 10px;\r\n        margin-bottom: 10px;\r\n    }\r\n    &:after {\r\n        content: '';\r\n        border-bottom: 5px solid ${({ theme }) => theme.colors.primary};\r\n        padding-bottom: 10px;\r\n        margin-top: 10px;\r\n    }\r\n`;\r\n\r\nexport const CFooter = styled(Flex)`\r\n    width: 100%;\r\n    min-height: 20vh;\r\n    height: auto;\r\n    padding: 25px;\r\n`;\r\n\r\nconst TableDiv = styled(Flex)`\r\n    width: 100%;\r\n    max-width: 720px;\r\n`\r\n\r\nexport const TBHeader = styled(TableDiv)``;\r\nexport const TBBody = styled(TableDiv)`\r\n    margin-top: 10px;\r\n`;\r\n\r\nexport const TextDescription = styled(Text)`\r\n    margin: 10px 5px\r\n`\r\n","import { Flex, Button, Heading, Text } from '@sparkpointio/sparkswap-uikit';\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport { IPoolInformation, IProjects, ITokens, STATE } from 'config/constants/type';\r\nimport React, { useContext, useState, useCallback, useEffect } from 'react';\r\nimport styled, { ThemeContext } from 'styled-components';\r\nimport { CustomThemeContext } from 'ThemeContext';\r\nimport useActiveWeb3React from \"hooks/useActiveWeb3React\";\r\nimport {useLaunchpadContract} from \"hooks/useContracts\";\r\nimport {calculateLaunchpadStats, checkEnded, getAccountDetailsLaunchPad} from \"utils/contractHelpers\";\r\nimport { TBHeader, TBBody } from './styled';\r\n\r\n\r\nconst Container = styled(Flex)`\r\n    margin: 10px;\r\n    width: 100%;\r\n    height: auto;\r\n`;\r\n\r\nconst NavOptions = styled(Button)<{ activeIndex: boolean }>`\r\n    background-color: transparent;\r\n    color: ${({ theme, activeIndex }) => (activeIndex ? theme.colors.text : theme.colors.textSubtle)};\r\n    border-bottom: ${({ theme, activeIndex }) => activeIndex && `3px solid ${theme.colors.primary}`};\r\n`;\r\n\r\ninterface Stats {\r\n    totalForSaleTokens: string;\r\n    totalSoldTokens: string;\r\n    remainingForSale: string;\r\n    totalSales: string;\r\n    expectedSales: string;\r\n    percentage: string;\r\n    tokenRate: string;\r\n    totalParticipants: string;\r\n}\r\n\r\ntype AppProps = {\r\n    pool: IPoolInformation;\r\n    project: IProjects;\r\n    buyingToken?: ITokens;\r\n    projectTokenInfo?: any;\r\n}\r\n\r\nconst FooterNav = ({ activeIndex = 0, handleClick}: { activeIndex?: number; handleClick: (i:number) => void }) => {\r\n    const theme = useContext(ThemeContext);\r\n    const customTheme = useContext(CustomThemeContext);\r\n    return (\r\n        <Flex alignItems=\"center\" style={{ margin: '10px 10px 0px 10px', padding: '20px 20px 0px 20px' }}>\r\n            <NavOptions activeIndex={activeIndex === 0} onClick={() => handleClick(0)}>Project Details</NavOptions>\r\n            {/* <NavOptions activeIndex={activeIndex === 1} onClick={() => handleClick(1)}>Schedule</NavOptions>\r\n            <NavOptions activeIndex={activeIndex === 2} onClick={() => handleClick(2)}>Your Allocation</NavOptions> */}\r\n        </Flex>\r\n    );\r\n};\r\n\r\nconst AllocationSection = () => {\r\n    return (\r\n        <Flex margin=\"20px\" padding=\"20px\" flexDirection=\"column\">\r\n            <TBHeader justifyContent=\"space-between\" >\r\n                <Text bold>No.</Text>\r\n                <Text bold>Token Allocation</Text>\r\n                <Text bold>Date</Text>\r\n                <Text bold>Token(s) claimed</Text>\r\n                <Text bold>Action</Text>\r\n            </TBHeader>\r\n            <TBBody justifyContent=\"space-between\" >\r\n                <Text color=\"textSubtle\">001</Text>\r\n                <Text color=\"textSubtle\">159662.6 OWN</Text>\r\n                <Text color=\"textSubtle\">06/24/2021</Text>\r\n                <Text color=\"textSubtle\">OWNLY</Text>\r\n                <Text color=\"textSubtle\">SWAP</Text>\r\n            </TBBody>\r\n        </Flex>\r\n    )\r\n}\r\n\r\nconst FooterDetails: React.FC<AppProps> = ({pool, project, projectTokenInfo}) => {\r\n    const theme = useContext(ThemeContext);\r\n    const { account } = useWeb3React();\r\n    const customTheme = useContext(CustomThemeContext);\r\n    const [ activeIndex , setActive ] = useState<number>(0);\r\n    const { open, close, cap, totalUserParticipated, totalFundsSwapped } = pool;\r\n    const handleClick = useCallback((i) => {\r\n        setActive(i)\r\n    }, [])\r\n\r\n    const {library} = useActiveWeb3React();\r\n\r\n    const contract = useLaunchpadContract(project.category);\r\n    const cat2 = project.category2 ?? project.category;\r\n    const contract2 = useLaunchpadContract(cat2);\r\n    const _cat2 = contract2 ?? contract;\r\n\r\n    const [stats, setStats] = useState({\r\n        totalForSaleTokens: '-',\r\n        totalSoldTokens: '-',\r\n        remainingForSale: '-',\r\n        totalSales: '-',\r\n        expectedSales: '-',\r\n        percentage: '00.00',\r\n        tokenRate: '-',\r\n        totalParticipants: '-'\r\n    })\r\n\r\n    useEffect(() => {\r\n        checkEnded(contract, contract2).then((ended) => {\r\n            if (!ended.round1) {\r\n                calculateLaunchpadStats(contract, project).then((r) => setStats(r));\r\n            }\r\n            if (ended.round1 && project.category2 && !ended.round2) {\r\n                calculateLaunchpadStats(contract2, project).then((r) => setStats(r));\r\n            }\r\n            if (ended.round1 && project.category2 && ended.round2){\r\n                calculateLaunchpadStats(contract, project, contract2).then((r) => setStats(r));\r\n            }\r\n        }).catch(e => console.log(e));\r\n        // getAccountDetailsLaunchPad(contract, project, library, account).then(r => setAccountDetails(r)).catch(console.log)\r\n    }, [contract, contract2, project, account, library])\r\n\r\n    const totalSales = parseFloat(stats.totalSales).toFixed(4)\r\n    return (\r\n        <Container\r\n            style={{ backgroundColor: theme.isDark ? customTheme.customColors?.BG1 : customTheme.customColors?.BG2 }}\r\n            flexDirection=\"column\"\r\n        >\r\n            <div style={{ marginBottom: '10px', borderBottom: `1px solid ${theme.colors.primary}` }}>\r\n                <FooterNav handleClick={handleClick} activeIndex={activeIndex} />\r\n            </div>\r\n            { activeIndex === 0 && <Flex padding=\"20px\" margin=\"20px\" justifyContent=\"space-between\">\r\n                <Flex flex=\"1\" flexDirection=\"column\" marginRight=\"10px\">\r\n                    <Heading margin=\"10px 0px 30px 0\" bold>\r\n                        Pool Information\r\n                    </Heading>\r\n\r\n                    {project.status === STATE.active && <Flex justifyContent='space-between'>\r\n                        <Text>Round Number</Text>\r\n                        <Text color='textSubtle'>{project.category2 ? '2' : '1'}</Text>\r\n                    </Flex>}\r\n\r\n                    <Flex justifyContent=\"space-between\">\r\n                        <Text>Opens</Text>\r\n                        <Text color=\"textSubtle\">{project.startDate?.toLocaleString()}</Text>\r\n                    </Flex>\r\n                    <Flex justifyContent=\"space-between\">\r\n                        <Text>Closes</Text>\r\n                        <Text color=\"textSubtle\">{project.endDate?.toLocaleString()}</Text>\r\n                    </Flex>\r\n                    <Flex justifyContent=\"space-between\">\r\n                        <Text>Cap</Text>\r\n                        <Text color=\"textSubtle\">{project.status === STATE.upcoming ? '-' : stats.expectedSales} {project.buyingCoin.symbol}</Text>\r\n                    </Flex>\r\n                    <Flex justifyContent=\"space-between\">\r\n                        <Text>Total Users Participated</Text>\r\n                        <Text color=\"textSubtle\">{project.status === STATE.upcoming ? '-' : stats.totalParticipants}</Text>\r\n                    </Flex>\r\n                    <Flex justifyContent=\"space-between\">\r\n                        <Text>Total Funds Swapped</Text>\r\n                        <Text color=\"textSubtle\">{project.status === STATE.upcoming ? '-' : totalSales} {project.buyingCoin.symbol}</Text>\r\n                    </Flex>\r\n                </Flex>\r\n                <Flex flex=\"1\" marginLeft=\"10px\" flexDirection=\"column\">\r\n                    <Heading margin=\"10px 0px 30px 0px\" bold>\r\n                        Token Information\r\n                    </Heading>\r\n                    <Flex justifyContent=\"space-between\">\r\n                        <Text>Name</Text>\r\n                        <Text color=\"textSubtle\">{project.title}</Text>\r\n                    </Flex>\r\n                    <Flex justifyContent=\"space-between\">\r\n                        <Text>Token Symbol</Text>\r\n                        <Text color=\"textSubtle\">{project.symbol}</Text>\r\n                    </Flex>\r\n                    <Flex justifyContent=\"space-between\">\r\n                        <Text>Total Supply</Text>\r\n\r\n                        {/* Total supply value for Upcoming Projects is set to [-] */}\r\n                        <Text color=\"textSubtle\">\r\n                            {project.status === \"upcoming\" ? \"-\" : projectTokenInfo.totalSupply}\r\n                        </Text>\r\n\r\n                    </Flex>\r\n                </Flex>\r\n            </Flex>\r\n            }\r\n            {\r\n                account && activeIndex === 2 && (\r\n                    <AllocationSection />\r\n                )\r\n            }\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default FooterDetails;\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport { TokenAmount } from '@sparkpointio/sparkswap-sdk';\r\nimport { ThemeContext } from 'styled-components';\r\nimport { Globe, Send, Twitter } from 'react-feather';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Button, CardBody, Flex, Heading, Progress, Text, useModal } from '@sparkpointio/sparkswap-uikit';\r\nimport {\r\n    useAccountWhiteList,\r\n    useFindProject as getFindProject,\r\n    useFindProjectByAddress,\r\n    useGetPoolsByAddress,\r\n} from 'state/hooks';\r\nimport { IProjects, STATE } from 'config/constants/type';\r\nimport SvgIcon from 'components/SvgIcon';\r\nimport UnlockButton from 'components/ConnectWalletButton';\r\nimport PurchaseModal from 'components/Modals/PurchaseModal';\r\nimport { CustomThemeContext } from 'ThemeContext';\r\nimport { ProgressGroup, SocmedGroup } from '../components/styled';\r\nimport { ReactComponent as MediumIcon } from '../components/icons/MediumIcon.svg';\r\nimport Anchor from '../components/StyledLink';\r\nimport FooterDetails from './FooterDetails';\r\nimport {\r\n    CBody,\r\n    CCont,\r\n    CFooter,\r\n    CHeader,\r\n    CustomDataGroup,\r\n    SmalltokenImage,\r\n    StyledButton,\r\n    TextDescription,\r\n    TokenImage,\r\n} from './styled';\r\nimport { calculateLaunchpadStats, checkEnded, getAccountDetailsLaunchPad } from '../../../utils/contractHelpers';\r\nimport { useLaunchpadContract, useTokenContract } from '../../../hooks/useContracts';\r\nimport useActiveWeb3React from '../../../hooks/useActiveWeb3React';\r\n\r\ntype AppProps = {\r\n    project: IProjects;\r\n};\r\ntype ActionProps = AppProps & {\r\n    account?: string | null;\r\n    whiteListed?: boolean;\r\n};\r\n\r\n// Hook\r\nexport function usePrevious(value) {\r\n    // The ref object is a generic container whose current property is mutable ...\r\n    // ... and can hold any value, similar to an instance property on a class\r\n    const ref = React.useRef();\r\n    // Store current value in ref\r\n    useEffect(() => {\r\n        ref.current = value;\r\n    }, [value]); // Only re-run if value changes\r\n    // Return previous value (happens before update in useEffect above)\r\n    return ref.current;\r\n}\r\n\r\nconst Allocations: React.FC<{ tokenImage: string; symbol: string; allocation: string }> = ({\r\n    tokenImage,\r\n    symbol,\r\n    allocation,\r\n}) => {\r\n    const srcs = `${process.env.PUBLIC_URL}/images/icons/${tokenImage}`;\r\n    return (\r\n        <div style={{ marginTop: '20px' }}>\r\n            {}\r\n            <Text>My Allocations</Text>\r\n            <div style={{ display: 'flex', alignItems: 'center' }}>\r\n                <SmalltokenImage src={srcs} alt=\"token-logo\" />\r\n                <Text bold>\r\n                    {allocation} {symbol}\r\n                </Text>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst ActionCard: React.FC<ActionProps> = ({ account, whiteListed, project }) => {\r\n    const theme = useContext(ThemeContext);\r\n    const customTheme = useContext(CustomThemeContext);\r\n    const Paddress = getFindProject();\r\n    const [stats, setStats] = useState({\r\n        totalForSaleTokens: '-',\r\n        totalSoldTokens: '-',\r\n        remainingForSale: '-',\r\n        totalSales: '-',\r\n        expectedSales: '-',\r\n        percentage: '00.00',\r\n        tokenRate: '-',\r\n        totalParticipants: '-',\r\n    });\r\n    const [accountDetails, setAccountDetails] = useState({\r\n        balance: new TokenAmount(project.buyingCoin, BigInt(0)),\r\n        amount: new TokenAmount(project.sellingCoin, BigInt(0)),\r\n        maxPayableAmount: new TokenAmount(project.sellingCoin, BigInt(0)),\r\n        maxExpendable: new TokenAmount(project.buyingCoin, BigInt(0)),\r\n        rewardedAmount: new TokenAmount(project.sellingCoin, BigInt(0)),\r\n        redeemed: false,\r\n        whitelist: false,\r\n    });\r\n\r\n    const [poolEnded, setPoolEnded] = useState(false);\r\n    const { library } = useActiveWeb3React();\r\n\r\n    const contract = useLaunchpadContract(project.category);\r\n    const cat2 = project.category2 ?? project.category;\r\n    const contract2 = useLaunchpadContract(cat2);\r\n    const _cat2 = contract2 ?? contract;\r\n\r\n    const prevAccountDetails = usePrevious(accountDetails);\r\n    const prevStats =usePrevious(stats);\r\n    useEffect(() => {\r\n        if ((accountDetails !== prevAccountDetails) || (stats !== prevStats)) {\r\n            getAccountDetailsLaunchPad(_cat2, project, library, account)\r\n                .then((r) => setAccountDetails(r))\r\n                .catch(console.log);\r\n\r\n            checkEnded(contract, contract2)\r\n                .then((ended) => {\r\n                    if (ended.round1 && !project.category2) {\r\n                        setPoolEnded(true);\r\n                    }\r\n                    if (ended.round2 && project.category2) {\r\n                        setPoolEnded(true);\r\n                    }\r\n                    if (!ended.round1) {\r\n                        calculateLaunchpadStats(contract, project).then((r) => setStats(r));\r\n                    }\r\n                    if (ended.round1 && project.category2 && !ended.round2) {\r\n                        calculateLaunchpadStats(contract2, project).then((r) => setStats(r));\r\n                    }\r\n                    if (ended.round1 && project.category2 && ended.round2) {\r\n                        calculateLaunchpadStats(contract, project, contract2).then((r) => setStats(r));\r\n                    }\r\n                })\r\n                .catch((e) => console.log(e));\r\n\r\n               \r\n        }\r\n    }, [account, library, contract, contract2, project, _cat2, accountDetails, prevAccountDetails, prevStats, stats]);\r\n\r\n    const [onPurchaseModal] = useModal(<PurchaseModal address={Paddress} stats={stats} category={cat2} />, false);\r\n    useEffect(() => () => console.log(''), []);\r\n\r\n    const percentage = parseFloat(stats.percentage).toFixed(4);\r\n    const totalSoldTokens = parseFloat(stats.totalSoldTokens).toFixed(4);\r\n    const totalSales = parseFloat(stats.totalSales).toFixed(4);\r\n    const expectedSales = parseFloat(stats.expectedSales).toFixed(2);\r\n    const { status } = project;\r\n\r\n    return (\r\n        <CardBody\r\n            style={{\r\n                width: '100%',\r\n                backgroundColor: theme.isDark ? customTheme.customColors?.BG1 : customTheme.customColors?.BG2,\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                justifyContent: 'space-around',\r\n            }}\r\n        >\r\n            <ProgressGroup>\r\n                <Text bold as=\"h1\" fontSize=\"24px\">\r\n                    {project.status === STATE.upcoming ? '-' : totalSoldTokens}{' '}\r\n                    <span style={{ color: theme.colors.textSubtle }}>{project.symbol} Token Sold</span>\r\n                </Text>\r\n                <Progress\r\n                    primaryStep={parseFloat(project.status === STATE.upcoming ? '' : percentage)}\r\n                    variant=\"flat\"\r\n                />\r\n                <Flex justifyContent=\"space-between\">\r\n                    <Text color=\"textSubtle\">{project.status === STATE.upcoming ? '-' : percentage}%</Text>\r\n                    <Text color=\"textSubtle\">\r\n                        {project.status === STATE.upcoming ? '-' : totalSales} /{' '}\r\n                        {project.status === STATE.upcoming ? '-' : expectedSales} {project.buyingCoin.symbol}\r\n                    </Text>\r\n                </Flex>\r\n            </ProgressGroup>\r\n            <CustomDataGroup flexDirection=\"column\">\r\n                <Flex justifyContent=\"space-between\">\r\n                    <Text color=\"textSubtle\">{project.symbol} Price</Text>\r\n                    <Text>\r\n                        {project.status === STATE.upcoming ? '-' : stats.tokenRate} {project.buyingCoin.symbol}\r\n                    </Text>\r\n                </Flex>\r\n                <Flex justifyContent=\"space-between\">\r\n                    <Text color=\"textSubtle\">{project.symbol} Sold</Text>\r\n                    <Text>\r\n                        {project.status === STATE.upcoming ? '-' : stats.totalSoldTokens} {project.symbol}\r\n                    </Text>\r\n                </Flex>\r\n                <Flex justifyContent=\"space-between\">\r\n                    <Text color=\"textSubtle\">Total Raised</Text>\r\n                    <Text>\r\n                        {project.status === STATE.upcoming ? '-' : stats.totalSales} {project.buyingCoin.symbol}\r\n                    </Text>\r\n                </Flex>\r\n                <Flex justifyContent=\"space-between\">\r\n                    <Text color=\"primary\">Your Max Allocation</Text>\r\n                    <Text>\r\n                        {project.status === STATE.upcoming || project.status === STATE.completed\r\n                            ? `- ${project.symbol}`\r\n                            : project.category !== project.category2 || !project.category2\r\n                            ? `${accountDetails.maxPayableAmount.toExact()} ${project.symbol}`\r\n                            : 'No limit'}\r\n                    </Text>\r\n                </Flex>\r\n                <Flex justifyContent=\"space-between\">\r\n                    <Text color=\"primary\">Your Max BNB</Text>\r\n                    {/* <Text>{accountDetails.maxExpendable.toExact()} BNB</Text> */}\r\n                    {project.status === STATE.upcoming && !whiteListed ? (\r\n                        <Text>0 BNB</Text>\r\n                    ) : project.status === STATE.completed ? (\r\n                        <Text>- BNB</Text>\r\n                    ) : (\r\n                        <Text>\r\n                            {project.category !== project.category2 || !project.category2\r\n                                ? `${accountDetails.maxExpendable.toExact()} BNB`\r\n                                : 'No Limit'}{' '}\r\n                        </Text>\r\n                    )}\r\n                </Flex>\r\n            </CustomDataGroup>\r\n            {!account && status === STATE.active ? (\r\n                <div style={{ marginTop: '15px', padding: '10px 0px' }}>\r\n                    <UnlockButton fullWidth />\r\n                </div>\r\n            ) : !whiteListed ? (\r\n                <Allocations\r\n                    tokenImage={project.image}\r\n                    symbol={project.symbol}\r\n                    allocation={project.status === STATE.upcoming ? '0' : accountDetails.rewardedAmount.toExact()}\r\n                />\r\n            ) : (\r\n                <>\r\n                    {/* {!project.claimable ?\r\n                <div>\r\n                    {stats.remainingForSale === '-' ? <Button fullWidth disabled style={{marginTop: '10px', marginBottom: '10px'}}>Processing </Button> :\r\n                    <Button onClick={onPurchaseModal} fullWidth style={{marginTop: '10px', marginBottom: '10px'}} >Purchase {project.symbol}</Button>\r\n                    }\r\n\r\n                <Text>Thank you for participating, allocations will be sent shortly through a Multisender App.</Text>\r\n                </div> :\r\n                <Button onClick={onPurchaseModal} fullWidth style={{marginTop: '10px'}} disabled={stats.remainingForSale === '-'}>Purchase {project.symbol}</Button>\r\n                } */}\r\n\r\n                    {status === STATE.active ? (\r\n                        <>\r\n                            <Allocations\r\n                                tokenImage={project.image}\r\n                                symbol={project.symbol}\r\n                                allocation={accountDetails.rewardedAmount.toExact()}\r\n                            />\r\n\r\n                            {stats.remainingForSale && !poolEnded && (\r\n                                <Button\r\n                                    onClick={onPurchaseModal}\r\n                                    fullWidth\r\n                                    style={{ marginTop: '10px', marginBottom: '10px' }}\r\n                                >\r\n                                    Purchase {project.symbol}\r\n                                </Button>\r\n                            )}\r\n\r\n                            {!stats.remainingForSale && (\r\n                                <Button disabled fullWidth style={{ marginTop: '10px', marginBottom: '10px' }}>\r\n                                    SOLD OUT\r\n                                </Button>\r\n                            )}\r\n\r\n                            {stats.remainingForSale && poolEnded && (\r\n                                <Button disabled fullWidth style={{ marginTop: '10px', marginBottom: '10px' }}>\r\n                                    ENDED\r\n                                </Button>\r\n                            )}\r\n                        </>\r\n                    ) : (\r\n                        status === STATE.upcoming && (\r\n                            <Allocations\r\n                                tokenImage={project.image}\r\n                                symbol={project.symbol}\r\n                                allocation={accountDetails.rewardedAmount.toExact()}\r\n                            />\r\n                        )\r\n                    )}\r\n                    {/* <Button onClick={onPurchaseModal} fullWidth style={{marginTop: '10px'}} disabled={stats.remainingForSale === '-'}>Purchase {project.symbol}</Button> */}\r\n                </>\r\n            )}\r\n        </CardBody>\r\n    );\r\n};\r\n\r\nconst ProjectComponent: React.FC = () => {\r\n    const { account } = useWeb3React();\r\n    const [whiteListed, setWhiteList] = useState(false);\r\n    const Paddress = getFindProject();\r\n    const project = useFindProjectByAddress(Paddress);\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        if (!Paddress) {\r\n            history.push('/projects');\r\n        }\r\n    }, [history, Paddress]);\r\n    const acc = useAccountWhiteList(account, project.address);\r\n    const pool = useGetPoolsByAddress(Paddress);\r\n    const { title, image, longDesc, longDesc2, longDesc3, buyingCoin, socMeds, wallpaperBg, status, category2 } =\r\n        project;\r\n    const srcs = `${process.env.PUBLIC_URL}/images/icons/${image}`;\r\n\r\n    const [projectTokenInfo, setProjectTokenInfo] = useState({\r\n        totalSupply: '0',\r\n    });\r\n    const tokenContract = useTokenContract(project.sellingCoin.address);\r\n\r\n    useEffect(() => {\r\n        // tokenContract.balanceOf(account).then(console.log)\r\n        tokenContract\r\n            .totalSupply()\r\n            .then((r) => {\r\n                setProjectTokenInfo({\r\n                    totalSupply: new TokenAmount(project.sellingCoin, r).toExact({ groupSeparator: ',' }).toString(),\r\n                });\r\n            })\r\n            .catch(console.log);\r\n\r\n        if (acc) {\r\n            setWhiteList(true);\r\n        } else setWhiteList(false);\r\n    }, [acc, tokenContract, project.sellingCoin]);\r\n\r\n    const theme = useContext(ThemeContext);\r\n    const srcsBg = `${process.env.PUBLIC_URL}/images/icons/${wallpaperBg}`;\r\n    return (\r\n        <CCont>\r\n            <CHeader src={srcsBg}>\r\n                <TokenImage src={srcs} alt=\"token-image\" />\r\n                <Heading bold fontSize=\"24px\">\r\n                    {title}\r\n                </Heading>\r\n            </CHeader>\r\n            <CBody>\r\n                <Flex justifyContent=\"space-between\">\r\n                    <Flex flex=\"1\" flexDirection=\"column\" padding=\"10px\">\r\n                        <Flex\r\n                            alignItems=\"center\"\r\n                            justifyContent=\"space-between\"\r\n                            marginTop=\"-20px\"\r\n                            marginBottom=\"10px\"\r\n                            padding=\"10px 0px\"\r\n                        >\r\n                            <SocmedGroup>\r\n                                <Anchor href={socMeds?.[0]}>\r\n                                    <Globe />\r\n                                </Anchor>\r\n                                <Anchor href={socMeds?.[1]}>\r\n                                    <Twitter fill={theme.colors.text} />\r\n                                </Anchor>\r\n                                <Anchor href={socMeds?.[2]}>\r\n                                    <Send fill={theme.colors.text} />\r\n                                </Anchor>\r\n                                <Anchor href={socMeds?.[3]}>\r\n                                    <SvgIcon width={24} Icon={MediumIcon} />\r\n                                </Anchor>\r\n                            </SocmedGroup>\r\n                            {status === STATE.active ? (\r\n                                <StyledButton style={{ backgroundColor: '#32a31b' }}>\r\n                                    {' '}\r\n                                    {category2 ? 'R2' : 'R1'} LIVE NOW\r\n                                </StyledButton>\r\n                            ) : status === STATE.upcoming ? (\r\n                                <StyledButton style={{ backgroundColor: '#7a1ba3' }}>UPCOMING</StyledButton>\r\n                            ) : (\r\n                                <StyledButton style={{ backgroundColor: '#8e98a5' }}>COMPLETED</StyledButton>\r\n                            )}\r\n                        </Flex>\r\n                        <Flex flexDirection=\"column\" justifyContent=\"space-between\">\r\n                            <TextDescription color=\"textSubtle\" as=\"p\">\r\n                                {longDesc}\r\n                            </TextDescription>\r\n                            <TextDescription color=\"textSubtle\" as=\"p\">\r\n                                {longDesc2}\r\n                            </TextDescription>\r\n                            <TextDescription color=\"textSubtle\" as=\"p\">\r\n                                {longDesc3}\r\n                            </TextDescription>\r\n                        </Flex>\r\n\r\n                        {/* Display distribution method for unclaimable projects with distribution type */}\r\n                        <Flex>\r\n                            {/* Distribution method and details for Vesting */}\r\n                            {!project.claimable && project.distributionType === 'Vesting' && (\r\n                                <Flex flexDirection=\"column\">\r\n                                    <Text color=\"#FF0000\" mt=\"10px\" mb=\"10px\" bold style={{ fontStyle: 'italic' }}>\r\n                                        Token Distribution:\r\n                                    </Text>\r\n                                    <Text color=\"#FF0000\" style={{ fontStyle: 'italic' }}>\r\n                                        • 20% at Token Generation Event / After the sale (November 24, 2 PM UTC) <p />\r\n                                        • 4-month vesting for the remaining 80%. 20% of the total tokens bought will be sent every 24th of the month, from December 2021 to March 2022 <p />\r\n                                        • Tokens will be sent by the {project.title} Team through multi-sender\r\n                                    </Text>\r\n                                </Flex>\r\n                            )}\r\n                        </Flex>\r\n                    </Flex>\r\n                    <Flex flex=\"1\">\r\n                        <ActionCard account={account} whiteListed={whiteListed} project={project} />\r\n                    </Flex>\r\n                </Flex>\r\n            </CBody>\r\n            <CFooter>\r\n                <FooterDetails pool={pool} project={project} projectTokenInfo={projectTokenInfo} />\r\n            </CFooter>\r\n        </CCont>\r\n    );\r\n};\r\n\r\nexport default ProjectComponent;\r\n","import React, { useCallback, useEffect, useMemo, useState } from 'react'\r\nimport { RouteComponentProps, Link } from 'react-router-dom';\r\nimport { ArrowRight, ChevronLeft } from 'react-feather';\r\nimport { Heading, Flex, Text, Breadcrumbs, Button } from '@sparkpointio/sparkswap-uikit'\r\nimport { useAppSelector, useFindProject as findProject, useFindProjectByAddress as findProjectByAddress, useSetProject as setProject } from 'state/hooks'\r\nimport styled from 'styled-components';\r\nimport Page from 'components/layout/Page';\r\nimport ProjectComponent from './ProjectComponent';\r\n\r\nconst Container = styled(Flex)`\r\n    flex-direction: column;\r\n    align-items: center;\r\n    padding: 20px;\r\n    max-width: 1200px;\r\n    width: 100%;\r\n    margin: 0 auto;\r\n`\r\nconst BackButton = styled(Link)`\r\n    display: flex;\r\n    align-items: center;\r\n    color: ${({theme}) => theme.colors.text};\r\n`\r\n\r\nconst Layout: React.FC <RouteComponentProps<{ProjectAddress?: string}>> = ({ match: {params: { ProjectAddress }}})  => {\r\n    const data = setProject(ProjectAddress)\r\n    const project = useAppSelector((state) => state.projects.data.find(p => p.address === data));\r\n\r\n\r\n    return (\r\n        <Page>\r\n            <Container>\r\n                <Flex style={{width: '100%', minHeight: '10vh'}} flexDirection=\"column\"  justifyContent=\"space-between\" marginTop=\"20px\" padding=\"5px 0px\">\r\n                <Heading fontSize=\"24px\" bold> SparkLaunch </Heading>\r\n                {/* <Flex justifyContent=\"flex-end\" style={{width: '100%'}}></Flex> */}\r\n                <Flex justifyContent=\"space-between\" marginBottom=\"3px\">\r\n                <Breadcrumbs>\r\n                    <Text>SparkLaunch</Text>\r\n                    <Text>{project?.symbol}</Text>\r\n                </Breadcrumbs>\r\n                    <BackButton to='/projects'><ChevronLeft /> PROJECTS </BackButton>\r\n                </Flex>\r\n\r\n                </Flex>\r\n                <ProjectComponent />\r\n            </Container>\r\n        </Page>\r\n    )\r\n}\r\n\r\nexport default Layout;\r\n"],"sourceRoot":""}