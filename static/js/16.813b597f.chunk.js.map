{"version":3,"sources":["components/NumericalInput/index.tsx","components/Row/index.tsx","components/CurrencyInputPanel/index.tsx","components/Modals/PurchaseModal.tsx","state/tokens/hooks.ts","pages/Launchpad/Project/styled.ts","pages/Launchpad/Project/FooterDetails.tsx","pages/Launchpad/Project/ProjectComponent.tsx","pages/Launchpad/Project/Layout.tsx"],"names":["StyledInput","styled","input","error","theme","colors","failure","text","align","textSubtle","inputRegex","RegExp","Input","React","memo","value","onUserInput","placeholder","rest","onChange","event","nextUserInput","target","replace","test","escapeRegExp","inputMode","title","autoComplete","autoCorrect","type","pattern","minLength","maxLength","spellCheck","Row","Box","padding","border","borderRadius","RowBetween","InputRow","div","gap","justify","Aligner","button","selected","darken","span","InputPanel","hideInput","background","Container","shadows","inset","CurrencyInputPanel","onMax","showMaxButton","label","currency","remainingSupply","hideBalance","id","showCommonBases","useState","setModalOpen","account","useWeb3React","useContext","ThemeContext","useCallback","fontSize","style","src","process","symbol","toLowerCase","size","length","slice","className","onClick","variant","maxWidth","width","display","cursor","ToastTitle","Text","StyledHeading","ActionDiv","Flex","PurchaseModal","onDismiss","address","category","library","useActiveWeb3React","contract","useLaunchpadContract","project","useFindProjectByAddress","token","useAppSelector","state","tokens","data","find","t","useSelectToken","buyingCoin","setInput","output","setOutput","balance","TokenAmount","BigInt","amount","sellingCoin","maxPayableAmount","rewardedAmount","redeemed","whitelist","accountDetails","setAccountDetails","tokenRate","setTokenRate","remainingExpendable","setRemainingExpendable","remainingPurchasable","setRemainingPurchasable","calculateInput","tokenAmount","calculatedInput","expandValue","multiply","toFixed","toExact","calculateOutput","calculatedOutput","divide","validateInput","greaterThan","validateOutput","SuccessMessage","tx","hash","link","alignItems","flexDirection","href","textDecoration","color","primary","handleBuy","a","buyTokens","BNB","toast","success","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","getAccountDetailsLaunchPad","res","code","message","position","useEffect","getWhitelist","details","_maxPayableAmount","_rewardedAmount","subtract","calc","num","match","then","r","getRemainingPurchasable","remainingP","_balance","raw","toString","catch","e","console","log","marginBottom","marginTop","bold","maxInput","maxOutput","fullWidth","CCont","Card","CHeader","CardHeader","TokenImage","img","SmalltokenImage","CBody","CardBody","StyledButton","Button","CustomDataGroup","DataGroup","CFooter","TableDiv","TBHeader","TBBody","TextDescription","NavOptions","activeIndex","FooterNav","handleClick","CustomThemeContext","margin","AllocationSection","justifyContent","FooterDetails","pool","projectTokenInfo","customTheme","setActive","open","close","cap","totalUserParticipated","totalFundsSwapped","i","cat2","category2","contract2","totalForSaleTokens","totalSoldTokens","remainingForSale","totalSales","expectedSales","percentage","totalParticipants","stats","setStats","checkEnded","ended","round1","calculateLaunchpadStats","round2","parseFloat","backgroundColor","isDark","customColors","BG1","BG2","borderBottom","flex","marginRight","status","STATE","active","startDate","toLocaleString","endDate","upcoming","marginLeft","totalSupply","Allocations","tokenImage","allocation","srcs","alt","ActionCard","whiteListed","Paddress","getFindProject","maxExpendable","poolEnded","setPoolEnded","_cat2","useModal","onPurchaseModal","as","primaryStep","completed","image","disabled","ProjectComponent","setWhiteList","history","useHistory","push","acc","useAccountWhiteList","useGetPoolsByAddress","longDesc","longDesc2","longDesc3","socMeds","wallpaperBg","setProjectTokenInfo","tokenContract","useTokenContract","groupSeparator","srcsBg","fill","SvgIcon","Icon","MediumIcon","BackButton","Link","Layout","ProjectAddress","params","setProject","projects","p","Page","minHeight","to"],"mappings":"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","file":"static/js/16.813b597f.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { escapeRegExp } from '../../utils'\n\nconst StyledInput = styled.input<{ error?: boolean; fontSize?: string; align?: string }>`\n  color: ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.text)};\n  width: 0;\n  position: relative;\n  font-weight: 500;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  background-color: transparent;\n  font-size: 16px;\n  text-align: ${({ align }) => align && align};\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  padding: 0px;\n  -webkit-appearance: textfield;\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n  [type='number'] {\n    -moz-appearance: textfield;\n  }\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textSubtle};\n  }\n`\n\nconst inputRegex = RegExp(`^\\\\d*(?:\\\\\\\\[.])?\\\\d*$`) // match escaped \".\" characters via in a non-capturing group\n\nexport const Input = React.memo(function InnerInput({\n  value,\n  onUserInput,\n  placeholder,\n  ...rest\n}: {\n  value: string | number\n  onUserInput: (input: string) => void\n  error?: boolean\n  fontSize?: string\n  align?: 'right' | 'left'\n} & Omit<React.HTMLProps<HTMLInputElement>, 'ref' | 'onChange' | 'as'>) {\n  const enforcer = (nextUserInput: string) => {\n    if (nextUserInput === '' || inputRegex.test(escapeRegExp(nextUserInput))) {\n      onUserInput(nextUserInput)\n    }\n  }\n\n  return (\n    <StyledInput\n      {...rest}\n      value={value}\n      onChange={event => {\n        // replace commas with periods, because uniswap exclusively uses period as the decimal separator\n        enforcer(event.target.value.replace(/,/g, '.'))\n      }}\n      // universal input options\n      inputMode=\"decimal\"\n      title=\"Token Amount\"\n      autoComplete=\"off\"\n      autoCorrect=\"off\"\n      // text-specific options\n      type=\"text\"\n      pattern=\"^[0-9]*[.,]?[0-9]*$\"\n      placeholder={placeholder || '0.0'}\n      minLength={1}\n      maxLength={79}\n      spellCheck=\"false\"\n    />\n  )\n})\n\nexport default Input\n","import styled from 'styled-components'\nimport { Box } from 'rebass/styled-components'\n\nconst Row = styled(Box)<{ align?: string; padding?: string; border?: string; borderRadius?: string }>`\n  width: 100%;\n  display: flex;\n  padding: 0;\n  align-items: ${({ align }) => (align || 'center')};\n  padding: ${({ padding }) => padding};\n  border: ${({ border }) => border};\n  border-radius: ${({ borderRadius }) => borderRadius};\n`\n\nexport const RowBetween = styled(Row)`\n  justify-content: space-between;\n  margin: 4px 0 4px 0;\n`\nexport const RowFlat = styled.div`\n  display: flex;\n  align-items: flex-end;\n`\n\nexport const AutoRow = styled(Row)<{ gap?: string; justify?: string }>`\n  flex-wrap: wrap;\n  margin: ${({ gap }) => gap && `-${gap}`};\n  justify-content: ${({ justify }) => justify && justify};\n  & > * {\n    margin: ${({ gap }) => gap} !important;\n  }\n`\n\nexport const RowFixed = styled(Row)<{ gap?: string; justify?: string }>`\n  width: fit-content;\n  margin: ${({ gap }) => gap && `-${gap}`};\n`\n\nexport default Row\n","import React, { useState, useCallback, useContext } from 'react'\nimport { Button, ChevronDownIcon, Dropdown, Text } from '@sparkpointio/sparkswap-uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport styled, { ThemeContext } from 'styled-components'\nimport { darken } from 'polished'\nimport { IProjects, ITokens } from 'config/constants/type'\nimport { StyledImage } from 'pages/Launchpad/components/styled'\nimport { Currency } from 'components/types'\nimport { Input as NumericalInput } from '../NumericalInput'\nimport { RowBetween } from '../Row'\nimport CurrencyLogo from '../CurrencyLogo'\n\nimport useActiveWeb3React from '../../hooks/useActiveWeb3React'\n\nconst InputRow = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  padding: 0.75rem 0.75rem 0.75rem 1rem;\n`\nconst CurrencySelect = styled.button<{ selected: boolean }>`\n  align-items: center;\n  height: 34px;\n  font-size: 16px;\n  font-weight: 500;\n  background-color: transparent;\n  color: ${({ selected, theme }) => (selected ? theme.colors.text : '#FFFFFF')};\n  border-radius: 12px;\n  outline: none;\n  cursor: pointer;\n  user-select: none;\n  border: none;\n  padding: 0 0.5rem;\n  :focus,\n  :hover {\n    background-color: ${({ theme }) => darken(0.05, theme.colors.input)};\n  }\n`\n\nconst LabelRow = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  color: ${({ theme }) => theme.colors.text};\n  font-size: 0.75rem;\n  line-height: 1rem;\n  padding: 0.75rem 1rem 0 1rem;\n  span:hover {\n    cursor: pointer;\n    color: ${({ theme }) => darken(0.2, theme.colors.textSubtle)};\n  }\n`\n\nconst Aligner = styled.span`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`\n\nconst InputPanel = styled.div<{ hideInput?: boolean }>`\n  display: flex;\n  flex-flow: column nowrap;\n  position: relative;\n  // border-radius: ${({ hideInput }) => (hideInput ? '8px' : '20px')};\n  // background-color: ${({ theme }) => theme.colors.background};\n  z-index: 1;\n`\n\nconst Container = styled.div<{ hideInput: boolean }>`\n  // border-radius: 16px;\n  background-color: ${({ theme }) => theme.colors.input};\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n`\n\n\ninterface CurrencyInputPanelProps {\n  value: string\n  onUserInput: (value: string) => void\n  onMax?: () => void\n  showMaxButton: boolean\n  label?: string\n  currency?: Currency | null\n  hideInput?: boolean\n  hideBalance?: boolean\n  remainingSupply?: string\n  id: string\n  showCommonBases?: boolean\n}\n\nexport default function CurrencyInputPanel({\n    value,\n    onUserInput,\n    onMax,\n    showMaxButton,\n    label,\n    currency,\n    remainingSupply = '',\n    hideBalance = false,\n    hideInput = false,\n    id,\n    showCommonBases,\n  }: CurrencyInputPanelProps) {\n    const [modalOpen, setModalOpen] = useState(false)\n    const { account } = useWeb3React()\n    // const selectedCurrencyBalance = useCurrencyBalance(account ?? undefined, currency ?? undefined)\n    const selectedCurrencyBalance = 22222\n    const theme = useContext(ThemeContext)\n    const handleDismissSearch = useCallback(() => {\n      setModalOpen(false)\n    }, [setModalOpen])\n\n    return (\n      <InputPanel id={id}>\n        <Text fontSize=\"14px\">{label}</Text>\n        <Container hideInput={hideInput}>\n          <InputRow style={hideInput ? { padding: '0', borderRadius: '8px' } : {}} >\n          <Aligner>\n                {/* <CurrencyLogo currency={currency} size=\"24px\" style={{ marginRight: '8px' }} /> */}\n                <StyledImage src={`${process.env.PUBLIC_URL}/images/icons/${currency?.symbol?.toLowerCase()}.png`} size=\"24px\" />\n                <Text>\n                {(currency && currency.symbol && currency.symbol.length > 20\n                    ? `${currency.symbol.slice(0, 4)}...${currency.symbol.slice(\n                        currency.symbol.length - 5,\n                        currency.symbol.length\n                      )}`\n                    : currency?.symbol)}\n                    &nbsp;\n                </Text>\n            </Aligner>\n            {!hideInput && (\n              <>\n                <NumericalInput\n                  className=\"token-amount-input\"\n                  value={value}\n                  onUserInput={onUserInput}\n                />\n                {account && currency && showMaxButton && (\n                  <Button onClick={onMax} size=\"sm\" variant=\"primary\" style={{maxWidth: '50px', width: '20%', fontSize: '14px'}}>\n                    MAX\n                  </Button>\n                )}\n              </>\n            )}\n          </InputRow>\n        </Container>\n        {!hideInput && (\n\n          <RowBetween>\n              {account && (\n                <Text onClick={onMax} fontSize=\"14px\" style={{ display: 'inline', cursor: 'pointer' }}>\n                  {!hideBalance && !!currency\n                    ? `Remaining: ${remainingSupply} ${currency.symbol}`\n                    : ' -'}\n\n                </Text>\n              )}\n          </RowBetween>\n\n        )}\n      </InputPanel>\n    )\n  }\n","import React, { useContext, useEffect, useState } from 'react';\nimport { useWeb3React } from '@web3-react/core';\nimport { TokenAmount } from '@sparkpointio/sparkswap-sdk';\nimport { ExternalLink } from 'react-feather';\nimport { toast } from 'react-toastify';\nimport { useFindProjectByAddress } from 'state/hooks';\nimport { useSelectToken } from 'state/tokens/hooks';\nimport CurrencyInputPanel from 'components/CurrencyInputPanel';\nimport { Button, Flex, Heading, Modal, Text } from '@sparkpointio/sparkswap-uikit';\nimport styled, { ThemeContext } from 'styled-components';\nimport { SmallstyledImage } from 'pages/Launchpad/components/styled';\nimport { useLaunchpadContract } from '../../hooks/useContracts';\nimport { BNB } from '../../config';\nimport useActiveWeb3React from '../../hooks/useActiveWeb3React';\nimport { expandValue } from '../../utils';\nimport { getAccountDetailsLaunchPad } from '../../utils/contractHelpers';\n\n\ninterface Stats {\n    totalForSaleTokens: string;\n    totalSoldTokens: string;\n    remainingForSale: string;\n    totalSales: string;\n    expectedSales: string;\n    percentage: string;\n    tokenRate: string;\n    totalParticipants: string;\n}\n\ninterface AppProps {\n    onDismiss?: () => void;\n    address: string | null | undefined;\n    stats: Stats;\n    category: string;\n}\n\nconst ToastTitle = styled(Text)`\n  color: #EAE2FC;\n  margin-bottom: 4px;\n`;\nconst StyledHeading = styled(Text)`\n  color: ${({ theme }) => theme.colors.textSubtle};\n`;\nconst ActionDiv = styled(Flex)`\n  margin-top: 24px;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst PurchaseModal: React.FC<AppProps> = ({ onDismiss, address, category }) => {\n    const { library } = useActiveWeb3React();\n    const { account } = useWeb3React();\n    const contract = useLaunchpadContract(category);\n    const project = useFindProjectByAddress(address);\n    const token = useSelectToken(project.buyingCoin.address);\n    const [input, setInput] = useState('');\n    const [output, setOutput] = useState('');\n    const [accountDetails, setAccountDetails] = useState({\n        balance: new TokenAmount(project.buyingCoin, BigInt(0)),\n        amount: new TokenAmount(project.sellingCoin, BigInt(0)),\n        maxPayableAmount: new TokenAmount(project.sellingCoin, BigInt(0)),\n        rewardedAmount: new TokenAmount(project.sellingCoin, BigInt(0)),\n        redeemed: false,\n        whitelist: false,\n    });\n\n    const [tokenRate, setTokenRate] = useState(new TokenAmount(project.sellingCoin, BigInt(0)));\n    const [remainingExpendable, setRemainingExpendable] = useState(new TokenAmount(project.sellingCoin, BigInt(0)));\n    const [remainingPurchasable, setRemainingPurchasable] = useState(new TokenAmount(project.sellingCoin, BigInt(0)));\n    /**\n     * Sets the input amount and calculates the output\n     * @param value\n     */\n    const handleTypeInput = (value: string) => {\n        setInput(value);\n        let tokenAmount = new TokenAmount(project.buyingCoin, expandValue(value, project.buyingCoin));\n        tokenAmount = validateInput(tokenAmount);\n        calculateOutput(tokenAmount);\n    };\n\n    /**\n     * Sets the output amount and calculates the input\n     * @param value\n     */\n    const handleTypeOutput = (value: string) => {\n        setOutput(value);\n        let tokenAmount = new TokenAmount(project.sellingCoin, expandValue(value, project.sellingCoin));\n        tokenAmount = validateOutput(tokenAmount);\n        calculateInput(tokenAmount);\n    };\n\n    /**\n     * Calculates the input based on the output\n     * @param tokenAmount\n     */\n    const calculateInput = (tokenAmount) => {\n        const calculatedInput = new TokenAmount(project.buyingCoin, expandValue(tokenAmount.multiply(tokenRate).toFixed(18), project.buyingCoin));\n        setInput(calculatedInput.toExact());\n\n        return calculatedInput;\n    };\n\n    /**\n     * Calculates the output based on the input\n     * @param tokenAmount\n     */\n    const calculateOutput = (tokenAmount) => {\n        const calculatedOutput = new TokenAmount(project.buyingCoin, expandValue(tokenAmount.divide(tokenRate).toFixed(18), project.buyingCoin));\n        setOutput(calculatedOutput.toExact());\n\n        return calculatedOutput;\n    };\n\n    /**\n     * Validates if the input does not exceed remainingExpandable and equivalent output does not exceed remainingPurchasable\n     * @param tokenAmount\n     */\n    const validateInput = (tokenAmount) => {\n        const equivalentOutput = calculateOutput(tokenAmount);\n\n        if (equivalentOutput.greaterThan(remainingPurchasable)) {\n            tokenAmount = calculateInput(remainingPurchasable);\n            calculateOutput(tokenAmount);\n        }\n\n        return tokenAmount;\n    };\n\n    /**\n     * Validates if the output does not exceed remainingPurchasable and equivalent input does not exceed remainingExpandable\n     * @param tokenAmount\n     */\n    const validateOutput = (tokenAmount) => {\n        const equivalentInput = calculateInput(tokenAmount);\n\n        if (equivalentInput.greaterThan(remainingExpendable)) {\n            tokenAmount = calculateOutput(remainingExpendable);\n            calculateInput(tokenAmount);\n        }\n\n        return tokenAmount;\n    };\n\n    /**\n     * Sets and checks the max input\n     */\n    const handleMaxInput = () => {\n        let maxInput = remainingExpendable;\n\n        maxInput = validateInput(maxInput);\n\n        setInput(maxInput.toExact());\n    };\n\n    /**\n     * Sets and checks the max output\n     */\n    const handleMaxOutput = () => {\n        let maxOutput = remainingPurchasable;\n\n        maxOutput = validateOutput(maxOutput);\n\n        setOutput(maxOutput.toExact());\n    };\n\n    /**\n     * Initiates buy token\n     */\n\n    const SuccessMessage = ({ tx, value, symbol }) => {\n        const theme = useContext(ThemeContext);\n        const { hash } = tx;\n        const link = `https://bscscan.com/tx/${hash}`;\n        return (\n            <Flex alignItems='center' flexDirection='column'>\n                <ToastTitle>{`Successfully bought ~ ${value} ${symbol} tokens!`}</ToastTitle>\n                <a href={link} style={{ fontSize: '12px', textDecoration: 'underline', color: theme.colors.primary }}>View\n                    on BscScan <ExternalLink size='12px' /></a>\n            </Flex>\n        );\n    };\n\n    const handleBuy = async () => {\n        try {\n            const tx = await contract.buyTokens({ value: expandValue(input, BNB) });\n            toast.success(<SuccessMessage tx={tx} value={output} symbol={project.symbol} />, {\n                autoClose: 5000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n            });\n            const res = await getAccountDetailsLaunchPad(contract, project, library, account);\n            setAccountDetails(res);\n        } catch (e) {\n            const code = e.code;\n            const message = e.data ? e.data.message : e.message;\n            toast.error(`${code} ${message}`, {\n                position: 'top-right',\n                autoClose: 5000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n            });\n        }\n        // console.log(tx);\n        // console.log(`Buying successful ${tx}`)\n    };\n\n    useEffect(() => {\n        async function getRemainingPurchasable() {\n            const details = await contract.getWhitelist(account);\n            const maxPayableAmount = new TokenAmount(project.sellingCoin, details._maxPayableAmount);\n            const rewardedAmount = new TokenAmount(project.sellingCoin, details._rewardedAmount);\n            return maxPayableAmount.subtract(rewardedAmount);\n        }\n\n        const calc = (num) => {\n            return num.match(/^-?\\d+(?:\\.\\d{0,18})?/)[0];\n        };\n\n\n        const calculateMaxExpendable = (remainingP) => {\n            return new TokenAmount(project.buyingCoin, expandValue(calc(remainingP.multiply(tokenRate).toFixed(19)), project.sellingCoin));\n        };\n\n\n        const calculateMaxPurchasable = (remainingP) => {\n            const tokenAmount = new TokenAmount(project.buyingCoin, expandValue(calc(remainingP.divide(tokenRate).toFixed(19)), project.sellingCoin));\n            return tokenAmount;\n        };\n\n        getAccountDetailsLaunchPad(contract, project, library, account).then((r) => setAccountDetails(r));\n\n        contract.tokenRate().then((r) => setTokenRate(new TokenAmount(project.sellingCoin, r)));\n        getRemainingPurchasable().then((r) => {\n            const _balance = new TokenAmount(project.sellingCoin, (r.raw.toString()));\n            setRemainingPurchasable(_balance);\n            setRemainingExpendable(calculateMaxExpendable(_balance));\n        }).catch(e => console.log(e));\n\n        return () => console.log('');\n    }, [account, contract, library, input, output, tokenRate, project]);\n\n    useEffect(() => {\n        return console.log('');\n    }, []);\n\n    return (\n        <Modal title='' onDismiss={onDismiss}>\n            <div style={{ width: '400px', padding: '0px 24px 24px 24px' }}>\n                <div style={{ marginBottom: '24px', marginTop: '-24px' }}>\n                    <Heading bold fontSize='21px'>\n                        Swap Coins\n                    </Heading>\n                    <StyledHeading>{`Remaining: ${remainingPurchasable.toExact()} ${project.symbol}`}</StyledHeading>\n                </div>\n                <CurrencyInputPanel\n                    label='From'\n                    id='swap-input'\n                    value={input}\n                    onUserInput={handleTypeInput}\n                    currency={token}\n                    showMaxButton\n                    onMax={handleMaxInput}\n                    remainingSupply={remainingExpendable.toExact()}\n                />\n                <CurrencyInputPanel\n                    showMaxButton\n                    onMax={handleMaxOutput}\n                    label='To'\n                    id='swap-input'\n                    value={output}\n                    onUserInput={handleTypeOutput}\n                    currency={project}\n                    remainingSupply={remainingPurchasable.toExact()}\n                />\n\n                {/* <Text>Price per BNB: <Priceperbnb/> USD</Text> */}\n                <Text color='#FFFFFF'>{`Price: ${tokenRate.toExact()} ${project.symbol} per BNB `}</Text>\n\n                <ActionDiv>\n                    <Button onClick={handleBuy} fullWidth>\n                        Swap\n                    </Button>\n                </ActionDiv>\n                <ActionDiv>\n                    <Text>My Allocations</Text>\n                    <Flex alignItems='center' marginTop='12px'>\n                        <SmallstyledImage\n                            src={`${process.env.PUBLIC_URL}/images/icons/${project?.symbol?.toLowerCase()}.png`} />\n                        <Text color='textSubtle'>{`${accountDetails.rewardedAmount.toExact()} ${project.symbol}`}</Text>\n                    </Flex>\n                </ActionDiv>\n            </div>\n        </Modal>\n    );\n};\n\nexport default PurchaseModal;\n","import { useAppSelector, useAppDispatch } from \"state/hooks\";\n\n\nexport const useAllTokens = () => useAppSelector((state) => state.tokens.data);\nexport const useSelectToken = (address: string | undefined) => useAppSelector((state) => state.tokens.data.find(t => t.address === address));","import styled from 'styled-components'\nimport { Card, CardHeader, CardBody, Button, Flex, Text} from '@sparkpointio/sparkswap-uikit';\nimport { SocmedGroup, ProgressGroup, DataGroup } from '../components/styled';\n\nexport const CCont = styled(Card)`\n    width: 100%;\n`;\nexport const CHeader = styled(CardHeader)<{ src?: string }>`\n    \n    display: flex;\n    align-items: center;\n    height: auto;\n    min-height: 10vh;\n    max-height: 15vh;\n    ${({ src }) => src &&`\n      background-image: url(${src});\n      background-repeat: no-repeat;\n      background-attachment: scroll;\n      background-position: 95% 15%;\n      background-size: cover;\n    `}\n`;\n\nexport const TokenImage = styled.img`\n    border-radius: 50%;\n    width: 60px;\n    height: 60px;\n    margin: 10px 15px;\n`;\n\nexport const SmalltokenImage = styled.img`\n    border-radius: 50%;\n    width: 30px;\n    height: 30px;\n    margin: 10px 15px;\n`;\n\nexport const CBody = styled(CardBody)`\n    padding: 20px;\n`;\n\nexport const StyledButton = styled(Button)`\n    cursor: context-menu;\n    height: 35px;\n    border-radius: 5px;\n`;\n\nexport const CustomDataGroup = styled(DataGroup)`\n    &:before {\n        content: '';\n        border-top: 5px solid ${({ theme }) => theme.colors.primary};\n        padding-top: 10px;\n        margin-bottom: 10px;\n    }\n    &:after {\n        content: '';\n        border-bottom: 5px solid ${({ theme }) => theme.colors.primary};\n        padding-bottom: 10px;\n        margin-top: 10px;\n    }\n`;\n\nexport const CFooter = styled(Flex)`\n    width: 100%;\n    min-height: 20vh;\n    height: auto;\n    padding: 25px;\n`;\n\nconst TableDiv = styled(Flex)`\n    width: 100%;\n    max-width: 720px;\n`\n\nexport const TBHeader = styled(TableDiv)``;\nexport const TBBody = styled(TableDiv)`\n    margin-top: 10px;\n`;\n\nexport const TextDescription = styled(Text)`\n    margin: 10px 5px\n`\n","import { Flex, Button, Heading, Text } from '@sparkpointio/sparkswap-uikit';\nimport { useWeb3React } from '@web3-react/core';\nimport { IPoolInformation, IProjects, ITokens, STATE } from 'config/constants/type';\nimport React, { useContext, useState, useCallback, useEffect } from 'react';\nimport styled, { ThemeContext } from 'styled-components';\nimport { CustomThemeContext } from 'ThemeContext';\nimport useActiveWeb3React from \"hooks/useActiveWeb3React\";\nimport {useLaunchpadContract} from \"hooks/useContracts\";\nimport {calculateLaunchpadStats, checkEnded, getAccountDetailsLaunchPad} from \"utils/contractHelpers\";\nimport { TBHeader, TBBody } from './styled';\n\n\nconst Container = styled(Flex)`\n    margin: 10px;\n    width: 100%;\n    height: auto;\n`;\n\nconst NavOptions = styled(Button)<{ activeIndex: boolean }>`\n    background-color: transparent;\n    color: ${({ theme, activeIndex }) => (activeIndex ? theme.colors.text : theme.colors.textSubtle)};\n    border-bottom: ${({ theme, activeIndex }) => activeIndex && `3px solid ${theme.colors.primary}`};\n`;\n\ninterface Stats {\n    totalForSaleTokens: string;\n    totalSoldTokens: string;\n    remainingForSale: string;\n    totalSales: string;\n    expectedSales: string;\n    percentage: string;\n    tokenRate: string;\n    totalParticipants: string;\n}\n\ntype AppProps = {\n    pool: IPoolInformation;\n    project: IProjects;\n    buyingToken?: ITokens;\n    projectTokenInfo?: any;\n}\n\nconst FooterNav = ({ activeIndex = 0, handleClick}: { activeIndex?: number; handleClick: (i:number) => void }) => {\n    const theme = useContext(ThemeContext);\n    const customTheme = useContext(CustomThemeContext);\n    return (\n        <Flex alignItems=\"center\" style={{ margin: '10px 10px 0px 10px', padding: '20px 20px 0px 20px' }}>\n            <NavOptions activeIndex={activeIndex === 0} onClick={() => handleClick(0)}>Project Details</NavOptions>\n            {/* <NavOptions activeIndex={activeIndex === 1} onClick={() => handleClick(1)}>Schedule</NavOptions>\n            <NavOptions activeIndex={activeIndex === 2} onClick={() => handleClick(2)}>Your Allocation</NavOptions> */}\n        </Flex>\n    );\n};\n\nconst AllocationSection = () => {\n    return (\n        <Flex margin=\"20px\" padding=\"20px\" flexDirection=\"column\">\n            <TBHeader justifyContent=\"space-between\" >\n                <Text bold>No.</Text>\n                <Text bold>Token Allocation</Text>\n                <Text bold>Date</Text>\n                <Text bold>Token(s) claimed</Text>\n                <Text bold>Action</Text>\n            </TBHeader>\n            <TBBody justifyContent=\"space-between\" >\n                <Text color=\"textSubtle\">001</Text>\n                <Text color=\"textSubtle\">159662.6 OWN</Text>\n                <Text color=\"textSubtle\">06/24/2021</Text>\n                <Text color=\"textSubtle\">OWNLY</Text>\n                <Text color=\"textSubtle\">SWAP</Text>\n            </TBBody>\n        </Flex>\n    )\n}\n\nconst FooterDetails: React.FC<AppProps> = ({pool, project, projectTokenInfo}) => {\n    const theme = useContext(ThemeContext);\n    const { account } = useWeb3React();\n    const customTheme = useContext(CustomThemeContext);\n    const [ activeIndex , setActive ] = useState<number>(0);\n    const { open, close, cap, totalUserParticipated, totalFundsSwapped } = pool;\n    const handleClick = useCallback((i) => {\n        setActive(i)\n    }, [])\n\n    const {library} = useActiveWeb3React();\n\n    const contract = useLaunchpadContract(project.category);\n    const cat2 = project.category2 ?? project.category;\n    const contract2 = useLaunchpadContract(cat2);\n    const _cat2 = contract2 ?? contract;\n\n    const [stats, setStats] = useState({\n        totalForSaleTokens: '-',\n        totalSoldTokens: '-',\n        remainingForSale: '-',\n        totalSales: '-',\n        expectedSales: '-',\n        percentage: '00.00',\n        tokenRate: '-',\n        totalParticipants: '-'\n    })\n\n    useEffect(() => {\n        checkEnded(contract, contract2).then((ended) => {\n            if (!ended.round1) {\n                calculateLaunchpadStats(contract, project).then((r) => setStats(r));\n            }\n            if (ended.round1 && project.category2 && !ended.round2) {\n                calculateLaunchpadStats(contract2, project).then((r) => setStats(r));\n            }\n            if (ended.round1 && project.category2 && ended.round2){\n                calculateLaunchpadStats(contract, project, contract2).then((r) => setStats(r));\n            }\n        }).catch(e => console.log(e));\n        // getAccountDetailsLaunchPad(contract, project, library, account).then(r => setAccountDetails(r)).catch(console.log)\n    }, [contract, contract2, project, account, library])\n\n    const totalSales = parseFloat(stats.totalSales).toFixed(4)\n    return (\n        <Container\n            style={{ backgroundColor: theme.isDark ? customTheme.customColors?.BG1 : customTheme.customColors?.BG2 }}\n            flexDirection=\"column\"\n        >\n            <div style={{ marginBottom: '10px', borderBottom: `1px solid ${theme.colors.primary}` }}>\n                <FooterNav handleClick={handleClick} activeIndex={activeIndex} />\n            </div>\n            { activeIndex === 0 && <Flex padding=\"20px\" margin=\"20px\" justifyContent=\"space-between\">\n                <Flex flex=\"1\" flexDirection=\"column\" marginRight=\"10px\">\n                    <Heading margin=\"10px 0px 30px 0\" bold>\n                        Pool Information\n                    </Heading>\n\n                    {project.status === STATE.active && <Flex justifyContent='space-between'>\n                        <Text>Round Number</Text>\n                        <Text color='textSubtle'>{project.category2 ? '2' : '1'}</Text>\n                    </Flex>}\n\n                    <Flex justifyContent=\"space-between\">\n                        <Text>Opens</Text>\n                        <Text color=\"textSubtle\">{project.startDate?.toLocaleString()}</Text>\n                    </Flex>\n                    <Flex justifyContent=\"space-between\">\n                        <Text>Closes</Text>\n                        <Text color=\"textSubtle\">{project.endDate?.toLocaleString()}</Text>\n                    </Flex>\n                    <Flex justifyContent=\"space-between\">\n                        <Text>Cap</Text>\n                        <Text color=\"textSubtle\">{project.status === STATE.upcoming ? '-' : stats.expectedSales} {project.buyingCoin.symbol}</Text>\n                    </Flex>\n                    <Flex justifyContent=\"space-between\">\n                        <Text>Total Users Participated</Text>\n                        <Text color=\"textSubtle\">{project.status === STATE.upcoming ? '-' : stats.totalParticipants}</Text>\n                    </Flex>\n                    <Flex justifyContent=\"space-between\">\n                        <Text>Total Funds Swapped</Text>\n                        <Text color=\"textSubtle\">{project.status === STATE.upcoming ? '-' : totalSales} {project.buyingCoin.symbol}</Text>\n                    </Flex>\n                </Flex>\n                <Flex flex=\"1\" marginLeft=\"10px\" flexDirection=\"column\">\n                    <Heading margin=\"10px 0px 30px 0px\" bold>\n                        Token Information\n                    </Heading>\n                    <Flex justifyContent=\"space-between\">\n                        <Text>Name</Text>\n                        <Text color=\"textSubtle\">{project.title}</Text>\n                    </Flex>\n                    <Flex justifyContent=\"space-between\">\n                        <Text>Token Symbol</Text>\n                        <Text color=\"textSubtle\">{project.symbol}</Text>\n                    </Flex>\n                    <Flex justifyContent=\"space-between\">\n                        <Text>Total Supply</Text>\n                        <Text color=\"textSubtle\">{projectTokenInfo.totalSupply}</Text>\n                    </Flex>\n                </Flex>\n            </Flex>\n            }\n            {\n                account && activeIndex === 2 && (\n                    <AllocationSection />\n                )\n            }\n        </Container>\n    );\n};\n\nexport default FooterDetails;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { useWeb3React } from '@web3-react/core';\nimport { TokenAmount } from '@sparkpointio/sparkswap-sdk';\nimport { ThemeContext } from 'styled-components';\nimport { Globe, Send, Twitter } from 'react-feather';\nimport { useHistory } from 'react-router-dom';\nimport { Button, CardBody, Flex, Heading, Progress, Text, useModal } from '@sparkpointio/sparkswap-uikit';\nimport {\n    useAccountWhiteList,\n    useFindProject as getFindProject,\n    useFindProjectByAddress,\n    useGetPoolsByAddress,\n} from 'state/hooks';\nimport { IProjects, STATE } from 'config/constants/type';\nimport SvgIcon from 'components/SvgIcon';\nimport UnlockButton from 'components/ConnectWalletButton';\nimport PurchaseModal from 'components/Modals/PurchaseModal';\nimport { CustomThemeContext } from 'ThemeContext';\nimport { ProgressGroup, SocmedGroup } from '../components/styled';\nimport { ReactComponent as MediumIcon } from '../components/icons/MediumIcon.svg';\nimport Anchor from '../components/StyledLink';\nimport FooterDetails from './FooterDetails';\nimport {\n    CBody,\n    CCont,\n    CFooter,\n    CHeader,\n    CustomDataGroup,\n    SmalltokenImage,\n    StyledButton,\n    TextDescription,\n    TokenImage,\n} from './styled';\nimport { calculateLaunchpadStats, checkEnded, getAccountDetailsLaunchPad } from '../../../utils/contractHelpers';\nimport { useLaunchpadContract, useTokenContract } from '../../../hooks/useContracts';\nimport useActiveWeb3React from '../../../hooks/useActiveWeb3React';\n\ntype AppProps = {\n    project: IProjects;\n};\ntype ActionProps = AppProps & {\n    account?: string | null;\n    whiteListed?: boolean;\n};\n\n// Hook\nexport function usePrevious(value) {\n    // The ref object is a generic container whose current property is mutable ...\n    // ... and can hold any value, similar to an instance property on a class\n    const ref = React.useRef();\n    // Store current value in ref\n    useEffect(() => {\n        ref.current = value;\n    }, [value]); // Only re-run if value changes\n    // Return previous value (happens before update in useEffect above)\n    return ref.current;\n}\n\nconst Allocations: React.FC<{ tokenImage: string; symbol: string; allocation: string }> = ({\n                                                                                               tokenImage,\n                                                                                               symbol,\n                                                                                               allocation,\n                                                                                           }) => {\n    const srcs = `${process.env.PUBLIC_URL}/images/icons/${tokenImage}`;\n    return (\n        <div style={{ marginTop: '20px' }}>\n            {}\n            <Text>My Allocations</Text>\n            <div style={{ display: 'flex', alignItems: 'center' }}>\n                <SmalltokenImage src={srcs} alt='token-logo' />\n                <Text bold>\n                    {allocation} {symbol}\n                </Text>\n            </div>\n        </div>\n    );\n};\n\nconst ActionCard: React.FC<ActionProps> = ({ account, whiteListed, project }) => {\n    const theme = useContext(ThemeContext);\n    const customTheme = useContext(CustomThemeContext);\n    const Paddress = getFindProject();\n\n    const [stats, setStats] = useState({\n        totalForSaleTokens: '-',\n        totalSoldTokens: '-',\n        remainingForSale: '-',\n        totalSales: '-',\n        expectedSales: '-',\n        percentage: '00.00',\n        tokenRate: '-',\n        totalParticipants: '-',\n    });\n    const [accountDetails, setAccountDetails] = useState({\n        balance: new TokenAmount(project.buyingCoin, BigInt(0)),\n        amount: new TokenAmount(project.sellingCoin, BigInt(0)),\n        maxPayableAmount: new TokenAmount(project.sellingCoin, BigInt(0)),\n        maxExpendable: new TokenAmount(project.buyingCoin, BigInt(0)),\n        rewardedAmount: new TokenAmount(project.sellingCoin, BigInt(0)),\n        redeemed: false,\n        whitelist: false,\n    });\n\n    const [poolEnded, setPoolEnded] = useState(false);\n    const { library } = useActiveWeb3React();\n\n    const contract = useLaunchpadContract(project.category);\n    const cat2 = project.category2 ?? project.category;\n    const contract2 = useLaunchpadContract(cat2);\n    const _cat2 = contract2 ?? contract;\n\n\n    useEffect(() => {\n        getAccountDetailsLaunchPad(_cat2, project, library, account)\n            .then((r) => setAccountDetails(r))\n            .catch(console.log);\n\n        checkEnded(contract, contract2).then((ended) => {\n            if (ended.round1 && !project.category2) {\n                setPoolEnded(true);\n            }\n            if (ended.round2 && project.category2) {\n                setPoolEnded(true);\n            }\n            if (!ended.round1) {\n                calculateLaunchpadStats(contract, project).then((r) => setStats(r));\n            }\n            if (ended.round1 && project.category2 && !ended.round2) {\n                calculateLaunchpadStats(contract2, project).then((r) => setStats(r));\n            }\n            if (ended.round1 && project.category2 && ended.round2){\n                calculateLaunchpadStats(contract, project, contract2).then((r) => setStats(r));\n            }\n        }).catch(e => console.log(e));\n    }, [account, library, contract, contract2, project, _cat2]);\n\n    const [onPurchaseModal] = useModal(<PurchaseModal address={Paddress} stats={stats}\n                                                      category={cat2} />, false);\n    // const tokenReport = {\n    //     title: `${project.progress} ${project.symbol}`,\n    // }\n\n    useEffect(() => () => console.log(''), []);\n\n    const percentage = parseFloat(stats.percentage).toFixed(4);\n    const totalSoldTokens = parseFloat(stats.totalSoldTokens).toFixed(4);\n    const totalSales = parseFloat(stats.totalSales).toFixed(4);\n    const expectedSales = parseFloat(stats.expectedSales).toFixed(2);\n    const { status } = project;\n\n    return (\n        <CardBody\n            style={{\n                width: '100%',\n                backgroundColor: theme.isDark ? customTheme.customColors?.BG1 : customTheme.customColors?.BG2,\n                display: 'flex',\n                flexDirection: 'column',\n                justifyContent: 'space-around',\n            }}\n        >\n            <ProgressGroup>\n                <Text bold as='h1' fontSize='24px'>\n                    {project.status === STATE.upcoming ? '-' : totalSoldTokens}{' '}\n                    <span style={{ color: theme.colors.textSubtle }}>{project.symbol} Token Sold</span>\n                </Text>\n                <Progress\n                    primaryStep={parseFloat(project.status === STATE.upcoming ? '' : percentage)}\n                    variant='flat'\n                />\n                <Flex justifyContent='space-between'>\n                    <Text color='textSubtle'>{project.status === STATE.upcoming ? '-' : percentage}%</Text>\n                    <Text color='textSubtle'>\n                        {project.status === STATE.upcoming ? '-' : totalSales} /{' '}\n                        {project.status === STATE.upcoming ? '-' : expectedSales} {project.buyingCoin.symbol}\n                    </Text>\n                </Flex>\n            </ProgressGroup>\n            <CustomDataGroup flexDirection='column'>\n                <Flex justifyContent='space-between'>\n                    <Text color='textSubtle'>{project.symbol} Price</Text>\n                    <Text>\n                        {project.status === STATE.upcoming ? '-' : stats.tokenRate} {project.buyingCoin.symbol}\n                    </Text>\n                </Flex>\n                <Flex justifyContent='space-between'>\n                    <Text color='textSubtle'>{project.symbol} Sold</Text>\n                    <Text>\n                        {project.status === STATE.upcoming ? '-' : stats.totalSoldTokens} {project.symbol}\n                    </Text>\n                </Flex>\n                <Flex justifyContent='space-between'>\n                    <Text color='textSubtle'>Total Raised</Text>\n                    <Text>\n                        {project.status === STATE.upcoming ? '-' : stats.totalSales} {project.buyingCoin.symbol}\n                    </Text>\n                </Flex>\n                <Flex justifyContent='space-between'>\n                    <Text color='primary'>Your Max Allocation</Text>\n                    <Text>\n                        {project.status === STATE.upcoming || project.status === STATE.completed\n                            ? `- ${project.symbol}` :\n                            project.category !== project.category2 || !project.category2\n                                ? `${accountDetails.maxPayableAmount.toExact()} ${project.symbol}`\n                                : 'No limit'}\n                    </Text>\n                </Flex>\n                <Flex justifyContent='space-between'>\n                    <Text color='primary'>Your Max BNB</Text>\n                    {/* <Text>{accountDetails.maxExpendable.toExact()} BNB</Text> */}\n                    {project.status === STATE.upcoming && !whiteListed ? (\n                        <Text>0 BNB</Text>\n                    ) : project.status === STATE.completed ?(\n                        <Text>- BNB</Text> \n                    ) :\n                    (\n                        <Text>\n                            {project.category !== project.category2 || !project.category2\n                                ? `${accountDetails.maxExpendable.toExact()} BNB`\n                                : 'No Limit'}{' '}\n                        </Text>\n                    )}\n                </Flex>\n            </CustomDataGroup>\n            {!account && status === STATE.active ? (\n                <div style={{ marginTop: '15px', padding: '10px 0px' }}>\n                    <UnlockButton fullWidth />\n                </div>\n            ) : !whiteListed ? (\n                <Allocations\n                    tokenImage={project.image}\n                    symbol={project.symbol}\n                    allocation={project.status === STATE.upcoming ? '0' : accountDetails.rewardedAmount.toExact()}\n                />\n            ) : (\n                <>\n                    {/* {!project.claimable ?\n                <div>\n                    {stats.remainingForSale === '-' ? <Button fullWidth disabled style={{marginTop: '10px', marginBottom: '10px'}}>Processing </Button> :\n                    <Button onClick={onPurchaseModal} fullWidth style={{marginTop: '10px', marginBottom: '10px'}} >Purchase {project.symbol}</Button>\n                    }\n\n                <Text>Thank you for participating, allocations will be sent shortly through a Multisender App.</Text>\n                </div> :\n                <Button onClick={onPurchaseModal} fullWidth style={{marginTop: '10px'}} disabled={stats.remainingForSale === '-'}>Purchase {project.symbol}</Button>\n                } */}\n\n                    {status === STATE.active ? (\n                        <>\n                            <Allocations\n                                tokenImage={project.image}\n                                symbol={project.symbol}\n                                allocation={accountDetails.rewardedAmount.toExact()}\n                            />\n\n                            {stats.remainingForSale && !poolEnded &&\n                            <Button\n                                onClick={onPurchaseModal}\n                                fullWidth\n                                style={{ marginTop: '10px', marginBottom: '10px' }}\n                            >\n                                Purchase {project.symbol}\n                            </Button>}\n\n                            {!stats.remainingForSale &&\n                            <Button disabled fullWidth style={{ marginTop: '10px', marginBottom: '10px' }}>\n                                SOLD OUT\n                            </Button>}\n\n                            {stats.remainingForSale && poolEnded &&\n                            <Button disabled fullWidth style={{ marginTop: '10px', marginBottom: '10px' }}>\n                                ENDED\n                            </Button>}\n                        </>\n                    ) : (\n                        status === STATE.upcoming && (\n                            <Allocations\n                                tokenImage={project.image}\n                                symbol={project.symbol}\n                                allocation={accountDetails.rewardedAmount.toExact()}\n                            />\n                        )\n                    )}\n                    {/* <Button onClick={onPurchaseModal} fullWidth style={{marginTop: '10px'}} disabled={stats.remainingForSale === '-'}>Purchase {project.symbol}</Button> */}\n                </>\n            )}\n        </CardBody>\n    );\n};\n\nconst ProjectComponent: React.FC = () => {\n    const { account } = useWeb3React();\n    const [whiteListed, setWhiteList] = useState(false);\n    const Paddress = getFindProject();\n    const project = useFindProjectByAddress(Paddress);\n    const history = useHistory();\n\n    useEffect(() => {\n        if (!Paddress) {\n            history.push('/projects');\n        }\n    }, [history, Paddress]);\n    const acc = useAccountWhiteList(account, project.address);\n    const pool = useGetPoolsByAddress(Paddress);\n    const { title, image, longDesc, longDesc2, longDesc3, buyingCoin, socMeds, wallpaperBg, status, category2 } = project;\n    const srcs = `${process.env.PUBLIC_URL}/images/icons/${image}`;\n\n    const [projectTokenInfo, setProjectTokenInfo] = useState({\n        totalSupply: '0',\n    });\n    const tokenContract = useTokenContract(project.sellingCoin.address);\n\n    useEffect(() => {\n        // tokenContract.balanceOf(account).then(console.log)\n        tokenContract\n            .totalSupply()\n            .then((r) => {\n                setProjectTokenInfo({\n                    totalSupply: new TokenAmount(project.sellingCoin, r).toExact({ groupSeparator: ',' }).toString(),\n                });\n            })\n            .catch(console.log);\n\n        if (acc) {\n            setWhiteList(true);\n        } else setWhiteList(false);\n    }, [acc, tokenContract, project.sellingCoin]);\n\n    const theme = useContext(ThemeContext);\n    const srcsBg = `${process.env.PUBLIC_URL}/images/icons/${wallpaperBg}`;\n    return (\n        <CCont>\n            <CHeader src={srcsBg}>\n                <TokenImage src={srcs} alt='token-image' />\n                <Heading bold fontSize='24px'>\n                    {title}\n                </Heading>\n            </CHeader>\n            <CBody>\n                <Flex justifyContent='space-between'>\n                    <Flex flex='1' flexDirection='column' padding='10px'>\n                        <Flex\n                            alignItems='center'\n                            justifyContent='space-between'\n                            marginTop='-20px'\n                            marginBottom='10px'\n                            padding='10px 0px'\n                        >\n                            <SocmedGroup>\n                                <Anchor href={socMeds?.[0]}>\n                                    <Globe />\n                                </Anchor>\n                                <Anchor href={socMeds?.[1]}>\n                                    <Twitter fill={theme.colors.text} />\n                                </Anchor>\n                                <Anchor href={socMeds?.[2]}>\n                                    <Send fill={theme.colors.text} />\n                                </Anchor>\n                                <Anchor href={socMeds?.[3]}>\n                                    <SvgIcon width={24} Icon={MediumIcon} />\n                                </Anchor>\n                            </SocmedGroup>\n                            {status === STATE.active ? (\n                                <StyledButton style={{ backgroundColor: '#32a31b' }}> {category2 ? 'R2' : 'R1'} LIVE NOW</StyledButton>\n                            ) : status === STATE.upcoming ? (\n                                <StyledButton style={{ backgroundColor: '#7a1ba3' }}>UPCOMING</StyledButton>\n                            ) : (\n                                <StyledButton style={{ backgroundColor: '#8e98a5' }}>COMPLETED</StyledButton>\n                            )}\n                        </Flex>\n                        <Flex flexDirection='column' justifyContent='space-between'>\n                            <TextDescription color='textSubtle' as='p'>\n                                {longDesc}\n                            </TextDescription>\n                            <TextDescription color='textSubtle' as='p'>\n                                {longDesc2}\n                            </TextDescription>\n                            <TextDescription color='textSubtle' as='p'>\n                                {longDesc3}\n                            </TextDescription>\n                        </Flex>\n                    </Flex>\n                    <Flex flex='1'>\n                        <ActionCard account={account} whiteListed={whiteListed} project={project} />\n                    </Flex>\n                </Flex>\n            </CBody>\n            <CFooter>\n                <FooterDetails pool={pool} project={project} projectTokenInfo={projectTokenInfo} />\n            </CFooter>\n        </CCont>\n    );\n};\n\nexport default ProjectComponent;\n","import React, { useCallback, useEffect, useMemo, useState } from 'react'\nimport { RouteComponentProps, Link } from 'react-router-dom';\nimport { ArrowRight, ChevronLeft } from 'react-feather';\nimport { Heading, Flex, Text, Breadcrumbs, Button } from '@sparkpointio/sparkswap-uikit'\nimport { useAppSelector, useFindProject as findProject, useFindProjectByAddress as findProjectByAddress, useSetProject as setProject } from 'state/hooks'\nimport styled from 'styled-components';\nimport Page from 'components/layout/Page';\nimport ProjectComponent from './ProjectComponent';\n\nconst Container = styled(Flex)`\n    flex-direction: column;\n    align-items: center;\n    padding: 20px;\n    max-width: 1200px;\n    width: 100%;\n    margin: 0 auto;\n`\nconst BackButton = styled(Link)`\n    display: flex;\n    align-items: center;\n    color: ${({theme}) => theme.colors.text};\n`\n\nconst Layout: React.FC <RouteComponentProps<{ProjectAddress?: string}>> = ({ match: {params: { ProjectAddress }}})  => {\n    const data = setProject(ProjectAddress)\n    const project = useAppSelector((state) => state.projects.data.find(p => p.address === data));\n\n\n    return (\n        <Page>\n            <Container>\n                <Flex style={{width: '100%', minHeight: '10vh'}} flexDirection=\"column\"  justifyContent=\"space-between\" marginTop=\"20px\" padding=\"5px 0px\">\n                <Heading fontSize=\"24px\" bold> SparkLaunch </Heading>\n                {/* <Flex justifyContent=\"flex-end\" style={{width: '100%'}}></Flex> */}\n                <Flex justifyContent=\"space-between\" marginBottom=\"3px\">\n                <Breadcrumbs>\n                    <Text>SparkLaunch</Text>\n                    <Text>{project?.symbol}</Text>\n                </Breadcrumbs>\n                    <BackButton to='/projects'><ChevronLeft /> PROJECTS </BackButton>\n                </Flex>\n\n                </Flex>\n                <ProjectComponent />\n            </Container>\n        </Page>\n    )\n}\n\nexport default Layout;\n"],"sourceRoot":""}